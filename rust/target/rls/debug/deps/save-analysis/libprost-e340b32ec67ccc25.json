{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","prost","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"prost-derive\"","-C","metadata=e340b32ec67ccc25","-C","extra-filename=-e340b32ec67ccc25","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","bytes=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libbytes-552991e5ef6892cf.rmeta","--extern","prost_derive=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost_derive-d74e20292bbf011c.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost-e340b32ec67ccc25.rmeta"},"prelude":{"crate_id":{"name":"prost","disambiguator":[13289197158038005334,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","num":5,"id":{"name":"prost_derive","disambiguator":[17296284745430083005,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","num":6,"id":{"name":"bytes","disambiguator":[15047865073548325156,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":0,"byte_end":2935,"line_start":1,"line_end":93,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":278,"byte_end":283,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"alias_span":null,"name":"bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":379,"byte_end":390,"line_start":19,"line_end":19,"column_start":24,"column_end":35},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":392,"byte_end":403,"line_start":19,"line_end":19,"column_start":37,"column_end":48},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":430,"byte_end":437,"line_start":20,"line_end":20,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":2933,"byte_end":2934,"line_start":93,"line_end":93,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Message","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":0,"byte_end":2935,"line_start":1,"line_end":93,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":35},{"krate":0,"index":105},{"krate":0,"index":243},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":451}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":89,"byte_end":95,"line_start":2,"line_end":2,"column_start":35,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3381,"byte_end":3392,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"DecodeError","qualname":"::error::DecodeError","value":"DecodeError {  }","parent":null,"children":[{"krate":0,"index":453}],"decl_id":null,"docs":" A Protobuf message decoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message decoding error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3066,"byte_end":3104,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3105,"byte_end":3108,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `DecodeError` indicates that the input buffer does not caontain a valid","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3109,"byte_end":3184,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ Protobuf message. The error details should be considered 'best effort': in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3185,"byte_end":3263,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ general it is not possible to exactly pinpoint why data is malformed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3264,"byte_end":3337,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3999,"byte_end":4002,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeError>::new","value":"pub fn new<impl Into<Cow<'static, str>>: Into<Cow>>(impl Into<Cow<'static, str>>)\n-> DecodeError","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DecodeError` with a 'best effort' root cause description.","sig":null,"attributes":[{"value":"/ Creates a new `DecodeError` with a 'best effort' root cause description.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3812,"byte_end":3888,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3893,"byte_end":3896,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3901,"byte_end":3956,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"cold","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3980,"byte_end":3987,"line_start":34,"line_end":34,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4415,"byte_end":4419,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"push","qualname":"<DecodeError>::push","value":"pub fn push(&mut Self, &'static str, &'static str)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a (message, field) name location pair on to the location stack.","sig":null,"attributes":[{"value":"/ Pushes a (message, field) name location pair on to the location stack.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4242,"byte_end":4316,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4321,"byte_end":4324,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4329,"byte_end":4384,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5670,"byte_end":5681,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"EncodeError","qualname":"::error::EncodeError","value":"EncodeError {  }","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":" A Protobuf message encoding error.","sig":null,"attributes":[{"value":"/ A Protobuf message encoding error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5399,"byte_end":5437,"line_start":82,"line_end":82,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5438,"byte_end":5441,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ `EncodeError` always indicates that a message failed to encode because the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5442,"byte_end":5520,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ provided buffer had insufficient capacity. Message encoding is otherwise","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5521,"byte_end":5597,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ infallible.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5598,"byte_end":5613,"line_start":86,"line_end":86,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":6023,"byte_end":6040,"line_start":103,"line_end":103,"column_start":12,"column_end":29},"name":"required_capacity","qualname":"<EncodeError>::required_capacity","value":"pub fn required_capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required buffer capacity to encode the message.\n","sig":null,"attributes":[{"value":"/ Returns the required buffer capacity to encode the message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5948,"byte_end":6011,"line_start":102,"line_end":102,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":6184,"byte_end":6193,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"remaining","qualname":"<EncodeError>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining length in the provided buffer at the time of encoding.\n","sig":null,"attributes":[{"value":"/ Returns the remaining length in the provided buffer at the time of encoding.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":6092,"byte_end":6172,"line_start":107,"line_end":107,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7102,"byte_end":7109,"line_start":14,"line_end":14,"column_start":11,"column_end":18},"name":"Message","qualname":"::message::Message","value":"Message: Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96}],"decl_id":null,"docs":" A Protocol Buffers message.\n","sig":null,"attributes":[{"value":"/ A Protocol Buffers message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7060,"byte_end":7091,"line_start":13,"line_end":13,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7348,"byte_end":7358,"line_start":21,"line_end":21,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"::message::Message::encode_raw","value":"pub fn encode_raw<B>(&Self, &mut B) where B: BufMut, Self: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7137,"byte_end":7173,"line_start":15,"line_end":15,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7178,"byte_end":7181,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ This method will panic if the buffer has insufficient capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7186,"byte_end":7253,"line_start":17,"line_end":17,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7258,"byte_end":7261,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7266,"byte_end":7321,"line_start":19,"line_end":19,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7593,"byte_end":7604,"line_start":30,"line_end":30,"column_start":8,"column_end":19},"name":"merge_field","qualname":"::message::Message::merge_field","value":"pub fn merge_field<B>(&mut Self, u32, WireType, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf, Self: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Decodes a field from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes a field from a buffer, and merges it into `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7437,"byte_end":7498,"line_start":26,"line_end":26,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7503,"byte_end":7506,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Meant to be used only by `Message` implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7511,"byte_end":7566,"line_start":28,"line_end":28,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7890,"byte_end":7901,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::message::Message::encoded_len","value":"pub fn encoded_len(&Self) -> usize","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns the encoded length of the message without a length delimiter.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the message without a length delimiter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7809,"byte_end":7882,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":8059,"byte_end":8065,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"encode","qualname":"::message::Message::encode","value":"pub fn encode<B>(&Self, &mut B) -> Result<(), EncodeError> where B: BufMut,\nSelf: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message to a buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7924,"byte_end":7960,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7965,"byte_end":7968,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7973,"byte_end":8051,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":8871,"byte_end":8894,"line_start":77,"line_end":77,"column_start":8,"column_end":31},"name":"encode_length_delimited","qualname":"::message::Message::encode_length_delimited","value":"pub fn encode_length_delimited<B>(&Self, &mut B) -> Result<(), EncodeError>\nwhere B: BufMut, Self: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Encodes the message with a length-delimiter to a buffer.","sig":null,"attributes":[{"value":"/ Encodes the message with a length-delimiter to a buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":8712,"byte_end":8772,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":8777,"byte_end":8780,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":8785,"byte_end":8863,"line_start":76,"line_end":76,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":9881,"byte_end":9887,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::message::Message::decode","value":"pub fn decode<B>(B) -> Result<Self, DecodeError> where B: Buf, Self: Default","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":9768,"byte_end":9821,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":9826,"byte_end":9829,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":9834,"byte_end":9873,"line_start":109,"line_end":109,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10181,"byte_end":10204,"line_start":120,"line_end":120,"column_start":8,"column_end":31},"name":"decode_length_delimited","qualname":"::message::Message::decode_length_delimited","value":"pub fn decode_length_delimited<B>(B) -> Result<Self, DecodeError> where\nB: Buf, Self: Default","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from the buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10102,"byte_end":10173,"line_start":119,"line_end":119,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10560,"byte_end":10565,"line_start":133,"line_end":133,"column_start":8,"column_end":13},"name":"merge","qualname":"::message::Message::merge","value":"pub fn merge<B>(&mut Self, B) -> Result<(), DecodeError> where B: Buf,\nSelf: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer, and merges it into `self`.","sig":null,"attributes":[{"value":"/ Decodes an instance of the message from a buffer, and merges it into `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10420,"byte_end":10500,"line_start":130,"line_end":130,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10505,"byte_end":10508,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The entire buffer will be consumed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10513,"byte_end":10552,"line_start":132,"line_end":132,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":11026,"byte_end":11048,"line_start":148,"line_end":148,"column_start":8,"column_end":30},"name":"merge_length_delimited","qualname":"::message::Message::merge_length_delimited","value":"pub fn merge_length_delimited<B>(&mut Self, B) -> Result<(), DecodeError>\nwhere B: Buf, Self: Sized","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from buffer, and\n merges it into `self`.\n","sig":null,"attributes":[{"value":"/ Decodes a length-delimited instance of the message from buffer, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10916,"byte_end":10987,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ merges it into `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":10992,"byte_end":11018,"line_start":147,"line_end":147,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":11387,"byte_end":11392,"line_start":162,"line_end":162,"column_start":8,"column_end":13},"name":"clear","qualname":"::message::Message::clear","value":"pub fn clear(&mut Self)","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Clears the message, resetting all fields to their default.\n","sig":null,"attributes":[{"value":"/ Clears the message, resetting all fields to their default.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":11317,"byte_end":11379,"line_start":161,"line_end":161,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoding","qualname":"::encoding","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":496},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":523},{"krate":0,"index":542},{"krate":0,"index":561},{"krate":0,"index":580},{"krate":0,"index":599},{"krate":0,"index":618},{"krate":0,"index":637},{"krate":0,"index":324},{"krate":0,"index":656},{"krate":0,"index":672},{"krate":0,"index":688},{"krate":0,"index":704},{"krate":0,"index":720},{"krate":0,"index":736},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":369},{"krate":0,"index":377},{"krate":0,"index":397},{"krate":0,"index":415},{"krate":0,"index":416}],"decl_id":null,"docs":" Utility functions and types for encoding and decoding Protobuf types.","sig":null,"attributes":[{"value":"/ Utility functions and types for encoding and decoding Protobuf types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":20950,"byte_end":21023,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21024,"byte_end":21027,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Meant to be used only from `Message` implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21028,"byte_end":21085,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"allow(clippy :: implicit_hasher, clippy :: ptr_arg)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21087,"byte_end":21138,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21612,"byte_end":21625,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"encode_varint","qualname":"::encoding::encode_varint","value":"pub fn encode_varint<B>(u64, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes an integer value into LEB128 variable length format, and writes it to the buffer.\n The buffer must have enough remaining space (maximum 10 bytes).\n","sig":null,"attributes":[{"value":"/ Encodes an integer value into LEB128 variable length format, and writes it to the buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21433,"byte_end":21526,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ The buffer must have enough remaining space (maximum 10 bytes).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21527,"byte_end":21594,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21595,"byte_end":21604,"line_start":25,"line_end":25,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":292},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21977,"byte_end":21990,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"decode_varint","qualname":"::encoding::decode_varint","value":"pub fn decode_varint<B>(&mut B) -> Result<u64, DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a LEB128-encoded variable length integer from the buffer.\n","sig":null,"attributes":[{"value":"/ Decodes a LEB128-encoded variable length integer from the buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21890,"byte_end":21959,"line_start":41,"line_end":41,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":21960,"byte_end":21969,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":27017,"byte_end":27030,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"DecodeContext","qualname":"::encoding::DecodeContext","value":"DecodeContext {  }","parent":null,"children":[{"krate":0,"index":491}],"decl_id":null,"docs":" Additional information passed to every decode/merge function.","sig":null,"attributes":[{"value":"/ Additional information passed to every decode/merge function.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":26750,"byte_end":26815,"line_start":192,"line_end":192,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":26816,"byte_end":26819,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ The context should be passed by value and can be freely cloned. When passing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":26820,"byte_end":26900,"line_start":194,"line_end":194,"column_start":1,"column_end":81}},{"value":"/ to a function which is decoding a nested object, then use `enter_recursion`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":26901,"byte_end":26981,"line_start":195,"line_end":195,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29376,"byte_end":29394,"line_start":270,"line_end":270,"column_start":8,"column_end":26},"name":"encoded_len_varint","qualname":"::encoding::encoded_len_varint","value":"pub fn encoded_len_varint(u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of the value in LEB128 variable length format.\n The returned value will be between 1 and 10, inclusive.\n","sig":null,"attributes":[{"value":"/ Returns the encoded length of the value in LEB128 variable length format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29221,"byte_end":29298,"line_start":267,"line_end":267,"column_start":1,"column_end":78}},{"value":"/ The returned value will be between 1 and 10, inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29299,"byte_end":29358,"line_start":268,"line_end":268,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29359,"byte_end":29368,"line_start":269,"line_end":269,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29707,"byte_end":29713,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"Varint","qualname":"::encoding::WireType::Varint","value":"WireType::Varint","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":500},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29723,"byte_end":29735,"line_start":280,"line_end":280,"column_start":5,"column_end":17},"name":"SixtyFourBit","qualname":"::encoding::WireType::SixtyFourBit","value":"WireType::SixtyFourBit","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":503},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29745,"byte_end":29760,"line_start":281,"line_end":281,"column_start":5,"column_end":20},"name":"LengthDelimited","qualname":"::encoding::WireType::LengthDelimited","value":"WireType::LengthDelimited","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29770,"byte_end":29780,"line_start":282,"line_end":282,"column_start":5,"column_end":15},"name":"StartGroup","qualname":"::encoding::WireType::StartGroup","value":"WireType::StartGroup","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29790,"byte_end":29798,"line_start":283,"line_end":283,"column_start":5,"column_end":13},"name":"EndGroup","qualname":"::encoding::WireType::EndGroup","value":"WireType::EndGroup","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29808,"byte_end":29820,"line_start":284,"line_end":284,"column_start":5,"column_end":17},"name":"ThirtyTwoBit","qualname":"::encoding::WireType::ThirtyTwoBit","value":"WireType::ThirtyTwoBit","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":496},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29692,"byte_end":29700,"line_start":278,"line_end":278,"column_start":10,"column_end":18},"name":"WireType","qualname":"::encoding::WireType","value":"pub enum WireType {\n    Varint = ,\n    SixtyFourBit = ,\n    LengthDelimited = ,\n    StartGroup = ,\n    EndGroup = ,\n    ThirtyTwoBit = ,\n}","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":512}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29671,"byte_end":29682,"line_start":277,"line_end":277,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":303},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29839,"byte_end":29846,"line_start":287,"line_end":287,"column_start":11,"column_end":18},"name":"MIN_TAG","qualname":"::encoding::MIN_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":304},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29867,"byte_end":29874,"line_start":288,"line_end":288,"column_start":11,"column_end":18},"name":"MAX_TAG","qualname":"::encoding::MAX_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":308},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30585,"byte_end":30595,"line_start":313,"line_end":313,"column_start":8,"column_end":18},"name":"encode_key","qualname":"::encoding::encode_key","value":"pub fn encode_key<B>(u32, WireType, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Encodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30470,"byte_end":30548,"line_start":310,"line_end":310,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30549,"byte_end":30567,"line_start":311,"line_end":311,"column_start":1,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30568,"byte_end":30577,"line_start":312,"line_end":312,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":310},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30932,"byte_end":30942,"line_start":325,"line_end":325,"column_start":8,"column_end":18},"name":"decode_key","qualname":"::encoding::decode_key","value":"pub fn decode_key<B>(&mut B) -> Result<(u32, WireType), DecodeError> where\nB: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"/ Decodes a Protobuf field key, which consists of a wire type designator and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30809,"byte_end":30887,"line_start":322,"line_end":322,"column_start":1,"column_end":79}},{"value":"/ the field tag.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30888,"byte_end":30906,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"inline(always)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":30907,"byte_end":30924,"line_start":324,"line_end":324,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31535,"byte_end":31542,"line_start":346,"line_end":346,"column_start":8,"column_end":15},"name":"key_len","qualname":"::encoding::key_len","value":"pub fn key_len(u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of an encoded Protobuf field key with the given tag.\n The returned width will be between 1 and 5 bytes (inclusive).\n","sig":null,"attributes":[{"value":"/ Returns the width of an encoded Protobuf field key with the given tag.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31377,"byte_end":31451,"line_start":343,"line_end":343,"column_start":1,"column_end":75}},{"value":"/ The returned width will be between 1 and 5 bytes (inclusive).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31452,"byte_end":31517,"line_start":344,"line_end":344,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31518,"byte_end":31527,"line_start":345,"line_end":345,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31729,"byte_end":31744,"line_start":353,"line_end":353,"column_start":8,"column_end":23},"name":"check_wire_type","qualname":"::encoding::check_wire_type","value":"pub fn check_wire_type(WireType, WireType) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the expected wire type matches the actual wire type,\n or returns an error result.\n","sig":null,"attributes":[{"value":"/ Checks that the expected wire type matches the actual wire type,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31611,"byte_end":31679,"line_start":350,"line_end":350,"column_start":1,"column_end":69}},{"value":"/ or returns an error result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31680,"byte_end":31711,"line_start":351,"line_end":351,"column_start":1,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":31712,"byte_end":31721,"line_start":352,"line_end":352,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":32151,"byte_end":32161,"line_start":365,"line_end":365,"column_start":8,"column_end":18},"name":"merge_loop","qualname":"::encoding::merge_loop","value":"pub fn merge_loop<T, M, B>(&mut T, &mut B, DecodeContext, M)\n-> Result<(), DecodeError> where M: FnMut(&mut T, &mut B, DecodeContext) ->\nResult<(), DecodeError>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Helper function which abstracts reading a length delimiter prefix followed\n by decoding values until the length of bytes is exhausted.\n","sig":null,"attributes":[{"value":"/ Helper function which abstracts reading a length delimiter prefix followed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":32002,"byte_end":32080,"line_start":363,"line_end":363,"column_start":1,"column_end":79}},{"value":"/ by decoding values until the length of bytes is exhausted.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":32081,"byte_end":32143,"line_start":364,"line_end":364,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":32794,"byte_end":32804,"line_start":392,"line_end":392,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::encoding::skip_field","value":"pub fn skip_field<B>(WireType, u32, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39403,"byte_end":39407,"line_start":586,"line_end":586,"column_start":15,"column_end":19},"name":"bool","qualname":"::encoding::bool","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":537},{"krate":0,"index":529},{"krate":0,"index":539},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39521,"byte_end":39526,"line_start":589,"line_end":589,"column_start":14,"column_end":19},"name":"int32","qualname":"::encoding::int32","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":556},{"krate":0,"index":548},{"krate":0,"index":558},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":561},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39542,"byte_end":39547,"line_start":590,"line_end":590,"column_start":14,"column_end":19},"name":"int64","qualname":"::encoding::int64","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":575},{"krate":0,"index":567},{"krate":0,"index":577},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":580},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39563,"byte_end":39569,"line_start":591,"line_end":591,"column_start":14,"column_end":20},"name":"uint32","qualname":"::encoding::uint32","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":594},{"krate":0,"index":586},{"krate":0,"index":596},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":599},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39585,"byte_end":39591,"line_start":592,"line_end":592,"column_start":14,"column_end":20},"name":"uint64","qualname":"::encoding::uint64","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":613},{"krate":0,"index":605},{"krate":0,"index":615},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":618},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39607,"byte_end":39613,"line_start":593,"line_end":593,"column_start":14,"column_end":20},"name":"sint32","qualname":"::encoding::sint32","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":632},{"krate":0,"index":624},{"krate":0,"index":634},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":637},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":39806,"byte_end":39812,"line_start":601,"line_end":601,"column_start":14,"column_end":20},"name":"sint64","qualname":"::encoding::sint64","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":651},{"krate":0,"index":643},{"krate":0,"index":653},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":649}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":656},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":43541,"byte_end":43546,"line_start":721,"line_end":721,"column_start":5,"column_end":10},"name":"float","qualname":"::encoding::float","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":667},{"krate":0,"index":662},{"krate":0,"index":669},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":672},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":43644,"byte_end":43650,"line_start":729,"line_end":729,"column_start":5,"column_end":11},"name":"double","qualname":"::encoding::double","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":683},{"krate":0,"index":678},{"krate":0,"index":685},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":688},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":43748,"byte_end":43755,"line_start":737,"line_end":737,"column_start":5,"column_end":12},"name":"fixed32","qualname":"::encoding::fixed32","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":699},{"krate":0,"index":694},{"krate":0,"index":701},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":704},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":43853,"byte_end":43860,"line_start":745,"line_end":745,"column_start":5,"column_end":12},"name":"fixed64","qualname":"::encoding::fixed64","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":715},{"krate":0,"index":710},{"krate":0,"index":717},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":720},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":43958,"byte_end":43966,"line_start":753,"line_end":753,"column_start":5,"column_end":13},"name":"sfixed32","qualname":"::encoding::sfixed32","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":731},{"krate":0,"index":726},{"krate":0,"index":733},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":736},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":44064,"byte_end":44072,"line_start":761,"line_end":761,"column_start":5,"column_end":13},"name":"sfixed64","qualname":"::encoding::sfixed64","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":747},{"krate":0,"index":742},{"krate":0,"index":749},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":45237,"byte_end":45243,"line_start":803,"line_end":803,"column_start":9,"column_end":15},"name":"string","qualname":"::encoding::string","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":757},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":755}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":328},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":45276,"byte_end":45282,"line_start":806,"line_end":806,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::string::encode","value":"pub fn encode<B>(u32, &String, &mut B) where B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":330},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":45523,"byte_end":45528,"line_start":814,"line_end":814,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::string::merge","value":"pub fn merge<B>(WireType, &mut String, &mut B, DecodeContext)\n-> Result<(), DecodeError> where B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":339},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48182,"byte_end":48194,"line_start":885,"line_end":885,"column_start":11,"column_end":23},"name":"BytesAdapter","qualname":"::encoding::BytesAdapter","value":"BytesAdapter: sealed::BytesAdapter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":348},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48279,"byte_end":48291,"line_start":890,"line_end":890,"column_start":15,"column_end":27},"name":"BytesAdapter","qualname":"::encoding::sealed::BytesAdapter","value":"BytesAdapter: Default + Sized + 'static","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48332,"byte_end":48335,"line_start":891,"line_end":891,"column_start":12,"column_end":15},"name":"len","qualname":"::encoding::sealed::BytesAdapter::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48446,"byte_end":48458,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"replace_with","qualname":"::encoding::sealed::BytesAdapter::replace_with","value":"pub fn replace_with<B>(&mut Self, B) where B: Buf","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Replace contents of this buffer with the contents of another buffer.\n","sig":null,"attributes":[{"value":"/ Replace contents of this buffer with the contents of another buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48362,"byte_end":48434,"line_start":893,"line_end":893,"column_start":9,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48594,"byte_end":48603,"line_start":899,"line_end":899,"column_start":12,"column_end":21},"name":"append_to","qualname":"::encoding::sealed::BytesAdapter::append_to","value":"pub fn append_to<B>(&Self, &mut B) where B: BufMut","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":" Appends this buffer to the (contents of) other buffer.\n","sig":null,"attributes":[{"value":"/ Appends this buffer to the (contents of) other buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48524,"byte_end":48582,"line_start":898,"line_end":898,"column_start":9,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48676,"byte_end":48684,"line_start":903,"line_end":903,"column_start":12,"column_end":20},"name":"is_empty","qualname":"::encoding::sealed::BytesAdapter::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":348},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49558,"byte_end":49563,"line_start":955,"line_end":955,"column_start":9,"column_end":14},"name":"bytes","qualname":"::encoding::bytes","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":767},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":764}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":371},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49596,"byte_end":49602,"line_start":958,"line_end":958,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::bytes::encode","value":"pub fn encode<A, B>(u32, &A, &mut B) where A: BytesAdapter, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":374},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49856,"byte_end":49861,"line_start":968,"line_end":968,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::bytes::merge","value":"pub fn merge<A, B>(WireType, &mut A, &mut B, DecodeContext)\n-> Result<(), DecodeError> where A: BytesAdapter, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":377},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":52608,"byte_end":52615,"line_start":1038,"line_end":1038,"column_start":9,"column_end":16},"name":"message","qualname":"::encoding::message","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":394}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":52648,"byte_end":52654,"line_start":1041,"line_end":1041,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::message::encode","value":"pub fn encode<M, B>(u32, &M, &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":52906,"byte_end":52911,"line_start":1051,"line_end":1051,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::message::merge","value":"pub fn merge<M, B>(WireType, &mut M, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":386},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":53490,"byte_end":53505,"line_start":1074,"line_end":1074,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::message::encode_repeated","value":"pub fn encode_repeated<M, B>(u32, &[M], &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":53699,"byte_end":53713,"line_start":1084,"line_end":1084,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::message::merge_repeated","value":"pub fn merge_repeated<M, B>(WireType, &mut Vec<M>, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":392},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54163,"byte_end":54174,"line_start":1102,"line_end":1102,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::message::encoded_len","value":"pub fn encoded_len<M>(u32, &M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54142,"byte_end":54151,"line_start":1101,"line_end":1101,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54371,"byte_end":54391,"line_start":1111,"line_end":1111,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::message::encoded_len_repeated","value":"pub fn encoded_len_repeated<M>(u32, &[M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54350,"byte_end":54359,"line_start":1110,"line_end":1110,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":397},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54708,"byte_end":54713,"line_start":1124,"line_end":1124,"column_start":9,"column_end":14},"name":"group","qualname":"::encoding::group","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54746,"byte_end":54752,"line_start":1127,"line_end":1127,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::group::encode","value":"pub fn encode<M, B>(u32, &M, &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":402},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":54995,"byte_end":55000,"line_start":1137,"line_end":1137,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::group::merge","value":"pub fn merge<M, B>(u32, WireType, &mut M, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":405},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":55733,"byte_end":55748,"line_start":1164,"line_end":1164,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::group::encode_repeated","value":"pub fn encode_repeated<M, B>(u32, &[M], &mut B) where M: Message, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":408},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":55942,"byte_end":55956,"line_start":1174,"line_end":1174,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::group::merge_repeated","value":"pub fn merge_repeated<M, B>(u32, WireType, &mut Vec<M>, &mut B, DecodeContext)\n-> Result<(), DecodeError> where M: Message + Default, B: Buf","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":56419,"byte_end":56430,"line_start":1193,"line_end":1193,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::group::encoded_len","value":"pub fn encoded_len<M>(u32, &M) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":56398,"byte_end":56407,"line_start":1192,"line_end":1192,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":56575,"byte_end":56595,"line_start":1201,"line_end":1201,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::group::encoded_len_repeated","value":"pub fn encoded_len_repeated<M>(u32, &[M]) -> usize where M: Message","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":56554,"byte_end":56563,"line_start":1200,"line_end":1200,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":416},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":63282,"byte_end":63291,"line_start":1402,"line_end":1402,"column_start":9,"column_end":18},"name":"btree_map","qualname":"::encoding::btree_map","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":793},{"krate":0,"index":801},{"krate":0,"index":808}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":445},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":958,"byte_end":981,"line_start":37,"line_end":37,"column_start":8,"column_end":31},"name":"encode_length_delimiter","qualname":"::encode_length_delimiter","value":"pub fn encode_length_delimiter<B>(usize, &mut B) -> Result<(), EncodeError>\nwhere B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Encodes a length delimiter to the buffer.","sig":null,"attributes":[{"value":"/ Encodes a length delimiter to the buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":733,"byte_end":778,"line_start":31,"line_end":31,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":779,"byte_end":782,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ See [Message.encode_length_delimited] for more info.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":783,"byte_end":839,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":840,"byte_end":843,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ An error will be returned if the buffer does not have sufficient capacity to encode the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":844,"byte_end":935,"line_start":35,"line_end":35,"column_start":1,"column_end":92}},{"value":"/ delimiter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":936,"byte_end":950,"line_start":36,"line_end":36,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":447},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1564,"byte_end":1584,"line_start":55,"line_end":55,"column_start":8,"column_end":28},"name":"length_delimiter_len","qualname":"::length_delimiter_len","value":"pub fn length_delimiter_len(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of a length delimiter.","sig":null,"attributes":[{"value":"/ Returns the encoded length of a length delimiter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1324,"byte_end":1377,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Applications may use this method to ensure sufficient buffer capacity before calling","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1382,"byte_end":1470,"line_start":53,"line_end":53,"column_start":1,"column_end":89}},{"value":"/ `encode_length_delimiter`. The returned size will be between 1 and 10, inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1471,"byte_end":1556,"line_start":54,"line_end":54,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":2239,"byte_end":2262,"line_start":70,"line_end":70,"column_start":8,"column_end":31},"name":"decode_length_delimiter","qualname":"::decode_length_delimiter","value":"pub fn decode_length_delimiter<B>(B) -> Result<usize, DecodeError> where\nB: Buf","parent":null,"children":[],"decl_id":null,"docs":" Decodes a length delimiter from the buffer.","sig":null,"attributes":[{"value":"/ Decodes a length delimiter from the buffer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1652,"byte_end":1699,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1700,"byte_end":1703,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This method allows the length delimiter to be decoded independently of the message, when the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1704,"byte_end":1800,"line_start":61,"line_end":61,"column_start":1,"column_end":97}},{"value":"/ message is encoded with [Message.encode_length_delimited].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1801,"byte_end":1863,"line_start":62,"line_end":62,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ An error may be returned in two cases:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1868,"byte_end":1910,"line_start":64,"line_end":64,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1911,"byte_end":1914,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * If the supplied buffer contains fewer than 10 bytes, then an error indicates that more","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":1915,"byte_end":2008,"line_start":66,"line_end":66,"column_start":1,"column_end":94}},{"value":"/    input is required to decode the full delimiter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":2009,"byte_end":2063,"line_start":67,"line_end":67,"column_start":1,"column_end":55}},{"value":"/  * If the supplied buffer contains more than 10 bytes, then the buffer contains an invalid","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":2064,"byte_end":2158,"line_start":68,"line_end":68,"column_start":1,"column_end":95}},{"value":"/    delimiter, and typically the buffer should be considered corrupt.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":2159,"byte_end":2231,"line_start":69,"line_end":69,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3794,"byte_end":3805,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4555,"byte_end":4566,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4829,"byte_end":4840,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5735,"byte_end":5746,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":6266,"byte_end":6277,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":11428,"byte_end":11431,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":18154,"byte_end":18160,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":18948,"byte_end":18951,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":19740,"byte_end":19745,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":27446,"byte_end":27459,"line_start":208,"line_end":208,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":27784,"byte_end":27797,"line_start":224,"line_end":224,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29920,"byte_end":29928,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":46672,"byte_end":46681,"line_start":838,"line_end":838,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48771,"byte_end":48776,"line_start":909,"line_end":909,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48811,"byte_end":48816,"line_start":911,"line_end":911,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49157,"byte_end":49160,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49199,"byte_end":49202,"line_start":933,"line_end":933,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/lib.rs","byte_start":345,"byte_end":353,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":243}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":3794,"byte_end":3805,"line_start":29,"line_end":29,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4555,"byte_end":4566,"line_start":53,"line_end":53,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":4829,"byte_end":4840,"line_start":62,"line_end":62,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":452},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":5735,"byte_end":5746,"line_start":93,"line_end":93,"column_start":6,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/error.rs","byte_start":6266,"byte_end":6277,"line_start":113,"line_end":113,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":475},"to":{"krate":1,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7111,"byte_end":7116,"line_start":14,"line_end":14,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":9687},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7119,"byte_end":7123,"line_start":14,"line_end":14,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":3057},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":7126,"byte_end":7130,"line_start":14,"line_end":14,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":1,"index":3069},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/message.rs","byte_start":11428,"byte_end":11431,"line_start":165,"line_end":165,"column_start":21,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":4,"index":321},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":18154,"byte_end":18160,"line_start":288,"line_end":288,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":4,"index":7626},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":18948,"byte_end":18951,"line_start":326,"line_end":326,"column_start":18,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/types.rs","byte_start":19740,"byte_end":19745,"line_start":364,"line_end":364,"column_start":18,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":6,"index":440},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":27446,"byte_end":27459,"line_start":208,"line_end":208,"column_start":18,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":490},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":27784,"byte_end":27797,"line_start":224,"line_end":224,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":29920,"byte_end":29928,"line_start":290,"line_end":290,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":496},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":46672,"byte_end":46681,"line_start":838,"line_end":838,"column_start":31,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":332},"to":{"krate":1,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48204,"byte_end":48216,"line_start":885,"line_end":885,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":348},"to":{"krate":0,"index":339}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48293,"byte_end":48300,"line_start":890,"line_end":890,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":3035},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48303,"byte_end":48308,"line_start":890,"line_end":890,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":1,"index":3062},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48771,"byte_end":48776,"line_start":909,"line_end":909,"column_start":23,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":6,"index":440},"to":{"krate":0,"index":339}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":48811,"byte_end":48816,"line_start":911,"line_end":911,"column_start":31,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":6,"index":440},"to":{"krate":0,"index":348}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49157,"byte_end":49160,"line_start":931,"line_end":931,"column_start":23,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":339}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.9.0/src/encoding.rs","byte_start":49199,"byte_end":49202,"line_start":933,"line_end":933,"column_start":31,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":4,"index":7089},"to":{"krate":0,"index":348}}]}