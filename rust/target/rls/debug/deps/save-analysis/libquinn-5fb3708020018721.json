{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","quinn","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"native-certs\"","--cfg","feature=\"ring\"","--cfg","feature=\"rustls\"","--cfg","feature=\"tls-rustls\"","--cfg","feature=\"webpki\"","-C","metadata=5fb3708020018721","-C","extra-filename=-5fb3708020018721","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","bytes=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libbytes-71069cfccda27061.rmeta","--extern","futures_channel=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfutures_channel-cc8268b578164a79.rmeta","--extern","futures_util=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfutures_util-7fc3bb1070350c6f.rmeta","--extern","fxhash=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfxhash-dadda7de09f1e40d.rmeta","--extern","proto=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libquinn_proto-5833419cac96b85c.rmeta","--extern","udp=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libquinn_udp-c6385b3f3234d847.rmeta","--extern","rustls=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/librustls-9d76adb215a6cb6e.rmeta","--extern","thiserror=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libthiserror-c7ecac8e3ed05fc3.rmeta","--extern","tokio=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtokio-ab0c170bd08d986a.rmeta","--extern","tracing=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtracing-196313e39643b452.rmeta","--extern","webpki=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libwebpki-18852d25aa1907e6.rmeta","--cap-lints","allow","-L","native=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/build/ring-8cf9cb36f08666ec/out","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libquinn-5fb3708020018721.rmeta"},"prelude":{"crate_id":{"name":"quinn","disambiguator":[11320873173027094157,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":20,"id":{"name":"bytes","disambiguator":[1173452260237162938,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":21,"id":{"name":"futures_channel","disambiguator":[17804652917457386499,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":22,"id":{"name":"futures_core","disambiguator":[4012493577413133877,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":23,"id":{"name":"futures_sink","disambiguator":[1625511151146650609,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":24,"id":{"name":"futures_util","disambiguator":[8554587919257822248,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":25,"id":{"name":"pin_utils","disambiguator":[1249738907960169761,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":26,"id":{"name":"futures_macro","disambiguator":[17747157522268669736,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":27,"id":{"name":"futures_task","disambiguator":[665949121450103632,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[10811595795888566755,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":29,"id":{"name":"slab","disambiguator":[16586258314723481731,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":30,"id":{"name":"futures_io","disambiguator":[6452517159031921328,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":31,"id":{"name":"futures","disambiguator":[10251878124443451294,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":32,"id":{"name":"memchr","disambiguator":[13028180200298329348,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":33,"id":{"name":"fxhash","disambiguator":[6452254562725693554,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":34,"id":{"name":"byteorder","disambiguator":[16549712766347989126,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":35,"id":{"name":"quinn_proto","disambiguator":[8176149674783781619,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":36,"id":{"name":"thiserror","disambiguator":[4152554040384203565,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":37,"id":{"name":"thiserror_impl","disambiguator":[11709532727904576165,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":38,"id":{"name":"tinyvec","disambiguator":[3818374257031611640,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":39,"id":{"name":"tinyvec_macros","disambiguator":[7935087283495694825,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":40,"id":{"name":"rand","disambiguator":[11137246826035999640,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":41,"id":{"name":"rand_core","disambiguator":[4677866172908563295,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":42,"id":{"name":"getrandom","disambiguator":[17932864278009191628,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":43,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":44,"id":{"name":"libc","disambiguator":[4746252012921055962,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":45,"id":{"name":"rand_chacha","disambiguator":[12133928698714370424,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":46,"id":{"name":"ppv_lite86","disambiguator":[5856322367314168531,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":47,"id":{"name":"tracing","disambiguator":[1532921516066044995,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":48,"id":{"name":"tracing_core","disambiguator":[606415515090563619,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":49,"id":{"name":"once_cell","disambiguator":[16438231570947150907,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":50,"id":{"name":"tracing_attributes","disambiguator":[10310073681641115920,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":51,"id":{"name":"log","disambiguator":[4656748892604770465,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":52,"id":{"name":"ring","disambiguator":[14399436650095174870,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":53,"id":{"name":"untrusted","disambiguator":[6078178184301017772,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":54,"id":{"name":"rustls","disambiguator":[6135092760716730367,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":55,"id":{"name":"webpki","disambiguator":[7348953687198085690,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":56,"id":{"name":"sct","disambiguator":[16710573872558699377,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":57,"id":{"name":"rustls_native_certs","disambiguator":[8065345927079706490,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":58,"id":{"name":"security_framework","disambiguator":[6396882531044968480,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":59,"id":{"name":"core_foundation","disambiguator":[9650389341857209546,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":60,"id":{"name":"core_foundation_sys","disambiguator":[12237805066716872259,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":61,"id":{"name":"security_framework_sys","disambiguator":[132301565376384050,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":62,"id":{"name":"bitflags","disambiguator":[723118973762805747,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":63,"id":{"name":"rustls_pemfile","disambiguator":[5515458492782298791,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":64,"id":{"name":"base64","disambiguator":[13747206624094728466,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":65,"id":{"name":"tokio","disambiguator":[3680146692382752510,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":66,"id":{"name":"parking_lot","disambiguator":[5007731362612173479,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":67,"id":{"name":"instant","disambiguator":[15723746951671031144,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":68,"id":{"name":"lock_api","disambiguator":[12015075101561171174,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":69,"id":{"name":"scopeguard","disambiguator":[3001932468802176528,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":70,"id":{"name":"parking_lot_core","disambiguator":[931216837901866193,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":71,"id":{"name":"smallvec","disambiguator":[6636852960227244077,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":72,"id":{"name":"mio","disambiguator":[946356350541395615,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":73,"id":{"name":"tokio_macros","disambiguator":[15978592266059792097,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":74,"id":{"name":"num_cpus","disambiguator":[1020557586879873658,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":75,"id":{"name":"signal_hook_registry","disambiguator":[7306478639986397422,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":76,"id":{"name":"quinn_udp","disambiguator":[5287276049746437721,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","num":77,"id":{"name":"socket2","disambiguator":[16585751373423684669,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":0,"byte_end":4602,"line_start":1,"line_end":105,"column_start":1,"column_end":61}},"imports":[{"kind":"Use","ref_id":{"krate":35,"index":3137},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2654,"byte_end":2664,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"congestion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":2251},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2666,"byte_end":2672,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"alias_span":null,"name":"crypto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":8015},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2674,"byte_end":2690,"line_start":53,"line_end":53,"column_start":25,"column_end":41},"alias_span":null,"name":"ApplicationClose","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":3944},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2692,"byte_end":2697,"line_start":53,"line_end":53,"column_start":43,"column_end":48},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7729},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2699,"byte_end":2711,"line_start":53,"line_end":53,"column_start":50,"column_end":62},"alias_span":null,"name":"ClientConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7799},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2713,"byte_end":2724,"line_start":53,"line_end":53,"column_start":64,"column_end":75},"alias_span":null,"name":"ConfigError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":8828},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2726,"byte_end":2738,"line_start":53,"line_end":53,"column_start":77,"column_end":89},"alias_span":null,"name":"ConnectError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":8000},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2744,"byte_end":2759,"line_start":54,"line_end":54,"column_start":5,"column_end":20},"alias_span":null,"name":"ConnectionClose","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7620},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2761,"byte_end":2776,"line_start":54,"line_end":54,"column_start":22,"column_end":37},"alias_span":null,"name":"ConnectionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7712},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2778,"byte_end":2792,"line_start":54,"line_end":54,"column_start":39,"column_end":53},"alias_span":null,"name":"EndpointConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7815},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2794,"byte_end":2805,"line_start":54,"line_end":54,"column_start":55,"column_end":66},"alias_span":null,"name":"IdleTimeout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":7719},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2807,"byte_end":2819,"line_start":54,"line_end":54,"column_start":68,"column_end":80},"alias_span":null,"name":"ServerConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":9313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2821,"byte_end":2829,"line_start":54,"line_end":54,"column_start":82,"column_end":90},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":9314},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2821,"byte_end":2829,"line_start":54,"line_end":54,"column_start":82,"column_end":90},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":9335},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2835,"byte_end":2843,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Transmit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":2143},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2845,"byte_end":2860,"line_start":55,"line_end":55,"column_start":15,"column_end":30},"alias_span":null,"name":"TransportConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":3895},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2862,"byte_end":2868,"line_start":55,"line_end":55,"column_start":32,"column_end":38},"alias_span":null,"name":"VarInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":969},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2907,"byte_end":2917,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"alias_span":null,"name":"Connecting","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2919,"byte_end":2929,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2931,"byte_end":2940,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"alias_span":null,"name":"Datagrams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2942,"byte_end":2959,"line_start":59,"line_end":59,"column_start":40,"column_end":57},"alias_span":null,"name":"IncomingBiStreams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2961,"byte_end":2979,"line_start":59,"line_end":59,"column_start":59,"column_end":77},"alias_span":null,"name":"IncomingUniStreams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2981,"byte_end":2994,"line_start":59,"line_end":59,"column_start":79,"column_end":92},"alias_span":null,"name":"NewConnection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3000,"byte_end":3006,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"alias_span":null,"name":"OpenBi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3008,"byte_end":3015,"line_start":60,"line_end":60,"column_start":13,"column_end":20},"alias_span":null,"name":"OpenUni","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1037},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3017,"byte_end":3034,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"alias_span":null,"name":"SendDatagramError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3036,"byte_end":3051,"line_start":60,"line_end":60,"column_start":41,"column_end":56},"alias_span":null,"name":"ZeroRttAccepted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3082,"byte_end":3090,"line_start":62,"line_end":62,"column_start":27,"column_end":35},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3092,"byte_end":3100,"line_start":62,"line_end":62,"column_start":37,"column_end":45},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":607},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3137,"byte_end":3141,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3143,"byte_end":3152,"line_start":64,"line_end":64,"column_start":11,"column_end":20},"alias_span":null,"name":"ReadChunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":632},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3154,"byte_end":3164,"line_start":64,"line_end":64,"column_start":22,"column_end":32},"alias_span":null,"name":"ReadChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":64,"line_end":64,"column_start":34,"column_end":43},"alias_span":null,"name":"ReadError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3177,"byte_end":3186,"line_start":64,"line_end":64,"column_start":45,"column_end":54},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1233},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3188,"byte_end":3202,"line_start":64,"line_end":64,"column_start":56,"column_end":70},"alias_span":null,"name":"ReadExactError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3204,"byte_end":3213,"line_start":64,"line_end":64,"column_start":72,"column_end":81},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1160},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3215,"byte_end":3229,"line_start":64,"line_end":64,"column_start":83,"column_end":97},"alias_span":null,"name":"ReadToEndError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1152},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3235,"byte_end":3245,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"alias_span":null,"name":"RecvStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3284,"byte_end":3294,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"alias_span":null,"name":"SendStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3296,"byte_end":3308,"line_start":68,"line_end":68,"column_start":17,"column_end":29},"alias_span":null,"name":"StoppedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":753},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3310,"byte_end":3315,"line_start":68,"line_end":68,"column_start":31,"column_end":36},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3317,"byte_end":3325,"line_start":68,"line_end":68,"column_start":38,"column_end":46},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3327,"byte_end":3341,"line_start":68,"line_end":68,"column_start":48,"column_end":62},"alias_span":null,"name":"WriteAllChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3343,"byte_end":3353,"line_start":68,"line_end":68,"column_start":64,"column_end":74},"alias_span":null,"name":"WriteChunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":770},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3355,"byte_end":3366,"line_start":68,"line_end":68,"column_start":76,"column_end":87},"alias_span":null,"name":"WriteChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1285},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":3368,"byte_end":3378,"line_start":68,"line_end":68,"column_start":89,"column_end":99},"alias_span":null,"name":"WriteError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":0,"byte_end":4602,"line_start":1,"line_end":105,"column_start":1,"column_end":61},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":18},{"krate":0,"index":272},{"krate":0,"index":451},{"krate":0,"index":489},{"krate":0,"index":642},{"krate":0,"index":800},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":1377},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1395},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958}],"decl_id":null,"docs":" QUIC transport protocol support for Tokio","sig":null,"attributes":[{"value":"/ QUIC transport protocol support for Tokio","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [QUIC](https://en.wikipedia.org/wiki/QUIC) is a modern transport protocol addressing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":50,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ shortcomings of TCP, such as head-of-line blocking, poor security, slow handshakes, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":139,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ inefficient congestion control. This crate provides a portable userspace implementation. It","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":231,"byte_end":326,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ builds on top of quinn-proto, which implements protocol logic independent of any particular","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":327,"byte_end":422,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":423,"byte_end":435,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":436,"byte_end":439,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The entry point of this crate is the [`Endpoint`](struct.Endpoint.html).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":440,"byte_end":516,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":517,"byte_end":520,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # About QUIC","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":521,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":538,"byte_end":541,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A QUIC connection is an association between two endpoints. The endpoint which initiates the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":542,"byte_end":637,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ connection is termed the client, and the endpoint which accepts it is termed the server. A","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":638,"byte_end":732,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ single endpoint may function as both client and server for different connections, for example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":733,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ in a peer-to-peer application. To communicate application data, each endpoint may open streams","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":831,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ up to a limit dictated by its peer. Typically, that limit is increased as old streams are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":930,"byte_end":1023,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ finished.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1024,"byte_end":1037,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1038,"byte_end":1041,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Streams may be unidirectional or bidirectional, and are cheap to create and disposable. For","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1042,"byte_end":1137,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ example, a traditionally datagram-oriented application could use a new stream for every","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1138,"byte_end":1229,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ message it wants to send, no longer needing to worry about MTUs. Bidirectional streams behave","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1230,"byte_end":1327,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ much like a traditional TCP connection, and are useful for sending messages that have an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1328,"byte_end":1420,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ immediate response, such as an HTTP request. Stream data is delivered reliably, and there is no","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1421,"byte_end":1520,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ ordering enforced between data on different streams.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1521,"byte_end":1577,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1578,"byte_end":1581,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ By avoiding head-of-line blocking and providing unified congestion control across all streams","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1582,"byte_end":1679,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ of a connection, QUIC is able to provide higher throughput and lower latency than one or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1680,"byte_end":1772,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ multiple TCP connections between the same two hosts, while providing more useful behavior than","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1773,"byte_end":1871,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ raw UDP sockets.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1872,"byte_end":1892,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1893,"byte_end":1896,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Quinn also exposes unreliable datagrams, which are a low-level primitive preferred when","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1897,"byte_end":1988,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"/ automatic fragmentation and retransmission of certain data is not desired.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":1989,"byte_end":2067,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ QUIC uses encryption and identity verification built directly on TLS 1.3. Just as with a TLS","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2072,"byte_end":2168,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ server, it is useful for a QUIC server to be identified by a certificate signed by a trusted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2169,"byte_end":2265,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ authority. If this is infeasible--for example, if servers are short-lived or not associated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2266,"byte_end":2361,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ with a domain name--then as with TLS, self-signed certificates can be used to provide","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2362,"byte_end":2451,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/ encryption alone.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2452,"byte_end":2473,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/lib.rs","byte_start":2474,"byte_end":2496,"line_start":40,"line_end":40,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":8043,"byte_end":8053,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"Connecting","qualname":"::connection::Connecting","value":"Connecting {  }","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972}],"decl_id":null,"docs":" In-progress connection attempt future\n","sig":null,"attributes":[{"value":"/ In-progress connection attempt future","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":7891,"byte_end":7932,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":7950,"byte_end":8031,"line_start":34,"line_end":34,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10529,"byte_end":10538,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"into_0rtt","qualname":"<Connecting>::into_0rtt","value":"pub fn into_0rtt(Self) -> Result<(NewConnection, ZeroRttAccepted), Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 0-RTT or 0.5-RTT connection at the cost of weakened security","sig":null,"attributes":[{"value":"/ Convert into a 0-RTT or 0.5-RTT connection at the cost of weakened security","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9121,"byte_end":9200,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9205,"byte_end":9208,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Opens up the connection for use before the handshake finishes, allowing the API user to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9213,"byte_end":9304,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ send data with 0-RTT encryption if the necessary key material is available. This is useful","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9309,"byte_end":9403,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ for reducing start-up latency by beginning transmission of application data without waiting","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9408,"byte_end":9503,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/ for the handshake's cryptographic security guarantees to be established.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9508,"byte_end":9584,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9589,"byte_end":9592,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ When the `ZeroRttAccepted` future completes, the connection has been fully established.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9597,"byte_end":9688,"line_start":77,"line_end":77,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9693,"byte_end":9696,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Security","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9701,"byte_end":9715,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9720,"byte_end":9723,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ On outgoing connections, this enables transmission of 0-RTT data, which might be vulnerable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9728,"byte_end":9823,"line_start":81,"line_end":81,"column_start":5,"column_end":100}},{"value":"/ to replay attacks, and should therefore never invoke non-idempotent operations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9828,"byte_end":9911,"line_start":82,"line_end":82,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9916,"byte_end":9919,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ On incoming connections, this enables transmission of 0.5-RTT data, which might be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":9924,"byte_end":10010,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ intercepted by a man-in-the-middle. If this occurs, the handshake will not complete","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10015,"byte_end":10102,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ successfully.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10107,"byte_end":10124,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10129,"byte_end":10132,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10137,"byte_end":10149,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10154,"byte_end":10157,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Outgoing connections are only 0-RTT-capable when a cryptographic session ticket cached from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10162,"byte_end":10257,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ a previous connection to the same server is available, and includes a 0-RTT key. If no such","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10262,"byte_end":10357,"line_start":91,"line_end":91,"column_start":5,"column_end":100}},{"value":"/ ticket is found, `self` is returned unmodified.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10362,"byte_end":10413,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10418,"byte_end":10421,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ For incoming connections, a 0.5-RTT connection will always be successfully constructed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":10426,"byte_end":10517,"line_start":94,"line_end":94,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11511,"byte_end":11525,"line_start":117,"line_end":117,"column_start":18,"column_end":32},"name":"handshake_data","qualname":"<Connecting>::handshake_data","value":"pub async fn handshake_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Parameters negotiated during the handshake","sig":null,"attributes":[{"value":"/ Parameters negotiated during the handshake","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11148,"byte_end":11194,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11199,"byte_end":11202,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The dynamic type returned is determined by the configured","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11207,"byte_end":11268,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/ [`Session`](proto::crypto::Session). For the default `rustls` session, the return value can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11273,"byte_end":11368,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ be [`downcast`](Box::downcast) to a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11373,"byte_end":11412,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ [`crypto::rustls::HandshakeData`](crate::crypto::rustls::HandshakeData).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":11417,"byte_end":11493,"line_start":116,"line_end":116,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12860,"byte_end":12868,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Connecting>::local_ip","value":"pub fn local_ip(&Self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" The local IP address which was used when the peer established\n the connection","sig":null,"attributes":[{"value":"/ The local IP address which was used when the peer established","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12285,"byte_end":12350,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/ the connection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12355,"byte_end":12373,"line_start":139,"line_end":139,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12378,"byte_end":12381,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be different from the address the endpoint is bound to, in case","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12386,"byte_end":12462,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ the endpoint is bound to a wildcard address like `0.0.0.0` or `::`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12467,"byte_end":12538,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12543,"byte_end":12546,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This will return `None` for clients.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12551,"byte_end":12591,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12596,"byte_end":12599,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Retrieving the local IP address is currently supported on the following","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12604,"byte_end":12679,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ platforms:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12684,"byte_end":12698,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ - Linux","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12703,"byte_end":12714,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12719,"byte_end":12722,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ On all non-supported platforms the local IP address will not be available,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12727,"byte_end":12805,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/ and the method will return `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":12810,"byte_end":12848,"line_start":151,"line_end":151,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13806,"byte_end":13820,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"remote_address","qualname":"<Connecting>::remote_address","value":"pub fn remote_address(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" The peer's UDP address.","sig":null,"attributes":[{"value":"/ The peer's UDP address.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13695,"byte_end":13722,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13727,"byte_end":13730,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Will panic if called after `poll` has returned `Ready`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13735,"byte_end":13794,"line_start":182,"line_end":182,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14296,"byte_end":14311,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"ZeroRttAccepted","qualname":"::connection::ZeroRttAccepted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future that completes when a connection is fully established","sig":null,"attributes":[{"value":"/ Future that completes when a connection is fully established","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14011,"byte_end":14075,"line_start":189,"line_end":189,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14076,"byte_end":14079,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ For clients, the resulting value indicates if 0-RTT was accepted. For servers, the resulting","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14080,"byte_end":14176,"line_start":191,"line_end":191,"column_start":1,"column_end":97}},{"value":"/ value is meaningless.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14177,"byte_end":14202,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14203,"byte_end":14284,"line_start":193,"line_end":193,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":975},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15578,"byte_end":15591,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"NewConnection","qualname":"::connection::NewConnection","value":"NewConnection { connection, uni_streams, bi_streams, datagrams }","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" Components of a newly established connection","sig":null,"attributes":[{"value":"/ Components of a newly established connection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14544,"byte_end":14592,"line_start":203,"line_end":203,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14593,"byte_end":14596,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ All fields of this struct, in addition to any other handles constructed later, must be dropped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14597,"byte_end":14695,"line_start":205,"line_end":205,"column_start":1,"column_end":99}},{"value":"/ for a connection to be implicitly closed. If the `NewConnection` is stored in a long-lived","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14696,"byte_end":14790,"line_start":206,"line_end":206,"column_start":1,"column_end":95}},{"value":"/ variable, moving individual fields won't cause remaining unused fields to be dropped, even with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14791,"byte_end":14890,"line_start":207,"line_end":207,"column_start":1,"column_end":100}},{"value":"/ pattern-matching. The easiest way to ensure unused fields are dropped is to pattern-match on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14891,"byte_end":14991,"line_start":208,"line_end":208,"column_start":1,"column_end":101}},{"value":"/ variable wrapped in brackets, which forces the entire `NewConnection` to be moved out of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14992,"byte_end":15088,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ variable and into a temporary, ensuring all unused fields are dropped at the end of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15089,"byte_end":15180,"line_start":210,"line_end":210,"column_start":1,"column_end":92}},{"value":"/ statement:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15181,"byte_end":15195,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15196,"byte_end":15199,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15398,"byte_end":15401,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ You can also explicitly invoke [`Connection::close()`] at any time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15402,"byte_end":15473,"line_start":223,"line_end":223,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15474,"byte_end":15477,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ [`Connection::close()`]: crate::Connection::close","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15478,"byte_end":15531,"line_start":225,"line_end":225,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15549,"byte_end":15566,"line_start":227,"line_end":227,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":976},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15653,"byte_end":15663,"line_start":230,"line_end":230,"column_start":9,"column_end":19},"name":"connection","qualname":"::connection::NewConnection::connection","value":"connection::Connection","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" Handle for interacting with the connection\n","sig":null,"attributes":[{"value":"/ Handle for interacting with the connection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15598,"byte_end":15644,"line_start":229,"line_end":229,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16055,"byte_end":16066,"line_start":238,"line_end":238,"column_start":9,"column_end":20},"name":"uni_streams","qualname":"::connection::NewConnection::uni_streams","value":"connection::IncomingUniStreams","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" Unidirectional streams initiated by the peer, in the order they were opened","sig":null,"attributes":[{"value":"/ Unidirectional streams initiated by the peer, in the order they were opened","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15681,"byte_end":15760,"line_start":231,"line_end":231,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15765,"byte_end":15768,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that data for separate streams may be delivered in any order. In other words, reading","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15773,"byte_end":15867,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ from streams in the order they're opened is not optimal. See [`IncomingUniStreams`] for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15872,"byte_end":15963,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15968,"byte_end":15980,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15985,"byte_end":15988,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`IncomingUniStreams`]: crate::IncomingUniStreams","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":15993,"byte_end":16046,"line_start":237,"line_end":237,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16179,"byte_end":16189,"line_start":240,"line_end":240,"column_start":9,"column_end":19},"name":"bi_streams","qualname":"::connection::NewConnection::bi_streams","value":"connection::IncomingBiStreams","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" Bidirectional streams initiated by the peer, in the order they were opened\n","sig":null,"attributes":[{"value":"/ Bidirectional streams initiated by the peer, in the order they were opened","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16092,"byte_end":16170,"line_start":239,"line_end":239,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16275,"byte_end":16284,"line_start":242,"line_end":242,"column_start":9,"column_end":18},"name":"datagrams","qualname":"::connection::NewConnection::datagrams","value":"connection::Datagrams","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":" Unordered, unreliable datagrams sent by the peer\n","sig":null,"attributes":[{"value":"/ Unordered, unreliable datagrams sent by the peer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16214,"byte_end":16266,"line_start":241,"line_end":241,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19216,"byte_end":19226,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"Connection","qualname":"::connection::Connection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A QUIC connection.","sig":null,"attributes":[{"value":"/ A QUIC connection.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":18681,"byte_end":18703,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":18704,"byte_end":18707,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ If all references to a connection (including every clone of the `Connection` handle, streams of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":18708,"byte_end":18807,"line_start":309,"line_end":309,"column_start":1,"column_end":100}},{"value":"/ incoming streams, and the various stream types) have been dropped, then the connection will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":18808,"byte_end":18906,"line_start":310,"line_end":310,"column_start":1,"column_end":99}},{"value":"/ automatically closed with an `error_code` of 0 and an empty `reason`. You can also close the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":18907,"byte_end":19003,"line_start":311,"line_end":311,"column_start":1,"column_end":97}},{"value":"/ connection explicitly by calling [`Connection::close()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19004,"byte_end":19065,"line_start":312,"line_end":312,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19066,"byte_end":19069,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ May be cloned to obtain another handle to the same connection.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19070,"byte_end":19136,"line_start":314,"line_end":314,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19137,"byte_end":19140,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`Connection::close()`]: Connection::close","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19141,"byte_end":19187,"line_start":316,"line_end":316,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19546,"byte_end":19554,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"open_uni","qualname":"<Connection>::open_uni","value":"pub fn open_uni(&Self) -> OpenUni","parent":null,"children":[],"decl_id":null,"docs":" Initiate a new outgoing unidirectional stream.","sig":null,"attributes":[{"value":"/ Initiate a new outgoing unidirectional stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19266,"byte_end":19316,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19321,"byte_end":19324,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Streams are cheap and instantaneous to open unless blocked by flow control. As a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19329,"byte_end":19413,"line_start":323,"line_end":323,"column_start":5,"column_end":89}},{"value":"/ consequence, the peer won't be notified that a stream has been opened until the stream is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19418,"byte_end":19511,"line_start":324,"line_end":324,"column_start":5,"column_end":98}},{"value":"/ actually used.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19516,"byte_end":19534,"line_start":325,"line_end":325,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19975,"byte_end":19982,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"open_bi","qualname":"<Connection>::open_bi","value":"pub fn open_bi(&Self) -> OpenBi","parent":null,"children":[],"decl_id":null,"docs":" Initiate a new outgoing bidirectional stream.","sig":null,"attributes":[{"value":"/ Initiate a new outgoing bidirectional stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19696,"byte_end":19745,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19750,"byte_end":19753,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Streams are cheap and instantaneous to open unless blocked by flow control. As a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19758,"byte_end":19842,"line_start":335,"line_end":335,"column_start":5,"column_end":89}},{"value":"/ consequence, the peer won't be notified that a stream has been opened until the stream is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19847,"byte_end":19940,"line_start":336,"line_end":336,"column_start":5,"column_end":98}},{"value":"/ actually used.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19945,"byte_end":19963,"line_start":337,"line_end":337,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21002,"byte_end":21007,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"pub fn close(&Self, VarInt, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Close the connection immediately.","sig":null,"attributes":[{"value":"/ Close the connection immediately.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20122,"byte_end":20159,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20164,"byte_end":20167,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Pending operations will fail immediately with [`ConnectionError::LocallyClosed`]. Delivery","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20172,"byte_end":20266,"line_start":347,"line_end":347,"column_start":5,"column_end":99}},{"value":"/ of data on unfinished streams is not guaranteed, so the application must call this only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20271,"byte_end":20362,"line_start":348,"line_end":348,"column_start":5,"column_end":96}},{"value":"/ when all important communications have been completed, e.g. by calling [`finish`] on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20367,"byte_end":20455,"line_start":349,"line_end":349,"column_start":5,"column_end":93}},{"value":"/ outstanding [`SendStream`]s and waiting for the resulting futures to complete.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20460,"byte_end":20542,"line_start":350,"line_end":350,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20547,"byte_end":20550,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ `error_code` and `reason` are not interpreted, and are provided directly to the peer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20555,"byte_end":20644,"line_start":352,"line_end":352,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20649,"byte_end":20652,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ `reason` will be truncated to fit in a single packet with overhead; to improve odds that it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20657,"byte_end":20752,"line_start":354,"line_end":354,"column_start":5,"column_end":100}},{"value":"/ is preserved in full, it should be kept under 1KiB.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20757,"byte_end":20812,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20817,"byte_end":20820,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ [`ConnectionError::LocallyClosed`]: crate::ConnectionError::LocallyClosed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20825,"byte_end":20902,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ [`finish`]: crate::SendStream::finish","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20907,"byte_end":20948,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ [`SendStream`]: crate::SendStream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":20953,"byte_end":20990,"line_start":359,"line_end":359,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21486,"byte_end":21499,"line_start":370,"line_end":370,"column_start":12,"column_end":25},"name":"send_datagram","qualname":"<Connection>::send_datagram","value":"pub fn send_datagram(&Self, Bytes) -> Result<(), SendDatagramError>","parent":null,"children":[],"decl_id":null,"docs":" Transmit `data` as an unreliable, unordered application datagram","sig":null,"attributes":[{"value":"/ Transmit `data` as an unreliable, unordered application datagram","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21174,"byte_end":21242,"line_start":365,"line_end":365,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21247,"byte_end":21250,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Application datagrams are a low-level primitive. They may be lost or delivered out of order,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21255,"byte_end":21351,"line_start":367,"line_end":367,"column_start":5,"column_end":101}},{"value":"/ and `data` must both fit inside a single QUIC packet and be smaller than the maximum","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21356,"byte_end":21444,"line_start":368,"line_end":368,"column_start":5,"column_end":93}},{"value":"/ dictated by the peer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":21449,"byte_end":21474,"line_start":369,"line_end":369,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22785,"byte_end":22802,"line_start":400,"line_end":400,"column_start":12,"column_end":29},"name":"max_datagram_size","qualname":"<Connection>::max_datagram_size","value":"pub fn max_datagram_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compute the maximum size of datagrams that may be passed to [`send_datagram()`].","sig":null,"attributes":[{"value":"/ Compute the maximum size of datagrams that may be passed to [`send_datagram()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22175,"byte_end":22259,"line_start":389,"line_end":389,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22264,"byte_end":22267,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if datagrams are unsupported by the peer or disabled locally.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22272,"byte_end":22352,"line_start":391,"line_end":391,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22357,"byte_end":22360,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This may change over the lifetime of a connection according to variation in the path MTU","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22365,"byte_end":22457,"line_start":393,"line_end":393,"column_start":5,"column_end":97}},{"value":"/ estimate. The peer can also enforce an arbitrarily small fixed limit, but if the peer's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22462,"byte_end":22553,"line_start":394,"line_end":394,"column_start":5,"column_end":96}},{"value":"/ limit is large this is guaranteed to be a little over a kilobyte at minimum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22558,"byte_end":22638,"line_start":395,"line_end":395,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22643,"byte_end":22646,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Not necessarily the maximum size of received datagrams.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22651,"byte_end":22710,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22715,"byte_end":22718,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`send_datagram()`]: Connection::send_datagram","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22723,"byte_end":22773,"line_start":399,"line_end":399,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23157,"byte_end":23171,"line_start":412,"line_end":412,"column_start":12,"column_end":26},"name":"remote_address","qualname":"<Connection>::remote_address","value":"pub fn remote_address(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" The peer's UDP address","sig":null,"attributes":[{"value":"/ The peer's UDP address","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22962,"byte_end":22988,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":22993,"byte_end":22996,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If `ServerConfig::migration` is `true`, clients may change addresses at will, e.g. when","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23001,"byte_end":23092,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ switching to a cellular internet connection.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23097,"byte_end":23145,"line_start":411,"line_end":411,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23842,"byte_end":23850,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Connection>::local_ip","value":"pub fn local_ip(&Self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" The local IP address which was used when the peer established\n the connection","sig":null,"attributes":[{"value":"/ The local IP address which was used when the peer established","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23267,"byte_end":23332,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"/ the connection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23337,"byte_end":23355,"line_start":417,"line_end":417,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23360,"byte_end":23363,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This can be different from the address the endpoint is bound to, in case","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23368,"byte_end":23444,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ the endpoint is bound to a wildcard address like `0.0.0.0` or `::`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23449,"byte_end":23520,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23525,"byte_end":23528,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This will return `None` for clients.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23533,"byte_end":23573,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23578,"byte_end":23581,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Retrieving the local IP address is currently supported on the following","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23586,"byte_end":23661,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ platforms:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23666,"byte_end":23680,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/ - Linux","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23685,"byte_end":23696,"line_start":426,"line_end":426,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23701,"byte_end":23704,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ On all non-supported platforms the local IP address will not be available,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23709,"byte_end":23787,"line_start":428,"line_end":428,"column_start":5,"column_end":83}},{"value":"/ and the method will return `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23792,"byte_end":23830,"line_start":429,"line_end":429,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24022,"byte_end":24025,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"rtt","qualname":"<Connection>::rtt","value":"pub fn rtt(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Current best estimate of this connection's latency (round-trip-time)\n","sig":null,"attributes":[{"value":"/ Current best estimate of this connection's latency (round-trip-time)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":23938,"byte_end":24010,"line_start":434,"line_end":434,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24142,"byte_end":24147,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"stats","qualname":"<Connection>::stats","value":"pub fn stats(&Self) -> ConnectionStats","parent":null,"children":[],"decl_id":null,"docs":" Returns connection statistics\n","sig":null,"attributes":[{"value":"/ Returns connection statistics","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24097,"byte_end":24130,"line_start":439,"line_end":439,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24319,"byte_end":24335,"line_start":445,"line_end":445,"column_start":12,"column_end":28},"name":"congestion_state","qualname":"<Connection>::congestion_state","value":"pub fn congestion_state(&Self) -> Box<dyn Controller>","parent":null,"children":[],"decl_id":null,"docs":" Current state of the congestion control algorithm, for debugging purposes\n","sig":null,"attributes":[{"value":"/ Current state of the congestion control algorithm, for debugging purposes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24230,"byte_end":24307,"line_start":444,"line_end":444,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24863,"byte_end":24877,"line_start":460,"line_end":460,"column_start":12,"column_end":26},"name":"handshake_data","qualname":"<Connection>::handshake_data","value":"pub fn handshake_data(&Self) -> Option<Box<dyn Any>>","parent":null,"children":[],"decl_id":null,"docs":" Parameters negotiated during the handshake","sig":null,"attributes":[{"value":"/ Parameters negotiated during the handshake","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24508,"byte_end":24554,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24559,"byte_end":24562,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Guaranteed to return `Some` on fully established connections or after","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24567,"byte_end":24640,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ [`Connecting::handshake_data()`] succeeds. See that method's documentations for details on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24645,"byte_end":24739,"line_start":456,"line_end":456,"column_start":5,"column_end":99}},{"value":"/ the returned value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24744,"byte_end":24767,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24772,"byte_end":24775,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`Connection::handshake_data()`]: crate::Connecting::handshake_data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":24780,"byte_end":24851,"line_start":459,"line_end":459,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25381,"byte_end":25394,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"peer_identity","qualname":"<Connection>::peer_identity","value":"pub fn peer_identity(&Self) -> Option<Box<dyn Any>>","parent":null,"children":[],"decl_id":null,"docs":" Cryptographic identity of the peer","sig":null,"attributes":[{"value":"/ Cryptographic identity of the peer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25052,"byte_end":25090,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25095,"byte_end":25098,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ The dynamic type returned is determined by the configured","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25103,"byte_end":25164,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ [`Session`](proto::crypto::Session). For the default `rustls` session, the return value can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25169,"byte_end":25264,"line_start":471,"line_end":471,"column_start":5,"column_end":100}},{"value":"/ be [`downcast`](Box::downcast) to a <code>Vec<[rustls::Certificate](rustls::Certificate)></code>","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25269,"byte_end":25369,"line_start":472,"line_end":472,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25761,"byte_end":25770,"line_start":485,"line_end":485,"column_start":12,"column_end":21},"name":"stable_id","qualname":"<Connection>::stable_id","value":"pub fn stable_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" A stable identifier for this connection","sig":null,"attributes":[{"value":"/ A stable identifier for this connection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25567,"byte_end":25610,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25615,"byte_end":25618,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Peer addresses and connection IDs can change, but this value will remain","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25623,"byte_end":25699,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ fixed for the lifetime of the connection.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25704,"byte_end":25749,"line_start":484,"line_end":484,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":25916,"byte_end":25932,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"force_key_update","qualname":"<Connection>::force_key_update","value":"pub fn force_key_update(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26507,"byte_end":26529,"line_start":503,"line_end":503,"column_start":12,"column_end":34},"name":"export_keying_material","qualname":"<Connection>::export_keying_material","value":"pub fn export_keying_material(&Self, &mut [u8], &[u8], &[u8])\n-> Result<(), proto::crypto::ExportKeyingMaterialError>","parent":null,"children":[],"decl_id":null,"docs":" Derive keying material from this connection's TLS session secrets.","sig":null,"attributes":[{"value":"/ Derive keying material from this connection's TLS session secrets.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26021,"byte_end":26091,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26096,"byte_end":26099,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ When both peers call this method with the same `label` and `context`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26104,"byte_end":26176,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ arguments and `output` buffers of equal length, they will get the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26181,"byte_end":26250,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/ same sequence of bytes in `output`. These bytes are cryptographically","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26255,"byte_end":26328,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ strong and pseudorandom, and are suitable for use as keying material.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26333,"byte_end":26406,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26411,"byte_end":26414,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ See [RFC5705](https://tools.ietf.org/html/rfc5705) for more information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26419,"byte_end":26495,"line_start":502,"line_end":502,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27147,"byte_end":27177,"line_start":520,"line_end":520,"column_start":12,"column_end":42},"name":"set_max_concurrent_uni_streams","qualname":"<Connection>::set_max_concurrent_uni_streams","value":"pub fn set_max_concurrent_uni_streams(&Self, VarInt)","parent":null,"children":[],"decl_id":null,"docs":" Modify the number of remotely initiated unidirectional streams that may be concurrently open","sig":null,"attributes":[{"value":"/ Modify the number of remotely initiated unidirectional streams that may be concurrently open","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26862,"byte_end":26958,"line_start":516,"line_end":516,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26963,"byte_end":26966,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ No streams may be opened by the peer unless fewer than `count` are already open. Large","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":26971,"byte_end":27061,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ `count`s increase both minimum and worst-case memory consumption.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27066,"byte_end":27135,"line_start":519,"line_end":519,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27709,"byte_end":27738,"line_start":531,"line_end":531,"column_start":12,"column_end":41},"name":"set_max_concurrent_bi_streams","qualname":"<Connection>::set_max_concurrent_bi_streams","value":"pub fn set_max_concurrent_bi_streams(&Self, VarInt)","parent":null,"children":[],"decl_id":null,"docs":" Modify the number of remotely initiated bidirectional streams that may be concurrently open","sig":null,"attributes":[{"value":"/ Modify the number of remotely initiated bidirectional streams that may be concurrently open","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27425,"byte_end":27520,"line_start":527,"line_end":527,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27525,"byte_end":27528,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ No streams may be opened by the peer unless fewer than `count` are already open. Large","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27533,"byte_end":27623,"line_start":529,"line_end":529,"column_start":5,"column_end":95}},{"value":"/ `count`s increase both minimum and worst-case memory consumption.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27628,"byte_end":27697,"line_start":530,"line_end":530,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28811,"byte_end":28829,"line_start":556,"line_end":556,"column_start":12,"column_end":30},"name":"IncomingUniStreams","qualname":"::connection::IncomingUniStreams","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of unidirectional QUIC streams initiated by a remote peer.","sig":null,"attributes":[{"value":"/ A stream of unidirectional QUIC streams initiated by a remote peer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28084,"byte_end":28155,"line_start":545,"line_end":545,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28156,"byte_end":28159,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ Incoming streams are *always* opened in the same order that the peer created them, but data can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28160,"byte_end":28259,"line_start":547,"line_end":547,"column_start":1,"column_end":100}},{"value":"/ be delivered to open streams in any order. This allows meaning to be assigned to the sequence in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28260,"byte_end":28360,"line_start":548,"line_end":548,"column_start":1,"column_end":101}},{"value":"/ which streams are opened. For example, a file transfer protocol might designate the first stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28361,"byte_end":28461,"line_start":549,"line_end":549,"column_start":1,"column_end":101}},{"value":"/ the client opens as a \"control\" stream, using all others for exchanging file data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28462,"byte_end":28548,"line_start":550,"line_end":550,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28549,"byte_end":28552,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ Processing streams in the order they're opened will produce head-of-line blocking. For best","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28553,"byte_end":28648,"line_start":552,"line_end":552,"column_start":1,"column_end":96}},{"value":"/ performance, an application should be prepared to fully process later streams before any data is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28649,"byte_end":28749,"line_start":553,"line_end":553,"column_start":1,"column_end":101}},{"value":"/ received on earlier streams.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28750,"byte_end":28782,"line_start":554,"line_end":554,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29909,"byte_end":29926,"line_start":582,"line_end":582,"column_start":12,"column_end":29},"name":"IncomingBiStreams","qualname":"::connection::IncomingBiStreams","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of bidirectional QUIC streams initiated by a remote peer.","sig":null,"attributes":[{"value":"/ A stream of bidirectional QUIC streams initiated by a remote peer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29726,"byte_end":29796,"line_start":578,"line_end":578,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29797,"byte_end":29800,"line_start":579,"line_end":579,"column_start":1,"column_end":4}},{"value":"/ See `IncomingUniStreams` for information about incoming streams in general.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29801,"byte_end":29880,"line_start":580,"line_end":580,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31075,"byte_end":31084,"line_start":610,"line_end":610,"column_start":12,"column_end":21},"name":"Datagrams","qualname":"::connection::Datagrams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of unordered, unreliable datagrams sent by the peer\n","sig":null,"attributes":[{"value":"/ Stream of unordered, unreliable datagrams sent by the peer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":30984,"byte_end":31046,"line_start":608,"line_end":608,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31934,"byte_end":31941,"line_start":632,"line_end":632,"column_start":12,"column_end":19},"name":"OpenUni","qualname":"::connection::OpenUni","value":"OpenUni {  }","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" A future that will resolve into an opened outgoing unidirectional stream\n","sig":null,"attributes":[{"value":"/ A future that will resolve into an opened outgoing unidirectional stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31764,"byte_end":31840,"line_start":630,"line_end":630,"column_start":1,"column_end":77}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31841,"byte_end":31922,"line_start":631,"line_end":631,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32903,"byte_end":32909,"line_start":658,"line_end":658,"column_start":12,"column_end":18},"name":"OpenBi","qualname":"::connection::OpenBi","value":"OpenBi {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" A future that will resolve into an opened outgoing bidirectional stream\n","sig":null,"attributes":[{"value":"/ A future that will resolve into an opened outgoing bidirectional stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32734,"byte_end":32809,"line_start":656,"line_end":656,"column_start":1,"column_end":76}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32810,"byte_end":32891,"line_start":657,"line_end":657,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47477,"byte_end":47494,"line_start":1062,"line_end":1062,"column_start":5,"column_end":22},"name":"UnsupportedByPeer","qualname":"::connection::SendDatagramError::UnsupportedByPeer","value":"SendDatagramError::UnsupportedByPeer","parent":{"krate":0,"index":1037},"children":[],"decl_id":null,"docs":" The peer does not support receiving datagram frames\n","sig":null,"attributes":[{"value":"/ The peer does not support receiving datagram frames","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47369,"byte_end":47424,"line_start":1060,"line_end":1060,"column_start":5,"column_end":60}},{"value":"error(\"datagrams not supported by peer\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47429,"byte_end":47472,"line_start":1061,"line_end":1061,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47587,"byte_end":47595,"line_start":1065,"line_end":1065,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::connection::SendDatagramError::Disabled","value":"SendDatagramError::Disabled","parent":{"krate":0,"index":1037},"children":[],"decl_id":null,"docs":" Datagram support is disabled locally\n","sig":null,"attributes":[{"value":"/ Datagram support is disabled locally","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47500,"byte_end":47540,"line_start":1063,"line_end":1063,"column_start":5,"column_end":45}},{"value":"error(\"datagram support disabled\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47545,"byte_end":47582,"line_start":1064,"line_end":1064,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47835,"byte_end":47843,"line_start":1071,"line_end":1071,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::connection::SendDatagramError::TooLarge","value":"SendDatagramError::TooLarge","parent":{"krate":0,"index":1037},"children":[],"decl_id":null,"docs":" The datagram is larger than the connection can currently accommodate","sig":null,"attributes":[{"value":"/ The datagram is larger than the connection can currently accommodate","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47601,"byte_end":47673,"line_start":1066,"line_end":1066,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47678,"byte_end":47681,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Indicates that the path MTU minus overhead or the limit advertised by the peer has been","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47686,"byte_end":47777,"line_start":1068,"line_end":1068,"column_start":5,"column_end":96}},{"value":"/ exceeded.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47782,"byte_end":47795,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"error(\"datagram too large\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47800,"byte_end":47830,"line_start":1070,"line_end":1070,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47913,"byte_end":47927,"line_start":1074,"line_end":1074,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::connection::SendDatagramError::ConnectionLost","value":"SendDatagramError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1037},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47849,"byte_end":47876,"line_start":1072,"line_end":1072,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47881,"byte_end":47908,"line_start":1073,"line_end":1073,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47345,"byte_end":47362,"line_start":1059,"line_end":1059,"column_start":10,"column_end":27},"name":"SendDatagramError","qualname":"::connection::SendDatagramError","value":"pub enum SendDatagramError {\n    UnsupportedByPeer,\n    Disabled,\n    TooLarge,\n    ConnectionLost(ConnectionError),\n}","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1064}],"decl_id":null,"docs":" Errors that can arise when sending a datagram\n","sig":null,"attributes":[{"value":"/ Errors that can arise when sending a datagram","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47240,"byte_end":47289,"line_start":1057,"line_end":1057,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49253,"byte_end":49261,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":1068},{"krate":0,"index":1069}],"decl_id":null,"docs":" A QUIC endpoint.","sig":null,"attributes":[{"value":"/ A QUIC endpoint.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":48976,"byte_end":48996,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":48997,"byte_end":49000,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ An endpoint corresponds to a single UDP socket, may host many connections, and may act as both","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49001,"byte_end":49099,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ client and server for different connections.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49100,"byte_end":49148,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49149,"byte_end":49152,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ May be cloned to obtain another handle to the same endpoint.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49153,"byte_end":49217,"line_start":37,"line_end":37,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50140,"byte_end":50146,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"client","qualname":"<Endpoint>::client","value":"pub fn client(SocketAddr) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Helper to construct an endpoint for use with outgoing connections only","sig":null,"attributes":[{"value":"/ Helper to construct an endpoint for use with outgoing connections only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49382,"byte_end":49456,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49461,"byte_end":49464,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context. Note that `addr` is the *local* address","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49469,"byte_end":49564,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/ to bind to, which should usually be a wildcard address like `0.0.0.0:0` or `[::]:0`, which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49569,"byte_end":49663,"line_start":48,"line_end":48,"column_start":5,"column_end":99}},{"value":"/ allow communication with any reachable IPv4 or IPv6 address respectively from an OS-assigned","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49668,"byte_end":49764,"line_start":49,"line_end":49,"column_start":5,"column_end":101}},{"value":"/ port.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49769,"byte_end":49778,"line_start":50,"line_end":50,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49783,"byte_end":49786,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Platform defaults for dual-stack sockets vary. For example, any socket bound to a wildcard","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49791,"byte_end":49885,"line_start":52,"line_end":52,"column_start":5,"column_end":99}},{"value":"/ IPv6 address on Windows will not by default be able to communicate with IPv4","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49890,"byte_end":49970,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ addresses. Portable applications should bind an address that matches the family they wish to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49975,"byte_end":50071,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ communicate within.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50076,"byte_end":50099,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"ring\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50104,"byte_end":50128,"line_start":56,"line_end":56,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50836,"byte_end":50842,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"server","qualname":"<Endpoint>::server","value":"pub fn server(ServerConfig, SocketAddr) -> io::Result<(Self, Incoming)>","parent":null,"children":[],"decl_id":null,"docs":" Helper to construct an endpoint for use with both incoming and outgoing connections","sig":null,"attributes":[{"value":"/ Helper to construct an endpoint for use with both incoming and outgoing connections","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50319,"byte_end":50406,"line_start":62,"line_end":62,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50411,"byte_end":50414,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50419,"byte_end":50474,"line_start":64,"line_end":64,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50479,"byte_end":50482,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Platform defaults for dual-stack sockets vary. For example, any socket bound to a wildcard","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50487,"byte_end":50581,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ IPv6 address on Windows will not by default be able to communicate with IPv4","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50586,"byte_end":50666,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/ addresses. Portable applications should bind an address that matches the family they wish to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50671,"byte_end":50767,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ communicate within.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50772,"byte_end":50795,"line_start":69,"line_end":69,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"ring\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":50800,"byte_end":50824,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":51184,"byte_end":51187,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"pub fn new(EndpointConfig, Option<ServerConfig>, std::net::UdpSocket)\n-> io::Result<(Self, Incoming)>","parent":null,"children":[],"decl_id":null,"docs":" Construct an endpoint with arbitrary configuration","sig":null,"attributes":[{"value":"/ Construct an endpoint with arbitrary configuration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":51050,"byte_end":51104,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":51109,"byte_end":51112,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":51117,"byte_end":51172,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52052,"byte_end":52077,"line_start":107,"line_end":107,"column_start":12,"column_end":37},"name":"set_default_client_config","qualname":"<Endpoint>::set_default_client_config","value":"pub fn set_default_client_config(&mut Self, ClientConfig)","parent":null,"children":[],"decl_id":null,"docs":" Set the client configuration used by `connect`\n","sig":null,"attributes":[{"value":"/ Set the client configuration used by `connect`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":51990,"byte_end":52040,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52573,"byte_end":52580,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"connect","qualname":"<Endpoint>::connect","value":"pub fn connect(&Self, SocketAddr, &str) -> Result<Connecting, ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a remote endpoint","sig":null,"attributes":[{"value":"/ Connect to a remote endpoint","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52175,"byte_end":52207,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52212,"byte_end":52215,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `server_name` must be covered by the certificate presented by the server. This prevents a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52220,"byte_end":52313,"line_start":113,"line_end":113,"column_start":5,"column_end":98}},{"value":"/ connection from being intercepted by an attacker with a valid certificate for some other","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52318,"byte_end":52410,"line_start":114,"line_end":114,"column_start":5,"column_end":97}},{"value":"/ server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52415,"byte_end":52426,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52431,"byte_end":52434,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ May fail immediately due to configuration errors, or in the future if the connection could","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52439,"byte_end":52533,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ not be established.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52538,"byte_end":52561,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53079,"byte_end":53091,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"connect_with","qualname":"<Endpoint>::connect_with","value":"pub fn connect_with(&Self, ClientConfig, SocketAddr, &str)\n-> Result<Connecting, ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a remote endpoint using a custom configuration.","sig":null,"attributes":[{"value":"/ Connect to a remote endpoint using a custom configuration.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52909,"byte_end":52971,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52976,"byte_end":52979,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ See [`connect()`] for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":52984,"byte_end":53018,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53023,"byte_end":53026,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect()`]: Endpoint::connect","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53031,"byte_end":53067,"line_start":132,"line_end":132,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54145,"byte_end":54151,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"rebind","qualname":"<Endpoint>::rebind","value":"pub fn rebind(&Self, std::net::UdpSocket) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Switch to a new UDP socket","sig":null,"attributes":[{"value":"/ Switch to a new UDP socket","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53842,"byte_end":53872,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53877,"byte_end":53880,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Allows the endpoint's address to be updated live, affecting all active connections. Incoming","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53885,"byte_end":53981,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ connections and connections to servers unreachable from the new address will be lost.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":53986,"byte_end":54075,"line_start":159,"line_end":159,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54080,"byte_end":54083,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On error, the old UDP socket is retained.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54088,"byte_end":54133,"line_start":161,"line_end":161,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54890,"byte_end":54907,"line_start":181,"line_end":181,"column_start":12,"column_end":29},"name":"set_server_config","qualname":"<Endpoint>::set_server_config","value":"pub fn set_server_config(&Self, Option<ServerConfig>)","parent":null,"children":[],"decl_id":null,"docs":" Replace the server configuration, affecting new incoming connections only","sig":null,"attributes":[{"value":"/ Replace the server configuration, affecting new incoming connections only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54700,"byte_end":54777,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54782,"byte_end":54785,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Useful for e.g. refreshing TLS certificates without disrupting existing connections.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":54790,"byte_end":54878,"line_start":180,"line_end":180,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55181,"byte_end":55191,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Endpoint>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local `SocketAddr` the underlying socket is bound to\n","sig":null,"attributes":[{"value":"/ Get the local `SocketAddr` the underlying socket is bound to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55105,"byte_end":55169,"line_start":189,"line_end":189,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55521,"byte_end":55526,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"close","qualname":"<Endpoint>::close","value":"pub fn close(&Self, VarInt, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Close all of this endpoint's connections immediately and cease accepting new connections.","sig":null,"attributes":[{"value":"/ Close all of this endpoint's connections immediately and cease accepting new connections.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55293,"byte_end":55386,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55391,"byte_end":55394,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::close()`] for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55399,"byte_end":55443,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55448,"byte_end":55451,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`Connection::close()`]: crate::Connection::close","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":55456,"byte_end":55509,"line_start":198,"line_end":198,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56762,"byte_end":56771,"line_start":227,"line_end":227,"column_start":18,"column_end":27},"name":"wait_idle","qualname":"<Endpoint>::wait_idle","value":"pub async fn wait_idle<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for all connections on the endpoint to be cleanly shut down","sig":null,"attributes":[{"value":"/ Wait for all connections on the endpoint to be cleanly shut down","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56139,"byte_end":56207,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56212,"byte_end":56215,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Waiting for this condition before exiting ensures that a good-faith effort is made to notify","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56220,"byte_end":56316,"line_start":217,"line_end":217,"column_start":5,"column_end":101}},{"value":"/ peers of recent connection closes, whereas exiting immediately could force them to wait out","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56321,"byte_end":56416,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ the idle timeout period.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56421,"byte_end":56449,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56454,"byte_end":56457,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Does not proactively close existing connections or cause incoming connections to be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56462,"byte_end":56549,"line_start":221,"line_end":221,"column_start":5,"column_end":92}},{"value":"/ rejected. Consider calling [`close()`] and dropping the [`Incoming`] stream if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56554,"byte_end":56636,"line_start":222,"line_end":222,"column_start":5,"column_end":87}},{"value":"/ that is desired.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56641,"byte_end":56661,"line_start":223,"line_end":223,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56666,"byte_end":56669,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`close()`]: Endpoint::close","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56674,"byte_end":56706,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ [`Incoming`]: crate::Incoming","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":56711,"byte_end":56744,"line_start":226,"line_end":226,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67051,"byte_end":67059,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::endpoint::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of incoming connections.\n","sig":null,"attributes":[{"value":"/ Stream of incoming connections.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":66987,"byte_end":67022,"line_start":511,"line_end":511,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74814,"byte_end":74824,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"RecvStream","qualname":"::recv_stream::RecvStream","value":"RecvStream {  }","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157}],"decl_id":null,"docs":" A stream that can only be used to receive data","sig":null,"attributes":[{"value":"/ A stream that can only be used to receive data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74503,"byte_end":74553,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74554,"byte_end":74557,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `stop(0)` is implicitly called on drop unless:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74558,"byte_end":74608,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ - A variant of [`ReadError`] has been yielded by a read call","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74609,"byte_end":74673,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ - [`stop()`] was called explicitly","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74674,"byte_end":74712,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74713,"byte_end":74716,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ReadError`]: crate::ReadError","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74717,"byte_end":74752,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ [`stop()`]: RecvStream::stop","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74753,"byte_end":74785,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75370,"byte_end":75374,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"read","qualname":"<RecvStream>::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read","parent":null,"children":[],"decl_id":null,"docs":" Read data contiguously from the stream.","sig":null,"attributes":[{"value":"/ Read data contiguously from the stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75206,"byte_end":75249,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75254,"byte_end":75257,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes read into `buf` on success, or `None` if the stream was finished.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75262,"byte_end":75358,"line_start":46,"line_end":46,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75688,"byte_end":75698,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"read_exact","qualname":"<RecvStream>::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact","parent":null,"children":[],"decl_id":null,"docs":" Read an exact number of bytes contiguously from the stream.","sig":null,"attributes":[{"value":"/ Read an exact number of bytes contiguously from the stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75524,"byte_end":75587,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75592,"byte_end":75595,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ See [`read()`] for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75600,"byte_end":75631,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75636,"byte_end":75639,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ [`read()`]: RecvStream::read","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":75644,"byte_end":75676,"line_start":58,"line_end":58,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77556,"byte_end":77566,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"read_chunk","qualname":"<RecvStream>::read_chunk","value":"pub fn read_chunk(&mut Self, usize, bool) -> ReadChunk","parent":null,"children":[],"decl_id":null,"docs":" Read the next segment of data","sig":null,"attributes":[{"value":"/ Read the next segment of data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":76768,"byte_end":76801,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":76806,"byte_end":76809,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Yields `None` if the stream was finished. Otherwise, yields a segment of data and its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":76814,"byte_end":76903,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/ offset in the stream. If `ordered` is `true`, the chunk's offset will be immediately after","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":76908,"byte_end":77002,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ the last data yielded by `read()` or `read_chunk()`. If `ordered` is `false`, segments may","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77007,"byte_end":77101,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ be received in any order, and the `Chunk`'s `offset` field can be used to determine","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77106,"byte_end":77193,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ ordering in the caller. Unordered reads are less prone to head-of-line blocking within a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77198,"byte_end":77290,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ stream, but require the application to manage reassembling the original data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77295,"byte_end":77376,"line_start":102,"line_end":102,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77381,"byte_end":77384,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Slightly more efficient than `read` due to not copying. Chunk boundaries do not correspond","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77389,"byte_end":77483,"line_start":104,"line_end":104,"column_start":5,"column_end":99}},{"value":"/ to peer writes, and hence cannot be used as framing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":77488,"byte_end":77544,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78583,"byte_end":78594,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"read_chunks","qualname":"<RecvStream>::read_chunks","value":"pub fn read_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> ReadChunks","parent":null,"children":[],"decl_id":null,"docs":" Read the next segments of data","sig":null,"attributes":[{"value":"/ Read the next segments of data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78183,"byte_end":78217,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78222,"byte_end":78225,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Fills `bufs` with the segments of data beginning immediately after the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78230,"byte_end":78304,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ last data yielded by `read` or `read_chunk`, or `None` if the stream was","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78309,"byte_end":78385,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ finished.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78390,"byte_end":78403,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78408,"byte_end":78411,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Slightly more efficient than `read` due to not copying. Chunk boundaries","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78416,"byte_end":78492,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ do not correspond to peer writes, and hence cannot be used as framing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":78497,"byte_end":78571,"line_start":134,"line_end":134,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80191,"byte_end":80202,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<RecvStream>::read_to_end","value":"pub fn read_to_end(Self, usize) -> ReadToEnd","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to read all remaining data into a buffer","sig":null,"attributes":[{"value":"/ Convenience method to read all remaining data into a buffer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79643,"byte_end":79706,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79711,"byte_end":79714,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned future fails with [`ReadToEndError::TooLong`] if it's longer than `size_limit`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79719,"byte_end":79814,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ bytes. Uses unordered reads to be more efficient than using `AsyncRead` would allow.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79819,"byte_end":79907,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"/ `size_limit` should be set to limit worst-case memory use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79912,"byte_end":79974,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79979,"byte_end":79982,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If unordered reads have already been made, the resulting buffer may have gaps containing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":79987,"byte_end":80079,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ arbitrary data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80084,"byte_end":80103,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80108,"byte_end":80111,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`ReadToEndError::TooLong`]: crate::ReadToEndError::TooLong","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80116,"byte_end":80179,"line_start":177,"line_end":177,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80634,"byte_end":80638,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"stop","qualname":"<RecvStream>::stop","value":"pub fn stop(&mut Self, VarInt) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Stop accepting data","sig":null,"attributes":[{"value":"/ Stop accepting data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80421,"byte_end":80444,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80449,"byte_end":80452,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Discards unread data and notifies the peer to stop transmitting. Once stopped, further","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80457,"byte_end":80547,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/ attempts to operate on a stream will yield `UnknownStream` errors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80552,"byte_end":80622,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81234,"byte_end":81241,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_0rtt","qualname":"<RecvStream>::is_0rtt","value":"pub fn is_0rtt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this stream has been opened during 0-RTT.","sig":null,"attributes":[{"value":"/ Check if this stream has been opened during 0-RTT.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":80998,"byte_end":81052,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81057,"byte_end":81060,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ In which case any non-idempotent request should be considered dangerous at the application","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81065,"byte_end":81159,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ level. Because read data is subject to replay attacks.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81164,"byte_end":81222,"line_start":206,"line_end":206,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81338,"byte_end":81340,"line_start":212,"line_end":212,"column_start":12,"column_end":14},"name":"id","qualname":"<RecvStream>::id","value":"pub fn id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of this stream\n","sig":null,"attributes":[{"value":"/ Get the identity of this stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":81291,"byte_end":81326,"line_start":211,"line_end":211,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84728,"byte_end":84737,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::recv_stream::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_to_end()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_to_end()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84511,"byte_end":84564,"line_start":301,"line_end":301,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84565,"byte_end":84568,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_to_end()`]: crate::RecvStream::read_to_end","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84569,"byte_end":84634,"line_start":303,"line_end":303,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84635,"byte_end":84716,"line_start":304,"line_end":304,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86452,"byte_end":86456,"line_start":352,"line_end":352,"column_start":5,"column_end":9},"name":"Read","qualname":"::recv_stream::ReadToEndError::Read","value":"ReadToEndError::Read(ReadError)","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" An error occurred during reading\n","sig":null,"attributes":[{"value":"/ An error occurred during reading","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86379,"byte_end":86415,"line_start":350,"line_end":350,"column_start":5,"column_end":41}},{"value":"error(\"read error: {0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86420,"byte_end":86447,"line_start":351,"line_end":351,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86571,"byte_end":86578,"line_start":355,"line_end":355,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::recv_stream::ReadToEndError::TooLong","value":"ReadToEndError::TooLong","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" The stream is larger than the user-supplied limit\n","sig":null,"attributes":[{"value":"/ The stream is larger than the user-supplied limit","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86481,"byte_end":86534,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"error(\"stream too long\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86539,"byte_end":86566,"line_start":354,"line_end":354,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86358,"byte_end":86372,"line_start":349,"line_end":349,"column_start":10,"column_end":24},"name":"ReadToEndError","qualname":"::recv_stream::ReadToEndError","value":"pub enum ReadToEndError { Read(ReadError), TooLong, }","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1191}],"decl_id":null,"docs":" Error from the [`ReadToEnd`] future.","sig":null,"attributes":[{"value":"/ Error from the [`ReadToEnd`] future.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86222,"byte_end":86262,"line_start":345,"line_end":345,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86263,"byte_end":86266,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ [`ReadToEnd`]: crate::ReadToEnd","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86267,"byte_end":86302,"line_start":347,"line_end":347,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87904,"byte_end":87909,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"name":"Reset","qualname":"::recv_stream::ReadError::Reset","value":"ReadError::Reset(VarInt)","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" The peer abandoned transmitting data on this stream","sig":null,"attributes":[{"value":"/ The peer abandoned transmitting data on this stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87737,"byte_end":87792,"line_start":398,"line_end":398,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87797,"byte_end":87800,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Carries an application-defined error code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87805,"byte_end":87851,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"error(\"stream reset by peer: error {0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87856,"byte_end":87899,"line_start":401,"line_end":401,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87987,"byte_end":88001,"line_start":405,"line_end":405,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::recv_stream::ReadError::ConnectionLost","value":"ReadError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87923,"byte_end":87950,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87955,"byte_end":87982,"line_start":404,"line_end":404,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88127,"byte_end":88140,"line_start":408,"line_end":408,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::recv_stream::ReadError::UnknownStream","value":"ReadError::UnknownStream","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" The stream has already been stopped, finished, or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been stopped, finished, or reset","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88032,"byte_end":88091,"line_start":406,"line_end":406,"column_start":5,"column_end":64}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88096,"byte_end":88122,"line_start":407,"line_end":407,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88445,"byte_end":88463,"line_start":414,"line_end":414,"column_start":5,"column_end":23},"name":"IllegalOrderedRead","qualname":"::recv_stream::ReadError::IllegalOrderedRead","value":"ReadError::IllegalOrderedRead","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Attempted an ordered read following an unordered read","sig":null,"attributes":[{"value":"/ Attempted an ordered read following an unordered read","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88146,"byte_end":88203,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88208,"byte_end":88211,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Performing an unordered read allows discontinuities to arise in the receive buffer of a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88216,"byte_end":88307,"line_start":411,"line_end":411,"column_start":5,"column_end":96}},{"value":"/ stream which cannot be recovered, making further ordered reads impossible.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88312,"byte_end":88390,"line_start":412,"line_end":412,"column_start":5,"column_end":83}},{"value":"error(\"ordered read after unordered read\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88395,"byte_end":88440,"line_start":413,"line_end":413,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88759,"byte_end":88774,"line_start":422,"line_end":422,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::recv_stream::ReadError::ZeroRttRejected","value":"ReadError::ZeroRttRejected","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88469,"byte_end":88523,"line_start":415,"line_end":415,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88528,"byte_end":88531,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88536,"byte_end":88610,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88615,"byte_end":88647,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88652,"byte_end":88655,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88660,"byte_end":88723,"line_start":420,"line_end":420,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88728,"byte_end":88754,"line_start":421,"line_end":421,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87721,"byte_end":87730,"line_start":397,"line_end":397,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::recv_stream::ReadError","value":"pub enum ReadError {\n    Reset(VarInt),\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    IllegalOrderedRead,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231}],"decl_id":null,"docs":" Errors that arise from reading from a stream.\n","sig":null,"attributes":[{"value":"/ Errors that arise from reading from a stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87616,"byte_end":87665,"line_start":395,"line_end":395,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89648,"byte_end":89652,"line_start":450,"line_end":450,"column_start":12,"column_end":16},"name":"Read","qualname":"::recv_stream::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" Future produced by [`RecvStream::read()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89452,"byte_end":89498,"line_start":446,"line_end":446,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89499,"byte_end":89502,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read()`]: crate::RecvStream::read","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89503,"byte_end":89554,"line_start":448,"line_end":448,"column_start":1,"column_end":52}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89555,"byte_end":89636,"line_start":449,"line_end":449,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90354,"byte_end":90363,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::recv_stream::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_exact()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_exact()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90140,"byte_end":90192,"line_start":468,"line_end":468,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90193,"byte_end":90196,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_exact()`]: crate::RecvStream::read_exact","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90197,"byte_end":90260,"line_start":470,"line_end":470,"column_start":1,"column_end":64}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90261,"byte_end":90342,"line_start":471,"line_end":471,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91222,"byte_end":91235,"line_start":499,"line_end":499,"column_start":5,"column_end":18},"name":"FinishedEarly","qualname":"::recv_stream::ReadExactError::FinishedEarly","value":"ReadExactError::FinishedEarly","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" The stream finished before all bytes were read\n","sig":null,"attributes":[{"value":"/ The stream finished before all bytes were read","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91129,"byte_end":91179,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"error(\"stream finished early\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91184,"byte_end":91217,"line_start":498,"line_end":498,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91297,"byte_end":91306,"line_start":502,"line_end":502,"column_start":5,"column_end":14},"name":"ReadError","qualname":"::recv_stream::ReadExactError::ReadError","value":"ReadExactError::ReadError(ReadError)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" A read error occurred\n","sig":null,"attributes":[{"value":"/ A read error occurred","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91241,"byte_end":91266,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"error(transparent)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91271,"byte_end":91292,"line_start":501,"line_end":501,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91108,"byte_end":91122,"line_start":496,"line_end":496,"column_start":10,"column_end":24},"name":"ReadExactError","qualname":"::recv_stream::ReadExactError","value":"pub enum ReadExactError { FinishedEarly, ReadError(ReadError), }","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1256}],"decl_id":null,"docs":" Errors that arise from reading from a stream.\n","sig":null,"attributes":[{"value":"/ Errors that arise from reading from a stream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91003,"byte_end":91052,"line_start":494,"line_end":494,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":623},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91544,"byte_end":91553,"line_start":509,"line_end":509,"column_start":12,"column_end":21},"name":"ReadChunk","qualname":"::recv_stream::ReadChunk","value":"ReadChunk {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_chunk()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_chunk()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91330,"byte_end":91382,"line_start":505,"line_end":505,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91383,"byte_end":91386,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_chunk()`]: crate::RecvStream::read_chunk","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91387,"byte_end":91450,"line_start":507,"line_end":507,"column_start":1,"column_end":64}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91451,"byte_end":91532,"line_start":508,"line_end":508,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":632},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92161,"byte_end":92171,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"ReadChunks","qualname":"::recv_stream::ReadChunks","value":"ReadChunks {  }","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_chunks()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91944,"byte_end":91997,"line_start":523,"line_end":523,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91998,"byte_end":92001,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_chunks()`]: crate::RecvStream::read_chunks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92002,"byte_end":92067,"line_start":525,"line_end":525,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92068,"byte_end":92149,"line_start":526,"line_end":526,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92655,"byte_end":92668,"line_start":543,"line_end":543,"column_start":12,"column_end":25},"name":"UnknownStream","qualname":"::recv_stream::UnknownStream","value":"UnknownStream {  }","parent":null,"children":[{"krate":0,"index":1274}],"decl_id":null,"docs":" Error indicating that a stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ Error indicating that a stream has already been finished or reset","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92501,"byte_end":92570,"line_start":540,"line_end":540,"column_start":1,"column_end":70}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92617,"byte_end":92643,"line_start":542,"line_end":542,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93495,"byte_end":93505,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"SendStream","qualname":"::send_stream::SendStream","value":"SendStream {  }","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279}],"decl_id":null,"docs":" A stream that can only be used to send data","sig":null,"attributes":[{"value":"/ A stream that can only be used to send data","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93187,"byte_end":93234,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93235,"byte_end":93238,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If dropped, streams that haven't been explicitly [`reset()`] will continue to (re)transmit","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93239,"byte_end":93333,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ previously written data until it has been fully acknowledged or the connection is closed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93334,"byte_end":93427,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93428,"byte_end":93431,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`reset()`]: SendStream::reset","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93432,"byte_end":93466,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94106,"byte_end":94111,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"write","qualname":"<SendStream>::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write","parent":null,"children":[],"decl_id":null,"docs":" Write bytes to the stream","sig":null,"attributes":[{"value":"/ Write bytes to the stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93867,"byte_end":93896,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93901,"byte_end":93904,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes written on success. Congestion and flow control may cause this to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93909,"byte_end":94005,"line_start":42,"line_end":42,"column_start":5,"column_end":101}},{"value":"/ be shorter than `buf.len()`, indicating that only a prefix of `buf` was written.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94010,"byte_end":94094,"line_start":43,"line_end":43,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94281,"byte_end":94290,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"write_all","qualname":"<SendStream>::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write an entire buffer to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write an entire buffer to the stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94207,"byte_end":94269,"line_start":48,"line_end":48,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94651,"byte_end":94663,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"write_chunks","qualname":"<SendStream>::write_chunks","value":"pub fn write_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> WriteChunks","parent":null,"children":[],"decl_id":null,"docs":" Write chunks to the stream","sig":null,"attributes":[{"value":"/ Write chunks to the stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94392,"byte_end":94422,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94427,"byte_end":94430,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes and chunks written on success.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94435,"byte_end":94496,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/ Congestion and flow control may cause this to be shorter than `buf.len()`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94501,"byte_end":94579,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ indicating that only a prefix of `bufs` was written","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94584,"byte_end":94639,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94868,"byte_end":94879,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<SendStream>::write_chunk","value":"pub fn write_chunk(&mut Self, Bytes) -> WriteChunk","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write a single chunk in its entirety to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write a single chunk in its entirety to the stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":94780,"byte_end":94856,"line_start":62,"line_end":62,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":95097,"byte_end":95113,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"write_all_chunks","qualname":"<SendStream>::write_all_chunks","value":"pub fn write_all_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> WriteAllChunks","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write an entire list of chunks to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write an entire list of chunks to the stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":95015,"byte_end":95085,"line_start":70,"line_end":70,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96649,"byte_end":96655,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<SendStream>::finish","value":"pub fn finish(&mut Self) -> Finish","parent":null,"children":[],"decl_id":null,"docs":" Shut down the send stream gracefully.","sig":null,"attributes":[{"value":"/ Shut down the send stream gracefully.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96431,"byte_end":96472,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96477,"byte_end":96480,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ No new data may be written after calling this method. Completes when the peer has","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96485,"byte_end":96570,"line_start":113,"line_end":113,"column_start":5,"column_end":90}},{"value":"/ acknowledged all sent data, retransmitting data as needed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96575,"byte_end":96637,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":96752,"byte_end":96763,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"poll_finish","qualname":"<SendStream>::poll_finish","value":"pub fn poll_finish(&mut Self, &mut Context) -> Poll<Result<(), WriteError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98844,"byte_end":98849,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"reset","qualname":"<SendStream>::reset","value":"pub fn reset(&mut Self, VarInt) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Close the send stream immediately.","sig":null,"attributes":[{"value":"/ Close the send stream immediately.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98498,"byte_end":98536,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98541,"byte_end":98544,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ No new data can be written after calling this method. Locally buffered data is dropped, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98549,"byte_end":98644,"line_start":164,"line_end":164,"column_start":5,"column_end":100}},{"value":"/ previously transmitted data will no longer be retransmitted if lost. If an attempt has","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98649,"byte_end":98739,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ already been made to finish the stream, the peer may still receive all written data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":98744,"byte_end":98832,"line_start":166,"line_end":166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99651,"byte_end":99663,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"set_priority","qualname":"<SendStream>::set_priority","value":"pub fn set_priority(&Self, i32) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Set the priority of the send stream","sig":null,"attributes":[{"value":"/ Set the priority of the send stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99176,"byte_end":99215,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99220,"byte_end":99223,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Every send stream has an initial priority of 0. Locally buffered data from streams with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99228,"byte_end":99319,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ higher priority will be transmitted before data from streams with lower priority. Changing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99324,"byte_end":99418,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ the priority of a stream with pending data may only take effect after that data has been","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99423,"byte_end":99515,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/ transmitted. Using many different priority levels per connection may have a negative","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99520,"byte_end":99608,"line_start":182,"line_end":182,"column_start":5,"column_end":93}},{"value":"/ impact on performance.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99613,"byte_end":99639,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99930,"byte_end":99938,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"priority","qualname":"<SendStream>::priority","value":"pub fn priority(&Self) -> Result<i32, UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Get the priority of the send stream\n","sig":null,"attributes":[{"value":"/ Get the priority of the send stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":99879,"byte_end":99918,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":100196,"byte_end":100203,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"stopped","qualname":"<SendStream>::stopped","value":"pub fn stopped(&mut Self) -> Stopped","parent":null,"children":[],"decl_id":null,"docs":" Completes if/when the peer stops the stream, yielding the error code\n","sig":null,"attributes":[{"value":"/ Completes if/when the peer stops the stream, yielding the error code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":100112,"byte_end":100184,"line_start":196,"line_end":196,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":100302,"byte_end":100314,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"poll_stopped","qualname":"<SendStream>::poll_stopped","value":"pub fn poll_stopped(&mut Self, &mut Context)\n-> Poll<Result<VarInt, StoppedError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":100986,"byte_end":100988,"line_start":221,"line_end":221,"column_start":12,"column_end":14},"name":"id","qualname":"<SendStream>::id","value":"pub fn id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of this stream\n","sig":null,"attributes":[{"value":"/ Get the identity of this stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":100939,"byte_end":100974,"line_start":220,"line_end":220,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102904,"byte_end":102910,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"Finish","qualname":"::send_stream::Finish","value":"Finish {  }","parent":null,"children":[{"krate":0,"index":743}],"decl_id":null,"docs":" Future produced by `SendStream::finish`\n","sig":null,"attributes":[{"value":"/ Future produced by `SendStream::finish`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102767,"byte_end":102810,"line_start":279,"line_end":279,"column_start":1,"column_end":44}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102811,"byte_end":102892,"line_start":280,"line_end":280,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":747},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103293,"byte_end":103300,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"Stopped","qualname":"::send_stream::Stopped","value":"Stopped {  }","parent":null,"children":[{"krate":0,"index":749}],"decl_id":null,"docs":" Future produced by `SendStream::stopped`\n","sig":null,"attributes":[{"value":"/ Future produced by `SendStream::stopped`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103155,"byte_end":103199,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103200,"byte_end":103281,"line_start":294,"line_end":294,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":753},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103752,"byte_end":103757,"line_start":311,"line_end":311,"column_start":12,"column_end":17},"name":"Write","qualname":"::send_stream::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756}],"decl_id":null,"docs":" Future produced by [`SendStream::write()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103553,"byte_end":103600,"line_start":307,"line_end":307,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103601,"byte_end":103604,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write()`]: crate::SendStream::write","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103605,"byte_end":103658,"line_start":309,"line_end":309,"column_start":1,"column_end":54}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103659,"byte_end":103740,"line_start":310,"line_end":310,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104309,"byte_end":104317,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::send_stream::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"decl_id":null,"docs":" Future produced by [`SendStream::write_all()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_all()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104098,"byte_end":104149,"line_start":325,"line_end":325,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104150,"byte_end":104153,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_all()`]: crate::SendStream::write_all","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104154,"byte_end":104215,"line_start":327,"line_end":327,"column_start":1,"column_end":62}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104216,"byte_end":104297,"line_start":328,"line_end":328,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":770},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105063,"byte_end":105074,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"WriteChunks","qualname":"::send_stream::WriteChunks","value":"WriteChunks {  }","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"decl_id":null,"docs":" Future produced by [`SendStream::write_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_chunks()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104843,"byte_end":104897,"line_start":349,"line_end":349,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104898,"byte_end":104901,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_chunks()`]: crate::SendStream::write_chunks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104902,"byte_end":104969,"line_start":351,"line_end":351,"column_start":1,"column_end":68}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104970,"byte_end":105051,"line_start":352,"line_end":352,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":779},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105664,"byte_end":105674,"line_start":371,"line_end":371,"column_start":12,"column_end":22},"name":"WriteChunk","qualname":"::send_stream::WriteChunk","value":"WriteChunk {  }","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":" Future produced by [`SendStream::write_chunk()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_chunk()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105447,"byte_end":105500,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105501,"byte_end":105504,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_chunk()`]: crate::SendStream::write_chunk","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105505,"byte_end":105570,"line_start":369,"line_end":369,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105571,"byte_end":105652,"line_start":370,"line_end":370,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106410,"byte_end":106424,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"WriteAllChunks","qualname":"::send_stream::WriteAllChunks","value":"WriteAllChunks {  }","parent":null,"children":[{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"decl_id":null,"docs":" Future produced by [`SendStream::write_all_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_all_chunks()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106178,"byte_end":106236,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106237,"byte_end":106240,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_all_chunks()`]: crate::SendStream::write_all_chunks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106241,"byte_end":106316,"line_start":392,"line_end":392,"column_start":1,"column_end":76}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106317,"byte_end":106398,"line_start":393,"line_end":393,"column_start":1,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107323,"byte_end":107330,"line_start":422,"line_end":422,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::send_stream::WriteError::Stopped","value":"WriteError::Stopped(VarInt)","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The peer is no longer accepting data on this stream","sig":null,"attributes":[{"value":"/ The peer is no longer accepting data on this stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107153,"byte_end":107208,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107213,"byte_end":107216,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Carries an application-defined error code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107221,"byte_end":107267,"line_start":420,"line_end":420,"column_start":5,"column_end":51}},{"value":"error(\"sending stopped by peer: error {0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107272,"byte_end":107318,"line_start":421,"line_end":421,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107408,"byte_end":107422,"line_start":425,"line_end":425,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::send_stream::WriteError::ConnectionLost","value":"WriteError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107344,"byte_end":107371,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107376,"byte_end":107403,"line_start":424,"line_end":424,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107538,"byte_end":107551,"line_start":428,"line_end":428,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::send_stream::WriteError::UnknownStream","value":"WriteError::UnknownStream","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been finished or reset","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107453,"byte_end":107502,"line_start":426,"line_end":426,"column_start":5,"column_end":54}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107507,"byte_end":107533,"line_start":427,"line_end":427,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107847,"byte_end":107862,"line_start":436,"line_end":436,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::send_stream::WriteError::ZeroRttRejected","value":"WriteError::ZeroRttRejected","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107557,"byte_end":107611,"line_start":429,"line_end":429,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107616,"byte_end":107619,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107624,"byte_end":107698,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107703,"byte_end":107735,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107740,"byte_end":107743,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107748,"byte_end":107811,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107816,"byte_end":107842,"line_start":435,"line_end":435,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107136,"byte_end":107146,"line_start":417,"line_end":417,"column_start":10,"column_end":20},"name":"WriteError","qualname":"::send_stream::WriteError","value":"pub enum WriteError {\n    Stopped(VarInt),\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1321}],"decl_id":null,"docs":" Errors that arise from writing to a stream\n","sig":null,"attributes":[{"value":"/ Errors that arise from writing to a stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107034,"byte_end":107080,"line_start":415,"line_end":415,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108081,"byte_end":108095,"line_start":444,"line_end":444,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::send_stream::StoppedError::ConnectionLost","value":"StoppedError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108017,"byte_end":108044,"line_start":442,"line_end":442,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108049,"byte_end":108076,"line_start":443,"line_end":443,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108211,"byte_end":108224,"line_start":447,"line_end":447,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::send_stream::StoppedError::UnknownStream","value":"StoppedError::UnknownStream","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been finished or reset","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108126,"byte_end":108175,"line_start":445,"line_end":445,"column_start":5,"column_end":54}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108180,"byte_end":108206,"line_start":446,"line_end":446,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108520,"byte_end":108535,"line_start":455,"line_end":455,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::send_stream::StoppedError::ZeroRttRejected","value":"StoppedError::ZeroRttRejected","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108230,"byte_end":108284,"line_start":448,"line_end":448,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108289,"byte_end":108292,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108297,"byte_end":108371,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108376,"byte_end":108408,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108413,"byte_end":108416,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108421,"byte_end":108484,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108489,"byte_end":108515,"line_start":454,"line_end":454,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107998,"byte_end":108010,"line_start":441,"line_end":441,"column_start":10,"column_end":22},"name":"StoppedError","qualname":"::send_stream::StoppedError","value":"pub enum StoppedError {\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1349}],"decl_id":null,"docs":" Errors that arise while monitoring for a send stream stop from the peer\n","sig":null,"attributes":[{"value":"/ Errors that arise while monitoring for a send stream stop from the peer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":107867,"byte_end":107942,"line_start":439,"line_end":439,"column_start":1,"column_end":76}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/broadcast.rs","byte_start":6044,"byte_end":6053,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":8194,"byte_end":8204,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13044,"byte_end":13054,"line_start":160,"line_end":160,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13678,"byte_end":13688,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14355,"byte_end":14370,"line_start":196,"line_end":196,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16305,"byte_end":16318,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":17428,"byte_end":17444,"line_start":270,"line_end":270,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19249,"byte_end":19259,"line_start":320,"line_end":320,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27997,"byte_end":28007,"line_start":539,"line_end":539,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28885,"byte_end":28903,"line_start":558,"line_end":558,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29982,"byte_end":29999,"line_start":584,"line_end":584,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31140,"byte_end":31149,"line_start":612,"line_end":612,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32017,"byte_end":32024,"line_start":637,"line_end":637,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32985,"byte_end":32991,"line_start":663,"line_end":663,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":33888,"byte_end":33901,"line_start":688,"line_end":688,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":35233,"byte_end":35246,"line_start":729,"line_end":729,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":35374,"byte_end":35387,"line_start":736,"line_end":736,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":36057,"byte_end":36070,"line_start":752,"line_end":752,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":37353,"byte_end":37368,"line_start":786,"line_end":786,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":46708,"byte_end":46723,"line_start":1037,"line_end":1037,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47049,"byte_end":47064,"line_start":1049,"line_end":1049,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49367,"byte_end":49375,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":57924,"byte_end":57938,"line_start":255,"line_end":255,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":59136,"byte_end":59150,"line_start":292,"line_end":292,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":60189,"byte_end":60202,"line_start":326,"line_end":326,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":66142,"byte_end":66155,"line_start":480,"line_end":480,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67080,"byte_end":67088,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67210,"byte_end":67218,"line_start":521,"line_end":521,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67822,"byte_end":67830,"line_start":540,"line_end":540,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":68091,"byte_end":68102,"line_start":551,"line_end":551,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69129,"byte_end":69140,"line_start":581,"line_end":581,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69272,"byte_end":69283,"line_start":588,"line_end":588,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69790,"byte_end":69801,"line_start":604,"line_end":604,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73241,"byte_end":73246,"line_start":126,"line_end":126,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73815,"byte_end":73825,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73981,"byte_end":73991,"line_start":155,"line_end":155,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74953,"byte_end":74963,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84268,"byte_end":84278,"line_start":292,"line_end":292,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84865,"byte_end":84874,"line_start":313,"line_end":313,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86602,"byte_end":86612,"line_start":358,"line_end":358,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86942,"byte_end":86952,"line_start":370,"line_end":370,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87212,"byte_end":87222,"line_start":381,"line_end":381,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88808,"byte_end":88817,"line_start":425,"line_end":425,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89076,"byte_end":89081,"line_start":434,"line_end":434,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89736,"byte_end":89740,"line_start":455,"line_end":455,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90447,"byte_end":90456,"line_start":477,"line_end":477,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91657,"byte_end":91666,"line_start":515,"line_end":515,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92260,"byte_end":92270,"line_start":532,"line_end":532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92728,"byte_end":92741,"line_start":547,"line_end":547,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93644,"byte_end":93654,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":101059,"byte_end":101069,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":101582,"byte_end":101592,"line_start":240,"line_end":240,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102053,"byte_end":102063,"line_start":258,"line_end":258,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102968,"byte_end":102974,"line_start":285,"line_end":285,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103358,"byte_end":103365,"line_start":299,"line_end":299,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103838,"byte_end":103843,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104398,"byte_end":104406,"line_start":334,"line_end":334,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105163,"byte_end":105174,"line_start":358,"line_end":358,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105757,"byte_end":105767,"line_start":376,"line_end":376,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106532,"byte_end":106546,"line_start":400,"line_end":400,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108570,"byte_end":108575,"line_start":458,"line_end":458,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/work_limiter.rs","byte_start":110435,"byte_end":110446,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/broadcast.rs","byte_start":6044,"byte_end":6053,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":8194,"byte_end":8204,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13044,"byte_end":13054,"line_start":160,"line_end":160,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":969},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":13678,"byte_end":13688,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":14355,"byte_end":14370,"line_start":196,"line_end":196,"column_start":17,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":16305,"byte_end":16318,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":17428,"byte_end":17444,"line_start":270,"line_end":270,"column_start":17,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":982},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":19249,"byte_end":19259,"line_start":320,"line_end":320,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":27997,"byte_end":28007,"line_start":539,"line_end":539,"column_start":16,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":28885,"byte_end":28903,"line_start":558,"line_end":558,"column_start":39,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1017},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":29982,"byte_end":29999,"line_start":584,"line_end":584,"column_start":39,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1022},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":31140,"byte_end":31149,"line_start":612,"line_end":612,"column_start":39,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1027},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32017,"byte_end":32024,"line_start":637,"line_end":637,"column_start":17,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":209},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":32985,"byte_end":32991,"line_start":663,"line_end":663,"column_start":17,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":33888,"byte_end":33901,"line_start":688,"line_end":688,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":35233,"byte_end":35246,"line_start":729,"line_end":729,"column_start":16,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":35374,"byte_end":35387,"line_start":736,"line_end":736,"column_start":15,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":36057,"byte_end":36070,"line_start":752,"line_end":752,"column_start":26,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1032},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":37353,"byte_end":37368,"line_start":786,"line_end":786,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":46708,"byte_end":46723,"line_start":1037,"line_end":1037,"column_start":15,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/connection.rs","byte_start":47049,"byte_end":47064,"line_start":1049,"line_end":1049,"column_start":21,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":231},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":49367,"byte_end":49375,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":57924,"byte_end":57938,"line_start":255,"line_end":255,"column_start":17,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":59136,"byte_end":59150,"line_start":292,"line_end":292,"column_start":15,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1106},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":60189,"byte_end":60202,"line_start":326,"line_end":326,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":66142,"byte_end":66155,"line_start":480,"line_end":480,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67080,"byte_end":67088,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67210,"byte_end":67218,"line_start":521,"line_end":521,"column_start":39,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1136},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":67822,"byte_end":67830,"line_start":540,"line_end":540,"column_start":15,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":68091,"byte_end":68102,"line_start":551,"line_end":551,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69129,"byte_end":69140,"line_start":581,"line_end":581,"column_start":16,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69272,"byte_end":69283,"line_start":588,"line_end":588,"column_start":15,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/endpoint.rs","byte_start":69790,"byte_end":69801,"line_start":604,"line_end":604,"column_start":26,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1141},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73241,"byte_end":73246,"line_start":126,"line_end":126,"column_start":13,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73815,"byte_end":73825,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":3276}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/mutex.rs","byte_start":73981,"byte_end":73991,"line_start":155,"line_end":155,"column_start":30,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":469},"to":{"krate":2,"index":3289}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":74953,"byte_end":74963,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84268,"byte_end":84278,"line_start":292,"line_end":292,"column_start":57,"column_end":67},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":84865,"byte_end":84874,"line_start":313,"line_end":313,"column_start":17,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86602,"byte_end":86612,"line_start":358,"line_end":358,"column_start":20,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1152},"to":{"krate":30,"index":39}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":86942,"byte_end":86952,"line_start":370,"line_end":370,"column_start":31,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1152},"to":{"krate":65,"index":227}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":87212,"byte_end":87222,"line_start":381,"line_end":381,"column_start":15,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1152},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":88808,"byte_end":88817,"line_start":425,"line_end":425,"column_start":30,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89076,"byte_end":89081,"line_start":434,"line_end":434,"column_start":30,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":89736,"byte_end":89740,"line_start":455,"line_end":455,"column_start":21,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":607},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":90447,"byte_end":90456,"line_start":477,"line_end":477,"column_start":21,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":91657,"byte_end":91666,"line_start":515,"line_end":515,"column_start":21,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":623},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92260,"byte_end":92270,"line_start":532,"line_end":532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/recv_stream.rs","byte_start":92728,"byte_end":92741,"line_start":547,"line_end":547,"column_start":37,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1273},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":93644,"byte_end":93654,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":101059,"byte_end":101069,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1275},"to":{"krate":30,"index":42}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":101582,"byte_end":101592,"line_start":240,"line_end":240,"column_start":32,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1275},"to":{"krate":65,"index":306}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102053,"byte_end":102063,"line_start":258,"line_end":258,"column_start":15,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":102968,"byte_end":102974,"line_start":285,"line_end":285,"column_start":17,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103358,"byte_end":103365,"line_start":299,"line_end":299,"column_start":17,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":103838,"byte_end":103843,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":753},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":104398,"byte_end":104406,"line_start":334,"line_end":334,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105163,"byte_end":105174,"line_start":358,"line_end":358,"column_start":21,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":770},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":105757,"byte_end":105767,"line_start":376,"line_end":376,"column_start":21,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":779},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":106532,"byte_end":106546,"line_start":400,"line_end":400,"column_start":21,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/send_stream.rs","byte_start":108570,"byte_end":108575,"line_start":458,"line_end":458,"column_start":31,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":1,"index":4154},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.3/src/work_limiter.rs","byte_start":110435,"byte_end":110446,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}}]}