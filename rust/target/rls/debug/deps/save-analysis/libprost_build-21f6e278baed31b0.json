{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","prost_build","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=21f6e278baed31b0","-C","extra-filename=-21f6e278baed31b0","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","bytes=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libbytes-552991e5ef6892cf.rmeta","--extern","heck=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libheck-c7871f4894366874.rmeta","--extern","itertools=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libitertools-009f226fcf28281f.rmeta","--extern","lazy_static=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/liblazy_static-ba938f5ec70a57c1.rmeta","--extern","log=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/liblog-4905d1fa77bdeffb.rmeta","--extern","multimap=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libmultimap-95687d62f2215eb2.rmeta","--extern","petgraph=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libpetgraph-5beae1db5d2440cf.rmeta","--extern","prost=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost-e340b32ec67ccc25.rmeta","--extern","prost_types=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost_types-4e35a7b8fc31edb4.rmeta","--extern","regex=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libregex-a2338977ddb2bc6c.rmeta","--extern","tempfile=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtempfile-c65b656d3b4c8968.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost_build-21f6e278baed31b0.rmeta"},"prelude":{"crate_id":{"name":"prost_build","disambiguator":[6895563080937231168,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":20,"id":{"name":"lazy_static","disambiguator":[11263726247898082388,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":21,"id":{"name":"prost_types","disambiguator":[13065841614311630009,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":22,"id":{"name":"prost","disambiguator":[13289197158038005334,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":23,"id":{"name":"prost_derive","disambiguator":[17296284745430083005,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":24,"id":{"name":"bytes","disambiguator":[15047865073548325156,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":25,"id":{"name":"regex","disambiguator":[1652111412997196843,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":26,"id":{"name":"regex_syntax","disambiguator":[16958431484539065520,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":27,"id":{"name":"aho_corasick","disambiguator":[13239595560743365142,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","num":28,"id":{"name":"memchr","disambiguator":[4195968257160120161,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","num":29,"id":{"name":"itertools","disambiguator":[2898532083989511969,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","num":30,"id":{"name":"either","disambiguator":[3904522015559654778,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","num":31,"id":{"name":"log","disambiguator":[4630183041632409852,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","num":32,"id":{"name":"cfg_if","disambiguator":[3268930731548507883,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","num":33,"id":{"name":"multimap","disambiguator":[9514773452979677968,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ident.rs","num":34,"id":{"name":"heck","disambiguator":[6011751804867238357,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ident.rs","num":35,"id":{"name":"unicode_segmentation","disambiguator":[16498974868914752188,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","num":36,"id":{"name":"petgraph","disambiguator":[8850397093510259043,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","num":37,"id":{"name":"fixedbitset","disambiguator":[2989107506875982808,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","num":38,"id":{"name":"indexmap","disambiguator":[12064230872611854027,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","num":39,"id":{"name":"hashbrown","disambiguator":[6783171065962472666,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":40,"id":{"name":"tempfile","disambiguator":[2162021121280411822,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":41,"id":{"name":"remove_dir_all","disambiguator":[5794845319982526415,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":42,"id":{"name":"fastrand","disambiguator":[2401214655271157542,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","num":43,"id":{"name":"libc","disambiguator":[6790711679548644296,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":0,"byte_end":43218,"line_start":1,"line_end":1192,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":468},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3886,"byte_end":3894,"line_start":133,"line_end":133,"column_start":22,"column_end":30},"alias_span":null,"name":"Comments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3896,"byte_end":3902,"line_start":133,"line_end":133,"column_start":32,"column_end":38},"alias_span":null,"name":"Method","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":496},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3904,"byte_end":3911,"line_start":133,"line_end":133,"column_start":40,"column_end":47},"alias_span":null,"name":"Service","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":0,"byte_end":43218,"line_start":1,"line_end":1192,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":183},{"krate":0,"index":209},{"krate":0,"index":219},{"krate":0,"index":251},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":540},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":386},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":406},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":467}],"decl_id":null,"docs":" `prost-build` compiles `.proto` files into Rust.","sig":null,"attributes":[{"value":"allow(clippy :: option_as_ref_deref)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":61,"byte_end":99,"line_start":2,"line_end":2,"column_start":1,"column_end":39}},{"value":"/ `prost-build` compiles `.proto` files into Rust.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":101,"byte_end":153,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":154,"byte_end":157,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ `prost-build` is designed to be used for build-time code generation as part of a Cargo","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":158,"byte_end":248,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ build-script.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":249,"byte_end":266,"line_start":7,"line_end":7,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":267,"byte_end":270,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":271,"byte_end":285,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":286,"byte_end":289,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Let's create a small crate, `snazzy`, that defines a collection of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":290,"byte_end":360,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ snazzy new items in a protobuf file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":361,"byte_end":401,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":402,"byte_end":405,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":406,"byte_end":417,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ $ cargo new snazzy && cd snazzy","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":418,"byte_end":453,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":454,"byte_end":461,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":462,"byte_end":465,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ First, add `prost-build`, `prost` and its public dependencies to `Cargo.toml`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":466,"byte_end":547,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ (see [crates.io](https://crates.io/crates/prost) for the current versions):","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":548,"byte_end":627,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":628,"byte_end":631,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":632,"byte_end":643,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":644,"byte_end":662,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ bytes = <bytes-version>","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":663,"byte_end":690,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ prost = <prost-version>","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":691,"byte_end":718,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":719,"byte_end":722,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [build-dependencies]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":723,"byte_end":747,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/ prost-build = { version = <prost-version> }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":748,"byte_end":795,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":796,"byte_end":803,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":804,"byte_end":807,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Next, add `src/items.proto` to the project:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":808,"byte_end":855,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":856,"byte_end":859,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":860,"byte_end":872,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":873,"byte_end":895,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":896,"byte_end":899,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ package snazzy.items;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":900,"byte_end":925,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":926,"byte_end":929,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // A snazzy new shirt!","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":930,"byte_end":956,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ message Shirt {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":957,"byte_end":976,"line_start":38,"line_end":38,"column_start":1,"column_end":20}},{"value":"/     enum Size {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":977,"byte_end":996,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/         SMALL = 0;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":997,"byte_end":1019,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         MEDIUM = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1020,"byte_end":1043,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/         LARGE = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1044,"byte_end":1066,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1067,"byte_end":1076,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1077,"byte_end":1080,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     string color = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1081,"byte_end":1106,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/     Size size = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1107,"byte_end":1129,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1130,"byte_end":1135,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1136,"byte_end":1143,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ To generate Rust code from `items.proto`, we use `prost-build` in the crate's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1148,"byte_end":1229,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ `build.rs` build-script:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1230,"byte_end":1258,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1259,"byte_end":1262,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1263,"byte_end":1281,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ use std::io::Result;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1282,"byte_end":1306,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1307,"byte_end":1336,"line_start":55,"line_end":55,"column_start":1,"column_end":30}},{"value":"/     prost_build::compile_protos(&[\"src/items.proto\"], &[\"src/\"])?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1337,"byte_end":1407,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/     Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1408,"byte_end":1422,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1423,"byte_end":1428,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1429,"byte_end":1436,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1437,"byte_end":1440,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ And finally, in `lib.rs`, include the generated code:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1441,"byte_end":1498,"line_start":61,"line_end":61,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1499,"byte_end":1502,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1503,"byte_end":1521,"line_start":63,"line_end":63,"column_start":1,"column_end":19}},{"value":"/ // Include the `items` module, which is generated from items.proto.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1522,"byte_end":1593,"line_start":64,"line_end":64,"column_start":1,"column_end":72}},{"value":"/ pub mod items {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1594,"byte_end":1613,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/     include!(concat!(env!(\"OUT_DIR\"), \"/snazzy.items.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1614,"byte_end":1677,"line_start":66,"line_end":66,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1678,"byte_end":1683,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1684,"byte_end":1687,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ pub fn create_large_shirt(color: String) -> items::Shirt {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1688,"byte_end":1750,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/     let mut shirt = items::Shirt::default();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1751,"byte_end":1799,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"/     shirt.color = color;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1800,"byte_end":1828,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/     shirt.set_size(items::shirt::Size::Large);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1829,"byte_end":1879,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/     shirt","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1880,"byte_end":1893,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1894,"byte_end":1899,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1900,"byte_end":1907,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1908,"byte_end":1911,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ That's it! Run `cargo doc` to see documentation for the generated code. The full","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1912,"byte_end":1996,"line_start":77,"line_end":77,"column_start":1,"column_end":85}},{"value":"/ example project can be found on [GitHub](https://github.com/danburkert/snazzy).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":1997,"byte_end":2080,"line_start":78,"line_end":78,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2081,"byte_end":2084,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ## Sourcing `protoc`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2085,"byte_end":2109,"line_start":80,"line_end":80,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2110,"byte_end":2113,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ `prost-build` depends on the Protocol Buffers compiler, `protoc`, to parse `.proto` files into","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2114,"byte_end":2212,"line_start":82,"line_end":82,"column_start":1,"column_end":99}},{"value":"/ a representation that can be transformed into Rust. If set, `prost-build` uses the `PROTOC` and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2213,"byte_end":2312,"line_start":83,"line_end":83,"column_start":1,"column_end":100}},{"value":"/ `PROTOC_INCLUDE` environment variables for locating `protoc` and the Protobuf includes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2313,"byte_end":2403,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/ directory. For example, on a macOS system where Protobuf is installed with Homebrew, set the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2404,"byte_end":2500,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ environment to:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2501,"byte_end":2520,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2521,"byte_end":2524,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2525,"byte_end":2536,"line_start":88,"line_end":88,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/local/bin/protoc","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2537,"byte_end":2569,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/ PROTOC_INCLUDE=/usr/local/include","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2570,"byte_end":2607,"line_start":90,"line_end":90,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2608,"byte_end":2615,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2616,"byte_end":2619,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ and in a typical Linux installation:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2620,"byte_end":2660,"line_start":93,"line_end":93,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2661,"byte_end":2664,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```bash","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2665,"byte_end":2676,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ PROTOC=/usr/bin/protoc","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2677,"byte_end":2703,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/ PROTOC_INCLUDE=/usr/include","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2704,"byte_end":2735,"line_start":97,"line_end":97,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2736,"byte_end":2743,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2744,"byte_end":2747,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC` is not found in the environment, then a pre-compiled `protoc` binary bundled in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2748,"byte_end":2847,"line_start":100,"line_end":100,"column_start":1,"column_end":100}},{"value":"/ prost-build crate is used. Pre-compiled `protoc` binaries exist for Linux (non-musl), macOS,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2848,"byte_end":2944,"line_start":101,"line_end":101,"column_start":1,"column_end":97}},{"value":"/ and Windows systems. If no pre-compiled `protoc` is available for the host platform, then the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":2945,"byte_end":3042,"line_start":102,"line_end":102,"column_start":1,"column_end":98}},{"value":"/ `protoc` or `protoc.exe` binary on the `PATH` is used. If `protoc` is not available in any of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3043,"byte_end":3140,"line_start":103,"line_end":103,"column_start":1,"column_end":98}},{"value":"/ these fallback locations, then the build fails.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3141,"byte_end":3192,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3193,"byte_end":3196,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ If `PROTOC_INCLUDE` is not found in the environment, then the Protobuf include directory","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3197,"byte_end":3289,"line_start":106,"line_end":106,"column_start":1,"column_end":93}},{"value":"/ bundled in the prost-build crate is be used.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3290,"byte_end":3338,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ To force `prost-build` to use the `protoc` on the `PATH`, add `PROTOC=protoc` to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3343,"byte_end":3431,"line_start":109,"line_end":109,"column_start":1,"column_end":89}},{"value":"/ environment.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":3432,"byte_end":3448,"line_start":110,"line_end":110,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":468},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43375,"byte_end":43383,"line_start":7,"line_end":7,"column_start":12,"column_end":20},"name":"Comments","qualname":"::ast::Comments","value":"Comments { leading_detached, leading, trailing }","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"decl_id":null,"docs":" Comments on a Protobuf item.\n","sig":null,"attributes":[{"value":"/ Comments on a Protobuf item.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43314,"byte_end":43346,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":469},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43439,"byte_end":43455,"line_start":9,"line_end":9,"column_start":9,"column_end":25},"name":"leading_detached","qualname":"::ast::Comments::leading_detached","value":"std::vec::Vec<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Leading detached blocks of comments.\n","sig":null,"attributes":[{"value":"/ Leading detached blocks of comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43390,"byte_end":43430,"line_start":8,"line_end":8,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":470},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43510,"byte_end":43517,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"leading","qualname":"::ast::Comments::leading","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Leading comments.\n","sig":null,"attributes":[{"value":"/ Leading comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43480,"byte_end":43501,"line_start":11,"line_end":11,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43568,"byte_end":43576,"line_start":15,"line_end":15,"column_start":9,"column_end":17},"name":"trailing","qualname":"::ast::Comments::trailing","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":" Trailing comments.\n","sig":null,"attributes":[{"value":"/ Trailing comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43537,"byte_end":43559,"line_start":14,"line_end":14,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":44530,"byte_end":44548,"line_start":50,"line_end":50,"column_start":12,"column_end":30},"name":"append_with_indent","qualname":"<Comments>::append_with_indent","value":"pub fn append_with_indent(&Self, u8, &mut String)","parent":null,"children":[],"decl_id":null,"docs":" Appends the comments to a buffer with indentation.","sig":null,"attributes":[{"value":"/ Appends the comments to a buffer with indentation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":44378,"byte_end":44432,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":44437,"byte_end":44440,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Each level of indentation corresponds to four space (' ') characters.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":44445,"byte_end":44518,"line_start":49,"line_end":49,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46505,"byte_end":46512,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Service","qualname":"::ast::Service","value":"Service { name, proto_name, package, comments, methods, options }","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502}],"decl_id":null,"docs":" A service descriptor.\n","sig":null,"attributes":[{"value":"/ A service descriptor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46451,"byte_end":46476,"line_start":108,"line_end":108,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46563,"byte_end":46567,"line_start":112,"line_end":112,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Service::name","value":"std::string::String","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The service name in Rust style.\n","sig":null,"attributes":[{"value":"/ The service name in Rust style.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46519,"byte_end":46554,"line_start":111,"line_end":111,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":498},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46644,"byte_end":46654,"line_start":114,"line_end":114,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Service::proto_name","value":"std::string::String","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The service name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The service name as it appears in the .proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46581,"byte_end":46635,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":499},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46731,"byte_end":46738,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"package","qualname":"::ast::Service::package","value":"std::string::String","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The package name as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The package name as it appears in the .proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46668,"byte_end":46722,"line_start":115,"line_end":115,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":500},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46786,"byte_end":46794,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Service::comments","value":"ast::Comments","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The service comments.\n","sig":null,"attributes":[{"value":"/ The service comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46752,"byte_end":46777,"line_start":117,"line_end":117,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46843,"byte_end":46850,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"methods","qualname":"::ast::Service::methods","value":"std::vec::Vec<ast::Method>","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The service methods.\n","sig":null,"attributes":[{"value":"/ The service methods.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46810,"byte_end":46834,"line_start":119,"line_end":119,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":502},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46902,"byte_end":46909,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Service::options","value":"prost_types::ServiceOptions","parent":{"krate":0,"index":496},"children":[],"decl_id":null,"docs":" The service options.\n","sig":null,"attributes":[{"value":"/ The service options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46869,"byte_end":46893,"line_start":121,"line_end":121,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47004,"byte_end":47010,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Method","qualname":"::ast::Method","value":"Method { name, proto_name, comments, input_type, output_type, input_proto_type, output_proto_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515}],"decl_id":null,"docs":" A service method descriptor.\n","sig":null,"attributes":[{"value":"/ A service method descriptor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":46943,"byte_end":46975,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":506},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47067,"byte_end":47071,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::Method::name","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The name of the method in Rust style.\n","sig":null,"attributes":[{"value":"/ The name of the method in Rust style.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47017,"byte_end":47058,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":507},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47154,"byte_end":47164,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"proto_name","qualname":"::ast::Method::proto_name","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The name of the method as it appears in the .proto file.\n","sig":null,"attributes":[{"value":"/ The name of the method as it appears in the .proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47085,"byte_end":47145,"line_start":130,"line_end":130,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":508},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47211,"byte_end":47219,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::Method::comments","value":"ast::Comments","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The method comments.\n","sig":null,"attributes":[{"value":"/ The method comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47178,"byte_end":47202,"line_start":132,"line_end":132,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":509},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47268,"byte_end":47278,"line_start":135,"line_end":135,"column_start":9,"column_end":19},"name":"input_type","qualname":"::ast::Method::input_type","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The input Rust type.\n","sig":null,"attributes":[{"value":"/ The input Rust type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47235,"byte_end":47259,"line_start":134,"line_end":134,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":510},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47326,"byte_end":47337,"line_start":137,"line_end":137,"column_start":9,"column_end":20},"name":"output_type","qualname":"::ast::Method::output_type","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The output Rust type.\n","sig":null,"attributes":[{"value":"/ The output Rust type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47292,"byte_end":47317,"line_start":136,"line_end":136,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47388,"byte_end":47404,"line_start":139,"line_end":139,"column_start":9,"column_end":25},"name":"input_proto_type","qualname":"::ast::Method::input_proto_type","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The input Protobuf type.\n","sig":null,"attributes":[{"value":"/ The input Protobuf type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47351,"byte_end":47379,"line_start":138,"line_end":138,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":512},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47456,"byte_end":47473,"line_start":141,"line_end":141,"column_start":9,"column_end":26},"name":"output_proto_type","qualname":"::ast::Method::output_proto_type","value":"std::string::String","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The output Protobuf type.\n","sig":null,"attributes":[{"value":"/ The output Protobuf type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47418,"byte_end":47447,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47519,"byte_end":47526,"line_start":143,"line_end":143,"column_start":9,"column_end":16},"name":"options","qualname":"::ast::Method::options","value":"prost_types::MethodOptions","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" The method options.\n","sig":null,"attributes":[{"value":"/ The method options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47487,"byte_end":47510,"line_start":142,"line_end":142,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":514},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47627,"byte_end":47643,"line_start":145,"line_end":145,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::ast::Method::client_streaming","value":"bool","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages.\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47560,"byte_end":47618,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":515},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47722,"byte_end":47738,"line_start":147,"line_end":147,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::ast::Method::server_streaming","value":"bool","parent":{"krate":0,"index":505},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages.\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":47655,"byte_end":47713,"line_start":146,"line_end":146,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":382},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4905,"byte_end":4921,"line_start":156,"line_end":156,"column_start":11,"column_end":27},"name":"ServiceGenerator","qualname":"::ServiceGenerator","value":"ServiceGenerator","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" A service generator takes a service descriptor and generates Rust code.","sig":null,"attributes":[{"value":"/ A service generator takes a service descriptor and generates Rust code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4117,"byte_end":4192,"line_start":142,"line_end":142,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4193,"byte_end":4196,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `ServiceGenerator` can be used to generate application-specific interfaces","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4197,"byte_end":4275,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ or implementations for Protobuf service definitions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4276,"byte_end":4332,"line_start":145,"line_end":145,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4333,"byte_end":4336,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Service generators are registered with a code generator using the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4337,"byte_end":4406,"line_start":147,"line_end":147,"column_start":1,"column_end":70}},{"value":"/ `Config::service_generator` method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4407,"byte_end":4446,"line_start":148,"line_end":148,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4447,"byte_end":4450,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ A viable scenario is that an RPC framework provides a service generator. It generates a trait","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4451,"byte_end":4548,"line_start":150,"line_end":150,"column_start":1,"column_end":98}},{"value":"/ describing methods of the service and some glue code to call the methods of the trait, defining","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4549,"byte_end":4648,"line_start":151,"line_end":151,"column_start":1,"column_end":100}},{"value":"/ details like how errors are handled or if it is asynchronous. Then the user provides an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4649,"byte_end":4740,"line_start":152,"line_end":152,"column_start":1,"column_end":92}},{"value":"/ implementation of the generated trait in the application code and plugs it into the framework.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4741,"byte_end":4839,"line_start":153,"line_end":153,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4840,"byte_end":4843,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Such framework isn't part of Prost at present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4844,"byte_end":4894,"line_start":155,"line_end":155,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5036,"byte_end":5044,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"generate","qualname":"::ServiceGenerator::generate","value":"pub fn generate(&mut Self, Service, &mut String)","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Generates a Rust interface or implementation for a service, writing the\n result to `buf`.\n","sig":null,"attributes":[{"value":"/ Generates a Rust interface or implementation for a service, writing the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":4928,"byte_end":5003,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ result to `buf`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5008,"byte_end":5028,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5709,"byte_end":5717,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"finalize","qualname":"::ServiceGenerator::finalize","value":"pub fn finalize(&mut Self, &mut String)","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Finalizes the generation process.","sig":null,"attributes":[{"value":"/ Finalizes the generation process.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5098,"byte_end":5135,"line_start":161,"line_end":161,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5140,"byte_end":5143,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ In case there's something that needs to be output at the end of the generation process, it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5148,"byte_end":5242,"line_start":163,"line_end":163,"column_start":5,"column_end":99}},{"value":"/ goes here. Similar to [`generate`](#method.generate), the output should be appended to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5247,"byte_end":5337,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ `buf`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5342,"byte_end":5352,"line_start":165,"line_end":165,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5357,"byte_end":5360,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ An example can be a module or other thing that needs to appear just once, not for each","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5365,"byte_end":5455,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/ service generated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5460,"byte_end":5482,"line_start":168,"line_end":168,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5487,"byte_end":5490,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This still can be called multiple times in a lifetime of the service generator, because it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5495,"byte_end":5589,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ is called once per `.proto` file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5594,"byte_end":5631,"line_start":171,"line_end":171,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5636,"byte_end":5639,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5644,"byte_end":5701,"line_start":173,"line_end":173,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6220,"byte_end":6236,"line_start":184,"line_end":184,"column_start":8,"column_end":24},"name":"finalize_package","qualname":"::ServiceGenerator::finalize_package","value":"pub fn finalize_package(&mut Self, &str, &mut String)","parent":{"krate":0,"index":382},"children":[],"decl_id":null,"docs":" Finalizes the generation process for an entire protobuf package.","sig":null,"attributes":[{"value":"/ Finalizes the generation process for an entire protobuf package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5756,"byte_end":5824,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5829,"byte_end":5832,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This differs from [`finalize`](#method.finalize) by where (and how often) it is called","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5837,"byte_end":5927,"line_start":178,"line_end":178,"column_start":5,"column_end":95}},{"value":"/ during the service generator life cycle. This method is called once per protobuf package,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":5932,"byte_end":6025,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ making it ideal for grouping services within a single package spread across multiple","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6030,"byte_end":6118,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ `.proto` files.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6123,"byte_end":6142,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6147,"byte_end":6150,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The default implementation is empty and does nothing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6155,"byte_end":6212,"line_start":183,"line_end":183,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7152,"byte_end":7158,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" Configuration options for Protobuf code generation.","sig":null,"attributes":[{"value":"/ Configuration options for Protobuf code generation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6994,"byte_end":7049,"line_start":219,"line_end":219,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7050,"byte_end":7053,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ This configuration builder can be used to set non-default code generation options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7054,"byte_end":7140,"line_start":221,"line_end":221,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7802,"byte_end":7805,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new code generator configuration with default options.\n","sig":null,"attributes":[{"value":"/ Creates a new code generator configuration with default options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7722,"byte_end":7790,"line_start":241,"line_end":241,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10112,"byte_end":10121,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"btree_map","qualname":"<Config>::btree_map","value":"pub fn btree_map<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item =\nS>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf\n [`map`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`BTreeMap`][1] fields for Protobuf","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7857,"byte_end":7942,"line_start":246,"line_end":246,"column_start":5,"column_end":90}},{"value":"/ [`map`][2] type fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7947,"byte_end":7974,"line_start":247,"line_end":247,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7979,"byte_end":7982,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7987,"byte_end":8002,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8007,"byte_end":8010,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8015,"byte_end":8104,"line_start":251,"line_end":251,"column_start":5,"column_end":94}},{"value":"/ `BTreeMap` for Protobuf `map` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8109,"byte_end":8200,"line_start":252,"line_end":252,"column_start":5,"column_end":96}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8205,"byte_end":8295,"line_start":253,"line_end":253,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8300,"byte_end":8388,"line_start":254,"line_end":254,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8393,"byte_end":8482,"line_start":255,"line_end":255,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `BTreeMap` field is generated instead of the default [`HashMap`][3].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8487,"byte_end":8573,"line_start":256,"line_end":256,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8578,"byte_end":8581,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8586,"byte_end":8675,"line_start":258,"line_end":258,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8680,"byte_end":8694,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8699,"byte_end":8702,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8707,"byte_end":8721,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8726,"byte_end":8729,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8734,"byte_end":8745,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8750,"byte_end":8800,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8805,"byte_end":8853,"line_start":265,"line_end":265,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.my_map_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8858,"byte_end":8925,"line_start":266,"line_end":266,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8930,"byte_end":8933,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8938,"byte_end":8984,"line_start":268,"line_end":268,"column_start":5,"column_end":51}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":8989,"byte_end":9043,"line_start":269,"line_end":269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9048,"byte_end":9051,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9056,"byte_end":9097,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ config.btree_map(&[\".my_messages\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9102,"byte_end":9142,"line_start":272,"line_end":272,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9147,"byte_end":9150,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields. Expecially useful in `no_std` contexts.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9155,"byte_end":9223,"line_start":274,"line_end":274,"column_start":5,"column_end":73}},{"value":"/ config.btree_map(&[\".\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9228,"byte_end":9257,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9262,"byte_end":9265,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ // Match all map fields in a nested message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9270,"byte_end":9318,"line_start":277,"line_end":277,"column_start":5,"column_end":53}},{"value":"/ config.btree_map(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9323,"byte_end":9397,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9402,"byte_end":9405,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field'.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9410,"byte_end":9455,"line_start":280,"line_end":280,"column_start":5,"column_end":50}},{"value":"/ config.btree_map(&[\"my_map_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9460,"byte_end":9500,"line_start":281,"line_end":281,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9505,"byte_end":9508,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9513,"byte_end":9606,"line_start":283,"line_end":283,"column_start":5,"column_end":98}},{"value":"/ // package or nesting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9611,"byte_end":9637,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/ config.btree_map(&[\"MyMessageType.my_map_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9642,"byte_end":9696,"line_start":285,"line_end":285,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9701,"byte_end":9704,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_map_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9709,"byte_end":9795,"line_start":287,"line_end":287,"column_start":5,"column_end":91}},{"value":"/ config.btree_map(&[\"my_map_field\", \".foo.bar\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9800,"byte_end":9852,"line_start":288,"line_end":288,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9857,"byte_end":9864,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9869,"byte_end":9872,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/std/collections/struct.BTreeMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9877,"byte_end":9948,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#maps","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":9953,"byte_end":10025,"line_start":292,"line_end":292,"column_start":5,"column_end":77}},{"value":"/ [3]: https://doc.rust-lang.org/std/collections/struct.HashMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10030,"byte_end":10100,"line_start":293,"line_end":293,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12659,"byte_end":12664,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Config>::bytes","value":"pub fn bytes<I, S>(&mut Self, I) -> &mut Self where I: IntoIterator<Item = S>,\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configure the code generator to generate Rust [`bytes::Bytes`][1] fields for Protobuf\n [`bytes`][2] type fields.","sig":null,"attributes":[{"value":"/ Configure the code generator to generate Rust [`bytes::Bytes`][1] fields for Protobuf","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10432,"byte_end":10521,"line_start":307,"line_end":307,"column_start":5,"column_end":94}},{"value":"/ [`bytes`][2] type fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10526,"byte_end":10555,"line_start":308,"line_end":308,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10560,"byte_end":10563,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10568,"byte_end":10583,"line_start":310,"line_end":310,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10588,"byte_end":10591,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - paths to specific fields, messages, or packages which should use a Rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10596,"byte_end":10685,"line_start":312,"line_end":312,"column_start":5,"column_end":94}},{"value":"/ `Bytes` for Protobuf `bytes` fields. Paths are specified in terms of the Protobuf type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10690,"byte_end":10780,"line_start":313,"line_end":313,"column_start":5,"column_end":95}},{"value":"/ name (not the generated Rust type name). Paths with a leading `.` are treated as fully","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10785,"byte_end":10875,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/ qualified names. Paths without a leading `.` are treated as relative, and are suffix","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10880,"byte_end":10968,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ matched on the fully qualified field name. If a Protobuf map field matches any of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":10973,"byte_end":11062,"line_start":316,"line_end":316,"column_start":5,"column_end":94}},{"value":"/ paths, a Rust `Bytes` field is generated instead of the default [`Vec<u8>`][3].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11067,"byte_end":11150,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11155,"byte_end":11158,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ The matching is done on the Protobuf names, before converting to Rust-friendly casing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11163,"byte_end":11252,"line_start":319,"line_end":319,"column_start":5,"column_end":94}},{"value":"/ standards.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11257,"byte_end":11271,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11276,"byte_end":11279,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11284,"byte_end":11298,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11303,"byte_end":11306,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11311,"byte_end":11322,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11327,"byte_end":11377,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/ // Match a specific field in a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11382,"byte_end":11430,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType.my_bytes_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11435,"byte_end":11500,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11505,"byte_end":11508,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11513,"byte_end":11561,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11566,"byte_end":11616,"line_start":330,"line_end":330,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11621,"byte_end":11624,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11629,"byte_end":11672,"line_start":332,"line_end":332,"column_start":5,"column_end":48}},{"value":"/ config.bytes(&[\".my_messages\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11677,"byte_end":11713,"line_start":333,"line_end":333,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11718,"byte_end":11721,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields. Expecially useful in `no_std` contexts.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11726,"byte_end":11796,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ config.bytes(&[\".\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11801,"byte_end":11826,"line_start":336,"line_end":336,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ // Match all bytes fields in a nested message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11839,"byte_end":11889,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ config.bytes(&[\".my_messages.MyMessageType.MyNestedMessageType\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11894,"byte_end":11964,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11969,"byte_end":11972,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field'.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":11977,"byte_end":12024,"line_start":341,"line_end":341,"column_start":5,"column_end":52}},{"value":"/ config.bytes(&[\"my_bytes_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12029,"byte_end":12067,"line_start":342,"line_end":342,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12072,"byte_end":12075,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field' in messages named 'MyMessageType', regardless of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12080,"byte_end":12175,"line_start":344,"line_end":344,"column_start":5,"column_end":100}},{"value":"/ // package or nesting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12180,"byte_end":12206,"line_start":345,"line_end":345,"column_start":5,"column_end":31}},{"value":"/ config.bytes(&[\"MyMessageType.my_bytes_field\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12211,"byte_end":12263,"line_start":346,"line_end":346,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12268,"byte_end":12271,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ // Match all fields named 'my_bytes_field', and all fields in the 'foo.bar' package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12276,"byte_end":12364,"line_start":348,"line_end":348,"column_start":5,"column_end":93}},{"value":"/ config.bytes(&[\"my_bytes_field\", \".foo.bar\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12369,"byte_end":12419,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12424,"byte_end":12431,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12436,"byte_end":12439,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ [1]: https://docs.rs/bytes/latest/bytes/struct.Bytes.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12444,"byte_end":12505,"line_start":352,"line_end":352,"column_start":5,"column_end":66}},{"value":"/ [2]: https://developers.google.com/protocol-buffers/docs/proto3#scalar","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12510,"byte_end":12584,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ [3]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12589,"byte_end":12647,"line_start":354,"line_end":354,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14054,"byte_end":14069,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"field_attribute","qualname":"<Config>::field_attribute","value":"pub fn field_attribute<P, A>(&mut Self, P, A) -> &mut Self where\nP: AsRef<str>, A: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched fields.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":12978,"byte_end":13025,"line_start":368,"line_end":368,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13030,"byte_end":13033,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13038,"byte_end":13053,"line_start":370,"line_end":370,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13058,"byte_end":13061,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ **`path`** - a path matching any number of fields. These fields get the attribute.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13066,"byte_end":13152,"line_start":372,"line_end":372,"column_start":5,"column_end":91}},{"value":"/ For details about matching fields see [`btree_map`](#method.btree_map).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13157,"byte_end":13232,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13237,"byte_end":13240,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string that'll be placed before each matched field. The","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13245,"byte_end":13335,"line_start":375,"line_end":375,"column_start":5,"column_end":95}},{"value":"/ expected usage are additional attributes, usually in concert with whole-type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13340,"byte_end":13420,"line_start":376,"line_end":376,"column_start":5,"column_end":85}},{"value":"/ attributes set with [`type_attribute`](method.type_attribute), but it is not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13425,"byte_end":13505,"line_start":377,"line_end":377,"column_start":5,"column_end":85}},{"value":"/ checked and anything can be put there.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13510,"byte_end":13552,"line_start":378,"line_end":378,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13557,"byte_end":13560,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Note that the calls to this method are cumulative ‒ if multiple paths from multiple calls","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13565,"byte_end":13660,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ match the same field, the field gets all the corresponding attributes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13665,"byte_end":13739,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13744,"byte_end":13747,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13752,"byte_end":13766,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13771,"byte_end":13774,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13779,"byte_end":13790,"line_start":385,"line_end":385,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13795,"byte_end":13845,"line_start":386,"line_end":386,"column_start":5,"column_end":55}},{"value":"/ // Prost renames fields named `in` to `in_`. But if serialized through serde,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13850,"byte_end":13931,"line_start":387,"line_end":387,"column_start":5,"column_end":86}},{"value":"/ // they should as `in`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13936,"byte_end":13963,"line_start":388,"line_end":388,"column_start":5,"column_end":32}},{"value":"/ config.field_attribute(\"in\", \"#[serde(rename = \\\"in\\\")]\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":13968,"byte_end":14030,"line_start":389,"line_end":389,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14035,"byte_end":14042,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16284,"byte_end":16298,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"type_attribute","qualname":"<Config>::type_attribute","value":"pub fn type_attribute<P, A>(&mut Self, P, A) -> &mut Self where P: AsRef<str>,\nA: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attribute to matched messages, enums and one-ofs.","sig":null,"attributes":[{"value":"/ Add additional attribute to matched messages, enums and one-ofs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14319,"byte_end":14387,"line_start":401,"line_end":401,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14392,"byte_end":14395,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14400,"byte_end":14415,"line_start":403,"line_end":403,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14420,"byte_end":14423,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ **`paths`** - a path matching any number of types. It works the same way as in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14428,"byte_end":14510,"line_start":405,"line_end":405,"column_start":5,"column_end":87}},{"value":"/ [`btree_map`](#method.btree_map), just with the field name omitted.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14515,"byte_end":14586,"line_start":406,"line_end":406,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14591,"byte_end":14594,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ **`attribute`** - an arbitrary string to be placed before each matched type. The","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14599,"byte_end":14683,"line_start":408,"line_end":408,"column_start":5,"column_end":89}},{"value":"/ expected usage are additional attributes, but anything is allowed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14688,"byte_end":14758,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14763,"byte_end":14766,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The calls to this method are cumulative. They don't overwrite previous calls and if a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14771,"byte_end":14860,"line_start":411,"line_end":411,"column_start":5,"column_end":94}},{"value":"/ type is matched by multiple calls of the method, all relevant attributes are added to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14865,"byte_end":14954,"line_start":412,"line_end":412,"column_start":5,"column_end":94}},{"value":"/ it.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14959,"byte_end":14966,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14971,"byte_end":14974,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ For things like serde it might be needed to combine with [field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":14979,"byte_end":15046,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/ attributes](#method.field_attribute).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15051,"byte_end":15092,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15097,"byte_end":15100,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15105,"byte_end":15119,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15124,"byte_end":15127,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15132,"byte_end":15143,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15148,"byte_end":15198,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/ // Nothing around uses floats, so we can derive real `Eq` in addition to `PartialEq`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15203,"byte_end":15292,"line_start":422,"line_end":422,"column_start":5,"column_end":94}},{"value":"/ config.type_attribute(\".\", \"#[derive(Eq)]\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15297,"byte_end":15345,"line_start":423,"line_end":423,"column_start":5,"column_end":53}},{"value":"/ // Some messages want to be serializable with serde as well.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15350,"byte_end":15414,"line_start":424,"line_end":424,"column_start":5,"column_end":69}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType\",","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15419,"byte_end":15473,"line_start":425,"line_end":425,"column_start":5,"column_end":59}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15478,"byte_end":15566,"line_start":426,"line_end":426,"column_start":5,"column_end":93}},{"value":"/ config.type_attribute(\"my_messages.MyMessageType.MyNestedMessageType\",","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15571,"byte_end":15645,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/                       \"#[derive(Serialize)] #[serde(rename-all = \\\"snake_case\\\")]\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15650,"byte_end":15738,"line_start":428,"line_end":428,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15743,"byte_end":15750,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15755,"byte_end":15758,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Oneof fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15763,"byte_end":15781,"line_start":431,"line_end":431,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15786,"byte_end":15789,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The `oneof` fields don't have a type name of their own inside Protobuf. Therefore, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15794,"byte_end":15884,"line_start":433,"line_end":433,"column_start":5,"column_end":95}},{"value":"/ field name can be used both with `type_attribute` and `field_attribute` ‒ the first is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15889,"byte_end":15981,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ placed before the `enum` type definition, the other before the field inside corresponding","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":15986,"byte_end":16079,"line_start":435,"line_end":435,"column_start":5,"column_end":98}},{"value":"/ message `struct`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16084,"byte_end":16105,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16110,"byte_end":16113,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ In other words, to place an attribute on the `enum` implementing the `oneof`, the match","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16118,"byte_end":16209,"line_start":438,"line_end":438,"column_start":5,"column_end":96}},{"value":"/ would look like `my_messages.MyMessageType.oneofname`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16214,"byte_end":16272,"line_start":439,"line_end":439,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16631,"byte_end":16648,"line_start":451,"line_end":451,"column_start":12,"column_end":29},"name":"service_generator","qualname":"<Config>::service_generator","value":"pub fn service_generator(&mut Self, Box<dyn ServiceGenerator>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to use the provided service generator.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to use the provided service generator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16547,"byte_end":16619,"line_start":450,"line_end":450,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17002,"byte_end":17026,"line_start":458,"line_end":458,"column_start":12,"column_end":36},"name":"compile_well_known_types","qualname":"<Config>::compile_well_known_types","value":"pub fn compile_well_known_types(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not use the `prost_types` crate for Protobuf well-known\n types, and instead generate Protobuf well-known types from their `.proto` definitions.\n","sig":null,"attributes":[{"value":"/ Configures the code generator to not use the `prost_types` crate for Protobuf well-known","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16803,"byte_end":16895,"line_start":456,"line_end":456,"column_start":5,"column_end":97}},{"value":"/ types, and instead generate Protobuf well-known types from their `.proto` definitions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":16900,"byte_end":16990,"line_start":457,"line_end":457,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18171,"byte_end":18187,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"disable_comments","qualname":"<Config>::disable_comments","value":"pub fn disable_comments<I, S>(&mut Self, I) -> &mut Self where\nI: IntoIterator<Item = S>, S: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to omit documentation comments on generated Protobuf types.","sig":null,"attributes":[{"value":"/ Configures the code generator to omit documentation comments on generated Protobuf types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17111,"byte_end":17204,"line_start":463,"line_end":463,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17209,"byte_end":17212,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17217,"byte_end":17230,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17235,"byte_end":17238,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Occasionally `.proto` files contain code blocks which are not valid Rust. To avoid doctest","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17243,"byte_end":17337,"line_start":467,"line_end":467,"column_start":5,"column_end":99}},{"value":"/ failures, annotate the invalid code blocks with an [`ignore` or `no_run` attribute][1], or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17342,"byte_end":17436,"line_start":468,"line_end":468,"column_start":5,"column_end":99}},{"value":"/ disable doctests for the crate with a [Cargo.toml entry][2]. If neither of these options","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17441,"byte_end":17533,"line_start":469,"line_end":469,"column_start":5,"column_end":97}},{"value":"/ are possible, then omit comments on generated code during doctest builds:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17538,"byte_end":17615,"line_start":470,"line_end":470,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17620,"byte_end":17623,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17628,"byte_end":17646,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/ let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17651,"byte_end":17699,"line_start":473,"line_end":473,"column_start":5,"column_end":53}},{"value":"/ config.disable_comments(\".\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17704,"byte_end":17737,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/ config.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17742,"byte_end":17825,"line_start":475,"line_end":475,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17830,"byte_end":17837,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17842,"byte_end":17845,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ As with other options which take a set of paths, comments can be disabled on a per-package","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17850,"byte_end":17944,"line_start":478,"line_end":478,"column_start":5,"column_end":99}},{"value":"/ or per-symbol basis.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17949,"byte_end":17973,"line_start":479,"line_end":479,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17978,"byte_end":17981,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ [1]: https://doc.rust-lang.org/rustdoc/documentation-tests.html#attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":17986,"byte_end":18064,"line_start":481,"line_end":481,"column_start":5,"column_end":83}},{"value":"/ [2]: https://doc.rust-lang.org/cargo/reference/cargo-targets.html#configuring-a-target","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18069,"byte_end":18159,"line_start":482,"line_end":482,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22239,"byte_end":22250,"line_start":598,"line_end":598,"column_start":12,"column_end":23},"name":"extern_path","qualname":"<Config>::extern_path","value":"pub fn extern_path<P1, P2>(&mut Self, P1, P2) -> &mut Self where\nP1: Into<String>, P2: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Declare an externally provided Protobuf package or type.","sig":null,"attributes":[{"value":"/ Declare an externally provided Protobuf package or type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18499,"byte_end":18559,"line_start":496,"line_end":496,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18564,"byte_end":18567,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ `extern_path` allows `prost` types in external crates to be referenced in generated code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18572,"byte_end":18665,"line_start":498,"line_end":498,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18670,"byte_end":18673,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ When `prost` compiles a `.proto` which includes an import of another `.proto`, it will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18678,"byte_end":18768,"line_start":500,"line_end":500,"column_start":5,"column_end":95}},{"value":"/ automatically recursively compile the imported file as well. `extern_path` can be used","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18773,"byte_end":18863,"line_start":501,"line_end":501,"column_start":5,"column_end":95}},{"value":"/ to instead substitute types from an external crate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18868,"byte_end":18923,"line_start":502,"line_end":502,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18928,"byte_end":18931,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18936,"byte_end":18949,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18954,"byte_end":18957,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ As an example, consider a crate, `uuid`, with a `prost`-generated `Uuid` type:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":18962,"byte_end":19044,"line_start":506,"line_end":506,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19049,"byte_end":19052,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19057,"byte_end":19069,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/ // uuid.proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19074,"byte_end":19091,"line_start":509,"line_end":509,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19096,"byte_end":19099,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19104,"byte_end":19126,"line_start":511,"line_end":511,"column_start":5,"column_end":27}},{"value":"/ package uuid;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19131,"byte_end":19148,"line_start":512,"line_end":512,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19153,"byte_end":19156,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ message Uuid {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19161,"byte_end":19179,"line_start":514,"line_end":514,"column_start":5,"column_end":23}},{"value":"/     string uuid_str = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19184,"byte_end":19212,"line_start":515,"line_end":515,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19217,"byte_end":19222,"line_start":516,"line_end":516,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19227,"byte_end":19234,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19239,"byte_end":19242,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ The `uuid` crate implements some traits for `Uuid`, and publicly exports it:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19247,"byte_end":19327,"line_start":519,"line_end":519,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19332,"byte_end":19335,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19340,"byte_end":19358,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/ // lib.rs in the uuid crate","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19363,"byte_end":19394,"line_start":522,"line_end":522,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19399,"byte_end":19402,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/uuid.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19407,"byte_end":19458,"line_start":524,"line_end":524,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19463,"byte_end":19466,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ pub trait DoSomething {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19471,"byte_end":19498,"line_start":526,"line_end":526,"column_start":5,"column_end":32}},{"value":"/     fn do_it(&self);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19503,"byte_end":19527,"line_start":527,"line_end":527,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19532,"byte_end":19537,"line_start":528,"line_end":528,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19542,"byte_end":19545,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ impl DoSomething for Uuid {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19550,"byte_end":19581,"line_start":530,"line_end":530,"column_start":5,"column_end":36}},{"value":"/     fn do_it(&self) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19586,"byte_end":19611,"line_start":531,"line_end":531,"column_start":5,"column_end":30}},{"value":"/         println!(\"Done\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19616,"byte_end":19645,"line_start":532,"line_end":532,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19650,"byte_end":19659,"line_start":533,"line_end":533,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19664,"byte_end":19669,"line_start":534,"line_end":534,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19674,"byte_end":19681,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19686,"byte_end":19689,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ A separate crate, `my_application`, uses `prost` to generate message types which reference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19694,"byte_end":19788,"line_start":537,"line_end":537,"column_start":5,"column_end":99}},{"value":"/ `Uuid`:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19793,"byte_end":19804,"line_start":538,"line_end":538,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19809,"byte_end":19812,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19817,"byte_end":19829,"line_start":540,"line_end":540,"column_start":5,"column_end":17}},{"value":"/ // my_application.proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19834,"byte_end":19861,"line_start":541,"line_end":541,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19866,"byte_end":19869,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ syntax = \"proto3\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19874,"byte_end":19896,"line_start":543,"line_end":543,"column_start":5,"column_end":27}},{"value":"/ package my_application;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19901,"byte_end":19928,"line_start":544,"line_end":544,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19933,"byte_end":19936,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ import \"uuid.proto\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19941,"byte_end":19965,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19970,"byte_end":19973,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ message MyMessage {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":19978,"byte_end":20001,"line_start":548,"line_end":548,"column_start":5,"column_end":28}},{"value":"/     uuid.Uuid message_id = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20006,"byte_end":20039,"line_start":549,"line_end":549,"column_start":5,"column_end":38}},{"value":"/     string some_payload = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20044,"byte_end":20076,"line_start":550,"line_end":550,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20081,"byte_end":20086,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20091,"byte_end":20098,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20103,"byte_end":20106,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Additionally, `my_application` depends on the trait impls provided by the `uuid` crate:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20111,"byte_end":20202,"line_start":554,"line_end":554,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20207,"byte_end":20210,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20215,"byte_end":20233,"line_start":556,"line_end":556,"column_start":5,"column_end":23}},{"value":"/ // `main.rs` of `my_application`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20238,"byte_end":20274,"line_start":557,"line_end":557,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20279,"byte_end":20282,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ use uuid::{DoSomething, Uuid};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20287,"byte_end":20321,"line_start":559,"line_end":559,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20326,"byte_end":20329,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/my_application.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20334,"byte_end":20395,"line_start":561,"line_end":561,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20400,"byte_end":20403,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ pub fn process_message(msg: MyMessage) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20408,"byte_end":20452,"line_start":563,"line_end":563,"column_start":5,"column_end":49}},{"value":"/     if let Some(uuid) = msg.message_id {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20457,"byte_end":20501,"line_start":564,"line_end":564,"column_start":5,"column_end":49}},{"value":"/         uuid.do_it();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20506,"byte_end":20531,"line_start":565,"line_end":565,"column_start":5,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20536,"byte_end":20545,"line_start":566,"line_end":566,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20550,"byte_end":20555,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20560,"byte_end":20567,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20572,"byte_end":20575,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Without configuring `uuid` as an external path in `my_application`'s `build.rs`, `prost`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20580,"byte_end":20672,"line_start":570,"line_end":570,"column_start":5,"column_end":97}},{"value":"/ would compile a completely separate version of the `Uuid` type, and `process_message` would","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20677,"byte_end":20772,"line_start":571,"line_end":571,"column_start":5,"column_end":100}},{"value":"/ fail to compile. However, if `my_application` configures `uuid` as an extern path with a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20777,"byte_end":20869,"line_start":572,"line_end":572,"column_start":5,"column_end":97}},{"value":"/ call to `.extern_path(\".uuid\", \"::uuid\")`, `prost` will use the external type instead of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20874,"byte_end":20966,"line_start":573,"line_end":573,"column_start":5,"column_end":97}},{"value":"/ compiling a new version of `Uuid`. Note that the configuration could also be specified as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":20971,"byte_end":21064,"line_start":574,"line_end":574,"column_start":5,"column_end":98}},{"value":"/ `.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\")` if only the `Uuid` type were externally","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21069,"byte_end":21157,"line_start":575,"line_end":575,"column_start":5,"column_end":93}},{"value":"/ provided, and not the whole `uuid` package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21162,"byte_end":21209,"line_start":576,"line_end":576,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21214,"byte_end":21217,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ # Usage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21222,"byte_end":21233,"line_start":578,"line_end":578,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21238,"byte_end":21241,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ `extern_path` takes a fully-qualified Protobuf path, and the corresponding Rust path that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21246,"byte_end":21339,"line_start":580,"line_end":580,"column_start":5,"column_end":98}},{"value":"/ it will be substituted with in generated code. The Protobuf path can refer to a package or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21344,"byte_end":21438,"line_start":581,"line_end":581,"column_start":5,"column_end":99}},{"value":"/ a type, and the Rust path should correspondingly refer to a Rust module or type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21443,"byte_end":21527,"line_start":582,"line_end":582,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21532,"byte_end":21535,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21540,"byte_end":21551,"line_start":584,"line_end":584,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21556,"byte_end":21606,"line_start":585,"line_end":585,"column_start":5,"column_end":55}},{"value":"/ // Declare the `uuid` Protobuf package and all nested packages and types as externally","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21611,"byte_end":21701,"line_start":586,"line_end":586,"column_start":5,"column_end":95}},{"value":"/ // provided by the `uuid` crate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21706,"byte_end":21742,"line_start":587,"line_end":587,"column_start":5,"column_end":41}},{"value":"/ config.extern_path(\".uuid\", \"::uuid\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21747,"byte_end":21789,"line_start":588,"line_end":588,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21794,"byte_end":21797,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ // Declare the `foo.bar.baz` Protobuf package and all nested packages and types as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21802,"byte_end":21888,"line_start":590,"line_end":590,"column_start":5,"column_end":91}},{"value":"/ // externally provided by the `foo_bar_baz` crate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21893,"byte_end":21947,"line_start":591,"line_end":591,"column_start":5,"column_end":59}},{"value":"/ config.extern_path(\".foo.bar.baz\", \"::foo_bar_baz\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":21952,"byte_end":22008,"line_start":592,"line_end":592,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22013,"byte_end":22016,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ // Declare the `uuid.Uuid` Protobuf type (and all nested types) as externally provided","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22021,"byte_end":22111,"line_start":594,"line_end":594,"column_start":5,"column_end":95}},{"value":"/ // by the `uuid` crate's `Uuid` type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22116,"byte_end":22157,"line_start":595,"line_end":595,"column_start":5,"column_end":46}},{"value":"/ config.extern_path(\".uuid.Uuid\", \"::uuid::Uuid\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22162,"byte_end":22215,"line_start":596,"line_end":596,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22220,"byte_end":22227,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23503,"byte_end":23527,"line_start":633,"line_end":633,"column_start":12,"column_end":36},"name":"file_descriptor_set_path","qualname":"<Config>::file_descriptor_set_path","value":"pub fn file_descriptor_set_path<P>(&mut Self, P) -> &mut Self where\nP: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" When set, the `FileDescriptorSet` generated by `protoc` is written to the provided\n filesystem path.","sig":null,"attributes":[{"value":"/ When set, the `FileDescriptorSet` generated by `protoc` is written to the provided","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22490,"byte_end":22576,"line_start":608,"line_end":608,"column_start":5,"column_end":91}},{"value":"/ filesystem path.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22581,"byte_end":22601,"line_start":609,"line_end":609,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22606,"byte_end":22609,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This option can be used in conjunction with the [`include_bytes!`] macro and the types in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22614,"byte_end":22707,"line_start":611,"line_end":611,"column_start":5,"column_end":98}},{"value":"/ the `prost-types` crate for implementing reflection capabilities, among other things.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22712,"byte_end":22801,"line_start":612,"line_end":612,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22806,"byte_end":22809,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22814,"byte_end":22828,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22833,"byte_end":22836,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ In `build.rs`:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22841,"byte_end":22859,"line_start":616,"line_end":616,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22864,"byte_end":22867,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22872,"byte_end":22883,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use std::env;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22888,"byte_end":22907,"line_start":619,"line_end":619,"column_start":5,"column_end":24}},{"value":"/ # use std::path::PathBuf;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22912,"byte_end":22941,"line_start":620,"line_end":620,"column_start":5,"column_end":34}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":22946,"byte_end":22996,"line_start":621,"line_end":621,"column_start":5,"column_end":55}},{"value":"/ config.file_descriptor_set_path(","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23001,"byte_end":23037,"line_start":622,"line_end":622,"column_start":5,"column_end":41}},{"value":"/     PathBuf::from(env::var(\"OUT_DIR\").expect(\"OUT_DIR environment variable not set\"))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23042,"byte_end":23131,"line_start":623,"line_end":623,"column_start":5,"column_end":94}},{"value":"/         .join(\"file_descriptor_set.bin\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23136,"byte_end":23182,"line_start":624,"line_end":624,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23187,"byte_end":23194,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23199,"byte_end":23202,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ In `lib.rs`:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23207,"byte_end":23223,"line_start":627,"line_end":627,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23228,"byte_end":23231,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23236,"byte_end":23254,"line_start":629,"line_end":629,"column_start":5,"column_end":23}},{"value":"/ let file_descriptor_set_bytes = include_bytes!(concat!(env!(\"OUT_DIR\"), \"/file_descriptor_set.bin\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23259,"byte_end":23364,"line_start":630,"line_end":630,"column_start":5,"column_end":110}},{"value":"/ let file_descriptor_set = prost_types::FileDescriptorSet::decode(&file_descriptor_set_bytes[..]).unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23369,"byte_end":23479,"line_start":631,"line_end":631,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23484,"byte_end":23491,"line_start":632,"line_end":632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24298,"byte_end":24313,"line_start":655,"line_end":655,"column_start":12,"column_end":27},"name":"skip_protoc_run","qualname":"<Config>::skip_protoc_run","value":"pub fn skip_protoc_run(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" In combination with with `file_descriptor_set_path`, this can be used to provide a file\n descriptor set as an input file, rather than having prost-build generate the file by calling\n protoc.  Prost-build does require that the descriptor set was generated with\n --include_source_info.","sig":null,"attributes":[{"value":"/ In combination with with `file_descriptor_set_path`, this can be used to provide a file","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23689,"byte_end":23780,"line_start":641,"line_end":641,"column_start":5,"column_end":96}},{"value":"/ descriptor set as an input file, rather than having prost-build generate the file by calling","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23785,"byte_end":23881,"line_start":642,"line_end":642,"column_start":5,"column_end":101}},{"value":"/ protoc.  Prost-build does require that the descriptor set was generated with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23886,"byte_end":23966,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/ --include_source_info.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":23971,"byte_end":23997,"line_start":644,"line_end":644,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24002,"byte_end":24005,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ In `build.rs`:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24010,"byte_end":24028,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24033,"byte_end":24036,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24041,"byte_end":24052,"line_start":648,"line_end":648,"column_start":5,"column_end":16}},{"value":"/ # let mut config = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24057,"byte_end":24107,"line_start":649,"line_end":649,"column_start":5,"column_end":55}},{"value":"/ config.file_descriptor_set_path(\"path/from/build/system\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24112,"byte_end":24173,"line_start":650,"line_end":650,"column_start":5,"column_end":66}},{"value":"/     .skip_protoc_run()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24178,"byte_end":24204,"line_start":651,"line_end":651,"column_start":5,"column_end":31}},{"value":"/     .compile_protos(&[\"src/items.proto\"], &[\"src/\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24209,"byte_end":24266,"line_start":652,"line_end":652,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24271,"byte_end":24278,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24283,"byte_end":24286,"line_start":654,"line_end":654,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24812,"byte_end":24830,"line_start":666,"line_end":666,"column_start":12,"column_end":30},"name":"retain_enum_prefix","qualname":"<Config>::retain_enum_prefix","value":"pub fn retain_enum_prefix(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the code generator to not strip the enum name from variant names.","sig":null,"attributes":[{"value":"/ Configures the code generator to not strip the enum name from variant names.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24401,"byte_end":24481,"line_start":660,"line_end":660,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24486,"byte_end":24489,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Protobuf enum definitions commonly include the enum name as a prefix of every variant name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24494,"byte_end":24589,"line_start":662,"line_end":662,"column_start":5,"column_end":100}},{"value":"/ This style is non-idiomatic in Rust, so by default `prost` strips the enum name prefix from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24594,"byte_end":24689,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ variants which include it. Configuring this option prevents `prost` from stripping the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24694,"byte_end":24784,"line_start":664,"line_end":664,"column_start":5,"column_end":95}},{"value":"/ prefix.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24789,"byte_end":24800,"line_start":665,"line_end":665,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25205,"byte_end":25212,"line_start":675,"line_end":675,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Config>::out_dir","value":"pub fn out_dir<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where generated Rust files will be written.","sig":null,"attributes":[{"value":"/ Configures the output directory where generated Rust files will be written.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":24921,"byte_end":25000,"line_start":671,"line_end":671,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25005,"byte_end":25008,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ If unset, defaults to the `OUT_DIR` environment variable. `OUT_DIR` is set by Cargo when","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25013,"byte_end":25105,"line_start":673,"line_end":673,"column_start":5,"column_end":97}},{"value":"/ executing build scripts, so `out_dir` typically does not need to be configured.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25110,"byte_end":25193,"line_start":674,"line_end":674,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25450,"byte_end":25474,"line_start":684,"line_end":684,"column_start":12,"column_end":36},"name":"default_package_filename","qualname":"<Config>::default_package_filename","value":"pub fn default_package_filename<S>(&mut Self, S) -> &mut Self where\nS: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Configures what filename protobufs with no package definition are written to.\n","sig":null,"attributes":[{"value":"/ Configures what filename protobufs with no package definition are written to.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25357,"byte_end":25438,"line_start":683,"line_end":683,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26169,"byte_end":26179,"line_start":706,"line_end":706,"column_start":12,"column_end":22},"name":"protoc_arg","qualname":"<Config>::protoc_arg","value":"pub fn protoc_arg<S>(&mut Self, S) -> &mut Self where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Add an argument to the `protoc` protobuf compilation invocation.","sig":null,"attributes":[{"value":"/ Add an argument to the `protoc` protobuf compilation invocation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25637,"byte_end":25705,"line_start":692,"line_end":692,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25710,"byte_end":25713,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25718,"byte_end":25742,"line_start":694,"line_end":694,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25747,"byte_end":25750,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25755,"byte_end":25773,"line_start":696,"line_end":696,"column_start":5,"column_end":23}},{"value":"/ # use std::io::Result;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25778,"byte_end":25804,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25809,"byte_end":25838,"line_start":698,"line_end":698,"column_start":5,"column_end":34}},{"value":"/   let mut prost_build = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25843,"byte_end":25898,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/   // Enable a protoc experimental feature.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25903,"byte_end":25949,"line_start":700,"line_end":700,"column_start":5,"column_end":51}},{"value":"/   prost_build.protoc_arg(\"--experimental_allow_proto3_optional\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":25954,"byte_end":26023,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/   prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26028,"byte_end":26118,"line_start":702,"line_end":702,"column_start":5,"column_end":95}},{"value":"/   Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26123,"byte_end":26135,"line_start":703,"line_end":703,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26140,"byte_end":26145,"line_start":704,"line_end":704,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26150,"byte_end":26157,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27265,"byte_end":27277,"line_start":739,"line_end":739,"column_start":12,"column_end":24},"name":"include_file","qualname":"<Config>::include_file","value":"pub fn include_file<P>(&mut Self, P) -> &mut Self where P: Into<PathBuf>","parent":null,"children":[],"decl_id":null,"docs":" Configures the optional module filename for easy inclusion of all generated Rust files","sig":null,"attributes":[{"value":"/ Configures the optional module filename for easy inclusion of all generated Rust files","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26336,"byte_end":26426,"line_start":714,"line_end":714,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26431,"byte_end":26434,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If set, generates a file (inside the `OUT_DIR` or `out_dir()` as appropriate) which contains","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26439,"byte_end":26535,"line_start":716,"line_end":716,"column_start":5,"column_end":101}},{"value":"/ a set of `pub mod XXX` statements combining to load all Rust files generated.  This can allow","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26540,"byte_end":26637,"line_start":717,"line_end":717,"column_start":5,"column_end":102}},{"value":"/ for a shortcut where multiple related proto files have been compiled together resulting in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26642,"byte_end":26736,"line_start":718,"line_end":718,"column_start":5,"column_end":99}},{"value":"/ a semi-complex set of includes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26741,"byte_end":26776,"line_start":719,"line_end":719,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26781,"byte_end":26784,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Turning a need for:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26789,"byte_end":26812,"line_start":721,"line_end":721,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26817,"byte_end":26820,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26825,"byte_end":26850,"line_start":723,"line_end":723,"column_start":5,"column_end":30}},{"value":"/ pub mod Foo {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26855,"byte_end":26872,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/     pub mod Bar {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26877,"byte_end":26898,"line_start":725,"line_end":725,"column_start":5,"column_end":26}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/foo.bar.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26903,"byte_end":26965,"line_start":726,"line_end":726,"column_start":5,"column_end":67}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26970,"byte_end":26979,"line_start":727,"line_end":727,"column_start":5,"column_end":14}},{"value":"/     pub mod Baz {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":26984,"byte_end":27005,"line_start":728,"line_end":728,"column_start":5,"column_end":26}},{"value":"/         include!(concat!(env!(\"OUT_DIR\"), \"/foo.baz.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27010,"byte_end":27072,"line_start":729,"line_end":729,"column_start":5,"column_end":67}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27077,"byte_end":27086,"line_start":730,"line_end":730,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27091,"byte_end":27096,"line_start":731,"line_end":731,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27101,"byte_end":27108,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27113,"byte_end":27116,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Into the simpler:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27121,"byte_end":27142,"line_start":734,"line_end":734,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27147,"byte_end":27150,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run,ignore","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27155,"byte_end":27180,"line_start":736,"line_end":736,"column_start":5,"column_end":30}},{"value":"/ include!(concat!(env!(\"OUT_DIR\"), \"/_includes.rs\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27185,"byte_end":27241,"line_start":737,"line_end":737,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27246,"byte_end":27253,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28282,"byte_end":28296,"line_start":767,"line_end":767,"column_start":12,"column_end":26},"name":"compile_protos","qualname":"<Config>::compile_protos","value":"pub fn compile_protos<impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>>(&mut Self, &[impl AsRef<Path>],\n&[impl AsRef<Path>]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build with additional code generator\n configuration options.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build with additional code generator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27427,"byte_end":27521,"line_start":747,"line_end":747,"column_start":5,"column_end":99}},{"value":"/ configuration options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27526,"byte_end":27552,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27557,"byte_end":27560,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method is like the `prost_build::compile_protos` function, with the added ability to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27565,"byte_end":27658,"line_start":750,"line_end":750,"column_start":5,"column_end":98}},{"value":"/ specify non-default code generation options. See that function for more information about","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27663,"byte_end":27756,"line_start":751,"line_end":751,"column_start":5,"column_end":98}},{"value":"/ the arguments and generated outputs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27761,"byte_end":27801,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27806,"byte_end":27809,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The `protos` and `includes` arguments are ignored if `skip_protoc_run` is specified.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27814,"byte_end":27902,"line_start":754,"line_end":754,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27907,"byte_end":27910,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Example `build.rs`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27915,"byte_end":27939,"line_start":756,"line_end":756,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27944,"byte_end":27947,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27952,"byte_end":27970,"line_start":758,"line_end":758,"column_start":5,"column_end":23}},{"value":"/ # use std::io::Result;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":27975,"byte_end":28001,"line_start":759,"line_end":759,"column_start":5,"column_end":31}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28006,"byte_end":28035,"line_start":760,"line_end":760,"column_start":5,"column_end":34}},{"value":"/   let mut prost_build = prost_build::Config::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28040,"byte_end":28095,"line_start":761,"line_end":761,"column_start":5,"column_end":60}},{"value":"/   prost_build.btree_map(&[\".\"]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28100,"byte_end":28136,"line_start":762,"line_end":762,"column_start":5,"column_end":41}},{"value":"/   prost_build.compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28141,"byte_end":28231,"line_start":763,"line_end":763,"column_start":5,"column_end":95}},{"value":"/   Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28236,"byte_end":28248,"line_start":764,"line_end":764,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28253,"byte_end":28258,"line_start":765,"line_end":765,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":28263,"byte_end":28270,"line_start":766,"line_end":766,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39481,"byte_end":39495,"line_start":1076,"line_end":1076,"column_start":8,"column_end":22},"name":"compile_protos","qualname":"::compile_protos","value":"pub fn compile_protos<impl AsRef<Path>: AsRef<Path>,\nimpl AsRef<Path>: AsRef<Path>>(&[impl AsRef<Path>], &[impl AsRef<Path>])\n-> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Compile `.proto` files into Rust files during a Cargo build.","sig":null,"attributes":[{"value":"/ Compile `.proto` files into Rust files during a Cargo build.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":37786,"byte_end":37850,"line_start":1034,"line_end":1034,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":37851,"byte_end":37854,"line_start":1035,"line_end":1035,"column_start":1,"column_end":4}},{"value":"/ The generated `.rs` files are written to the Cargo `OUT_DIR` directory, suitable for use with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":37855,"byte_end":37952,"line_start":1036,"line_end":1036,"column_start":1,"column_end":98}},{"value":"/ the [include!][1] macro. See the [Cargo `build.rs` code generation][2] example for more info.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":37953,"byte_end":38050,"line_start":1037,"line_end":1037,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38051,"byte_end":38054,"line_start":1038,"line_end":1038,"column_start":1,"column_end":4}},{"value":"/ This function should be called in a project's `build.rs`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38055,"byte_end":38116,"line_start":1039,"line_end":1039,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38117,"byte_end":38120,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ # Arguments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38121,"byte_end":38136,"line_start":1041,"line_end":1041,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38137,"byte_end":38140,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ **`protos`** - Paths to `.proto` files to compile. Any transitively [imported][3] `.proto`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38141,"byte_end":38235,"line_start":1043,"line_end":1043,"column_start":1,"column_end":95}},{"value":"/ files are automatically be included.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38236,"byte_end":38276,"line_start":1044,"line_end":1044,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38277,"byte_end":38280,"line_start":1045,"line_end":1045,"column_start":1,"column_end":4}},{"value":"/ **`includes`** - Paths to directories in which to search for imports. Directories are searched","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38281,"byte_end":38379,"line_start":1046,"line_end":1046,"column_start":1,"column_end":99}},{"value":"/ in order. The `.proto` files passed in **`protos`** must be found in one of the provided","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38380,"byte_end":38472,"line_start":1047,"line_end":1047,"column_start":1,"column_end":93}},{"value":"/ include directories.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38473,"byte_end":38497,"line_start":1048,"line_end":1048,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38498,"byte_end":38501,"line_start":1049,"line_end":1049,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38502,"byte_end":38514,"line_start":1050,"line_end":1050,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38515,"byte_end":38518,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ This function can fail for a number of reasons:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38519,"byte_end":38570,"line_start":1052,"line_end":1052,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38571,"byte_end":38574,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/   - Failure to locate or download `protoc`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38575,"byte_end":38622,"line_start":1054,"line_end":1054,"column_start":1,"column_end":48}},{"value":"/   - Failure to parse the `.proto`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38623,"byte_end":38662,"line_start":1055,"line_end":1055,"column_start":1,"column_end":40}},{"value":"/   - Failure to locate an imported `.proto`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38663,"byte_end":38710,"line_start":1056,"line_end":1056,"column_start":1,"column_end":48}},{"value":"/   - Failure to compile a `.proto` without a [package specifier][4].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38711,"byte_end":38782,"line_start":1057,"line_end":1057,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38783,"byte_end":38786,"line_start":1058,"line_end":1058,"column_start":1,"column_end":4}},{"value":"/ It's expected that this function call be `unwrap`ed in a `build.rs`; there is typically no","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38787,"byte_end":38881,"line_start":1059,"line_end":1059,"column_start":1,"column_end":95}},{"value":"/ reason to gracefully recover from errors during a build.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38882,"byte_end":38942,"line_start":1060,"line_end":1060,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38943,"byte_end":38946,"line_start":1061,"line_end":1061,"column_start":1,"column_end":4}},{"value":"/ # Example `build.rs`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38947,"byte_end":38971,"line_start":1062,"line_end":1062,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38972,"byte_end":38975,"line_start":1063,"line_end":1063,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38976,"byte_end":38994,"line_start":1064,"line_end":1064,"column_start":1,"column_end":19}},{"value":"/ # use std::io::Result;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":38995,"byte_end":39021,"line_start":1065,"line_end":1065,"column_start":1,"column_end":27}},{"value":"/ fn main() -> Result<()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39022,"byte_end":39051,"line_start":1066,"line_end":1066,"column_start":1,"column_end":30}},{"value":"/   prost_build::compile_protos(&[\"src/frontend.proto\", \"src/backend.proto\"], &[\"src\"])?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39052,"byte_end":39143,"line_start":1067,"line_end":1067,"column_start":1,"column_end":92}},{"value":"/   Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39144,"byte_end":39156,"line_start":1068,"line_end":1068,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39157,"byte_end":39162,"line_start":1069,"line_end":1069,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39163,"byte_end":39170,"line_start":1070,"line_end":1070,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39171,"byte_end":39174,"line_start":1071,"line_end":1071,"column_start":1,"column_end":4}},{"value":"/ [1]: https://doc.rust-lang.org/std/macro.include.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39175,"byte_end":39232,"line_start":1072,"line_end":1072,"column_start":1,"column_end":58}},{"value":"/ [2]: http://doc.crates.io/build-script.html#case-study-code-generation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39233,"byte_end":39307,"line_start":1073,"line_end":1073,"column_start":1,"column_end":75}},{"value":"/ [3]: https://developers.google.com/protocol-buffers/docs/proto3#importing-definitions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39308,"byte_end":39397,"line_start":1074,"line_end":1074,"column_start":1,"column_end":90}},{"value":"/ [4]: https://developers.google.com/protocol-buffers/docs/proto#packages","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39398,"byte_end":39473,"line_start":1075,"line_end":1075,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":466},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39678,"byte_end":39684,"line_start":1081,"line_end":1081,"column_start":8,"column_end":14},"name":"protoc","qualname":"::protoc","value":"pub fn protoc() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the `protoc` binary.\n","sig":null,"attributes":[{"value":"/ Returns the path to the `protoc` binary.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39626,"byte_end":39670,"line_start":1080,"line_end":1080,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":467},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39900,"byte_end":39914,"line_start":1089,"line_end":1089,"column_start":8,"column_end":22},"name":"protoc_include","qualname":"::protoc_include","value":"pub fn protoc_include() -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns the path to the Protobuf include directory.\n","sig":null,"attributes":[{"value":"/ Returns the path to the Protobuf include directory.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":39837,"byte_end":39892,"line_start":1088,"line_end":1088,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43599,"byte_end":43607,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":51823,"byte_end":51836,"line_start":47,"line_end":47,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":84155,"byte_end":84162,"line_start":1016,"line_end":1016,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":84698,"byte_end":84707,"line_start":1034,"line_end":1034,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/extern_paths.rs","byte_start":86884,"byte_end":86895,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","byte_start":99891,"byte_end":99903,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":103017,"byte_end":103024,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105050,"byte_end":105054,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105360,"byte_end":105364,"line_start":78,"line_end":78,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105764,"byte_end":105768,"line_start":95,"line_end":95,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6572,"byte_end":6579,"line_start":197,"line_end":197,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6918,"byte_end":6927,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7709,"byte_end":7715,"line_start":240,"line_end":240,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":449},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":36154,"byte_end":36160,"line_start":992,"line_end":992,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":36857,"byte_end":36863,"line_start":1014,"line_end":1014,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/ast.rs","byte_start":43599,"byte_end":43607,"line_start":18,"line_end":18,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":51823,"byte_end":51836,"line_start":47,"line_end":47,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":84155,"byte_end":84162,"line_start":1016,"line_end":1016,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/code_generator.rs","byte_start":84698,"byte_end":84707,"line_start":1034,"line_end":1034,"column_start":6,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/extern_paths.rs","byte_start":86884,"byte_end":86895,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/message_graph.rs","byte_start":99891,"byte_end":99903,"line_start":17,"line_end":17,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":103017,"byte_end":103024,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105050,"byte_end":105054,"line_start":65,"line_end":65,"column_start":13,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105360,"byte_end":105364,"line_start":78,"line_end":78,"column_start":37,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/path.rs","byte_start":105764,"byte_end":105768,"line_start":95,"line_end":95,"column_start":42,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":269},"to":{"krate":2,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6572,"byte_end":6579,"line_start":197,"line_end":197,"column_start":18,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":6918,"byte_end":6927,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":7709,"byte_end":7715,"line_start":240,"line_end":240,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":36154,"byte_end":36160,"line_start":992,"line_end":992,"column_start":27,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-build-0.9.0/src/lib.rs","byte_start":36857,"byte_end":36863,"line_start":1014,"line_end":1014,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":390},"to":{"krate":2,"index":9687}}]}