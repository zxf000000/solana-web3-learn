{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","prost_types","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=4e35a7b8fc31edb4","-C","extra-filename=-4e35a7b8fc31edb4","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","bytes=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libbytes-552991e5ef6892cf.rmeta","--extern","prost=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost-e340b32ec67ccc25.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libprost_types-4e35a7b8fc31edb4.rmeta"},"prelude":{"crate_id":{"name":"prost_types","disambiguator":[13065841614311630009,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","num":4,"id":{"name":"prost","disambiguator":[13289197158038005334,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","num":6,"id":{"name":"prost_derive","disambiguator":[17296284745430083005,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","num":7,"id":{"name":"bytes","disambiguator":[15047865073548325156,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":0,"byte_end":22576,"line_start":1,"line_end":508,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":0,"byte_end":22576,"line_start":1,"line_end":508,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":149},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":214},{"krate":0,"index":27},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":483},{"krate":0,"index":28},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":654},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":680},{"krate":0,"index":682},{"krate":0,"index":702},{"krate":0,"index":29},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":798},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":837},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":918},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":1175},{"krate":0,"index":30},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1317},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1423},{"krate":0,"index":31},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1572},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1695},{"krate":0,"index":32},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1823},{"krate":0,"index":33},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":34},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1980},{"krate":0,"index":1982},{"krate":0,"index":35},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2149},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2215},{"krate":0,"index":36},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2385},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2400},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2448},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2518},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2571},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2672},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2715},{"krate":0,"index":2717},{"krate":0,"index":37},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2779},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2793},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2829},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26}],"decl_id":null,"docs":" Protocol Buffers well-known types.","sig":null,"attributes":[{"value":"/ Protocol Buffers well-known types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":62,"byte_end":100,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":101,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Note that the documentation for the types defined in this crate are generated from the Protobuf","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":105,"byte_end":204,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ definitions, so code examples are not in Rust.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":205,"byte_end":255,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":256,"byte_end":259,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See the [Protobuf reference][1] for more information about well-known types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":260,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [1]: https://developers.google.com/protocol-buffers/docs/reference/google.protobuf","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":345,"byte_end":431,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"no_std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":467,"byte_end":473,"line_start":12,"line_end":12,"column_start":35,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450843,"byte_end":7450860,"line_start":4,"line_end":4,"column_start":12,"column_end":29},"name":"FileDescriptorSet","qualname":"::FileDescriptorSet","value":"FileDescriptorSet { file }","parent":null,"children":[{"krate":0,"index":58}],"decl_id":null,"docs":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n","sig":null,"attributes":[{"value":"/ The protocol compiler can output a FileDescriptorSet containing the .proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450686,"byte_end":7450764,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ files it parses.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450765,"byte_end":7450785,"line_start":2,"line_end":2,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450912,"byte_end":7450916,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"name":"file","qualname":"::FileDescriptorSet::file","value":"prost::alloc::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450867,"byte_end":7450903,"line_start":5,"line_end":5,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":59},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451062,"byte_end":7451081,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"FileDescriptorProto","qualname":"::FileDescriptorProto","value":"FileDescriptorProto { name, package, dependency, public_dependency, weak_dependency, message_type, enum_type, service, extension, options, source_code_info, syntax }","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" Describes a complete .proto file.\n","sig":null,"attributes":[{"value":"/ Describes a complete .proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7450967,"byte_end":7451004,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":153},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451183,"byte_end":7451187,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::FileDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" file name, relative to root of source tree\n","sig":null,"attributes":[{"value":"/ file name, relative to root of source tree","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451088,"byte_end":7451134,"line_start":11,"line_end":11,"column_start":5,"column_end":51}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451139,"byte_end":7451174,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":154},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451329,"byte_end":7451336,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"::FileDescriptorProto::package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" e.g. \"foo\", \"foo.bar\", etc.\n","sig":null,"attributes":[{"value":"/ e.g. \"foo\", \"foo.bar\", etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451249,"byte_end":7451280,"line_start":14,"line_end":14,"column_start":5,"column_end":36}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451285,"byte_end":7451320,"line_start":15,"line_end":15,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":155},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451488,"byte_end":7451498,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"dependency","qualname":"::FileDescriptorProto::dependency","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Names of files imported by this file.\n","sig":null,"attributes":[{"value":"/ Names of files imported by this file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451398,"byte_end":7451439,"line_start":17,"line_end":17,"column_start":5,"column_end":46}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451444,"byte_end":7451479,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":156},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451697,"byte_end":7451714,"line_start":22,"line_end":22,"column_start":9,"column_end":26},"name":"public_dependency","qualname":"::FileDescriptorProto::public_dependency","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Indexes of the public imported files in the dependency list above.\n","sig":null,"attributes":[{"value":"/ Indexes of the public imported files in the dependency list above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451562,"byte_end":7451632,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"10\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451637,"byte_end":7451688,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":157},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451934,"byte_end":7451949,"line_start":26,"line_end":26,"column_start":9,"column_end":24},"name":"weak_dependency","qualname":"::FileDescriptorProto::weak_dependency","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ Indexes of the weak imported files in the dependency list.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451751,"byte_end":7451813,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451818,"byte_end":7451869,"line_start":24,"line_end":24,"column_start":5,"column_end":56}},{"value":"prost(int32, repeated, packed = \"false\", tag = \"11\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451874,"byte_end":7451925,"line_start":25,"line_end":25,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":158},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452079,"byte_end":7452091,"line_start":29,"line_end":29,"column_start":9,"column_end":21},"name":"message_type","qualname":"::FileDescriptorProto::message_type","value":"prost::alloc::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" All top-level definitions in this file.\n","sig":null,"attributes":[{"value":"/ All top-level definitions in this file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451986,"byte_end":7452029,"line_start":27,"line_end":27,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452034,"byte_end":7452070,"line_start":28,"line_end":28,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":159},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452185,"byte_end":7452194,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::FileDescriptorProto::enum_type","value":"prost::alloc::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452140,"byte_end":7452176,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":160},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452292,"byte_end":7452299,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"name":"service","qualname":"::FileDescriptorProto::service","value":"prost::alloc::vec::Vec<ServiceDescriptorProto>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452247,"byte_end":7452283,"line_start":32,"line_end":32,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":161},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452400,"byte_end":7452409,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"name":"extension","qualname":"::FileDescriptorProto::extension","value":"prost::alloc::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452355,"byte_end":7452391,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":162},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452508,"byte_end":7452515,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"options","qualname":"::FileDescriptorProto::options","value":"core::option::Option<FileOptions>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452463,"byte_end":7452499,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":163},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452861,"byte_end":7452877,"line_start":43,"line_end":43,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::FileDescriptorProto::source_code_info","value":"core::option::Option<SourceCodeInfo>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n","sig":null,"attributes":[{"value":"/ This field contains optional information about the original source code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452558,"byte_end":7452634,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ You may safely remove this entire field without harming runtime","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452639,"byte_end":7452706,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ functionality of the descriptors -- the information is needed only by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452711,"byte_end":7452784,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ development tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452789,"byte_end":7452811,"line_start":41,"line_end":41,"column_start":5,"column_end":27}},{"value":"prost(message, optional, tag = \"9\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452816,"byte_end":7452852,"line_start":42,"line_end":42,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":164},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453062,"byte_end":7453068,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"::FileDescriptorProto::syntax","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n","sig":null,"attributes":[{"value":"/ The syntax of the proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452923,"byte_end":7452956,"line_start":44,"line_end":44,"column_start":5,"column_end":38}},{"value":"/ The supported values are \"proto2\" and \"proto3\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7452961,"byte_end":7453012,"line_start":45,"line_end":45,"column_start":5,"column_end":56}},{"value":"prost(string, optional, tag = \"12\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453017,"byte_end":7453053,"line_start":46,"line_end":46,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451183,"byte_end":7451187,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"<FileDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7451329,"byte_end":7451336,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"package","qualname":"<FileDescriptorProto>::package","value":"pub fn package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `package`, or the default value if `package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453062,"byte_end":7453068,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"syntax","qualname":"<FileDescriptorProto>::syntax","value":"pub fn syntax(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `syntax`, or the default value if `syntax` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":165},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453215,"byte_end":7453230,"line_start":51,"line_end":51,"column_start":12,"column_end":27},"name":"DescriptorProto","qualname":"::DescriptorProto","value":"DescriptorProto { name, field, extension, nested_type, enum_type, extension_range, oneof_decl, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" Describes a message type.\n","sig":null,"attributes":[{"value":"/ Describes a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453128,"byte_end":7453157,"line_start":49,"line_end":49,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":216},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453281,"byte_end":7453285,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::DescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453237,"byte_end":7453272,"line_start":52,"line_end":52,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":217},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453392,"byte_end":7453397,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"field","qualname":"::DescriptorProto::field","value":"prost::alloc::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453347,"byte_end":7453383,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":218},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453496,"byte_end":7453505,"line_start":57,"line_end":57,"column_start":9,"column_end":18},"name":"extension","qualname":"::DescriptorProto::extension","value":"prost::alloc::vec::Vec<FieldDescriptorProto>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453451,"byte_end":7453487,"line_start":56,"line_end":56,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":219},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453604,"byte_end":7453615,"line_start":59,"line_end":59,"column_start":9,"column_end":20},"name":"nested_type","qualname":"::DescriptorProto::nested_type","value":"prost::alloc::vec::Vec<DescriptorProto>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453559,"byte_end":7453595,"line_start":58,"line_end":58,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":220},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453709,"byte_end":7453718,"line_start":61,"line_end":61,"column_start":9,"column_end":18},"name":"enum_type","qualname":"::DescriptorProto::enum_type","value":"prost::alloc::vec::Vec<EnumDescriptorProto>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453664,"byte_end":7453700,"line_start":60,"line_end":60,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453816,"byte_end":7453831,"line_start":63,"line_end":63,"column_start":9,"column_end":24},"name":"extension_range","qualname":"::DescriptorProto::extension_range","value":"prost::alloc::vec::Vec<descriptor_proto::ExtensionRange>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453771,"byte_end":7453807,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":222},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453942,"byte_end":7453952,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"oneof_decl","qualname":"::DescriptorProto::oneof_decl","value":"prost::alloc::vec::Vec<OneofDescriptorProto>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453897,"byte_end":7453933,"line_start":64,"line_end":64,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454051,"byte_end":7454058,"line_start":67,"line_end":67,"column_start":9,"column_end":16},"name":"options","qualname":"::DescriptorProto::options","value":"core::option::Option<MessageOptions>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454006,"byte_end":7454042,"line_start":66,"line_end":66,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":224},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454149,"byte_end":7454163,"line_start":69,"line_end":69,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::DescriptorProto::reserved_range","value":"prost::alloc::vec::Vec<descriptor_proto::ReservedRange>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454104,"byte_end":7454140,"line_start":68,"line_end":68,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":225},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454404,"byte_end":7454417,"line_start":73,"line_end":73,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::DescriptorProto::reserved_name","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved field names, which may not be used by fields in the same message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454228,"byte_end":7454306,"line_start":70,"line_end":70,"column_start":5,"column_end":83}},{"value":"/ A given name may only be reserved once.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454311,"byte_end":7454354,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"prost(string, repeated, tag = \"10\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454359,"byte_end":7454395,"line_start":72,"line_end":72,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7453281,"byte_end":7453285,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"<DescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454543,"byte_end":7454559,"line_start":76,"line_end":76,"column_start":9,"column_end":25},"name":"descriptor_proto","qualname":"::descriptor_proto","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":269},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":316}],"decl_id":null,"docs":" Nested message and enum types in `DescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `DescriptorProto`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454479,"byte_end":7454534,"line_start":75,"line_end":75,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454627,"byte_end":7454641,"line_start":78,"line_end":78,"column_start":16,"column_end":30},"name":"ExtensionRange","qualname":"::descriptor_proto::ExtensionRange","value":"ExtensionRange { start, end, options }","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":272},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454722,"byte_end":7454727,"line_start":81,"line_end":81,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ExtensionRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454652,"byte_end":7454666,"line_start":79,"line_end":79,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454675,"byte_end":7454709,"line_start":80,"line_end":80,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":273},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454836,"byte_end":7454839,"line_start":84,"line_end":84,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ExtensionRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454766,"byte_end":7454780,"line_start":82,"line_end":82,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454789,"byte_end":7454823,"line_start":83,"line_end":83,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454927,"byte_end":7454934,"line_start":86,"line_end":86,"column_start":13,"column_end":20},"name":"options","qualname":"::descriptor_proto::ExtensionRange::options","value":"core::option::Option<ExtensionRangeOptions>","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454878,"byte_end":7454914,"line_start":85,"line_end":85,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454722,"byte_end":7454727,"line_start":81,"line_end":81,"column_start":13,"column_end":18},"name":"start","qualname":"<ExtensionRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7454836,"byte_end":7454839,"line_start":84,"line_end":84,"column_start":13,"column_end":16},"name":"end","qualname":"<ExtensionRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":275},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455237,"byte_end":7455250,"line_start":92,"line_end":92,"column_start":16,"column_end":29},"name":"ReservedRange","qualname":"::descriptor_proto::ReservedRange","value":"ReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved tag numbers. Reserved tag numbers may not be used by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455000,"byte_end":7455074,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ fields or extension ranges in the same message. Reserved ranges may","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455079,"byte_end":7455150,"line_start":89,"line_end":89,"column_start":5,"column_end":76}},{"value":"/ not overlap.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455155,"byte_end":7455171,"line_start":90,"line_end":90,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":319},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455331,"byte_end":7455336,"line_start":95,"line_end":95,"column_start":13,"column_end":18},"name":"start","qualname":"::descriptor_proto::ReservedRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455261,"byte_end":7455275,"line_start":93,"line_end":93,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455284,"byte_end":7455318,"line_start":94,"line_end":94,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":320},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455445,"byte_end":7455448,"line_start":98,"line_end":98,"column_start":13,"column_end":16},"name":"end","qualname":"::descriptor_proto::ReservedRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Exclusive.\n","sig":null,"attributes":[{"value":"/ Exclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455375,"byte_end":7455389,"line_start":96,"line_end":96,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455398,"byte_end":7455432,"line_start":97,"line_end":97,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455331,"byte_end":7455336,"line_start":95,"line_end":95,"column_start":13,"column_end":18},"name":"start","qualname":"<ReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455445,"byte_end":7455448,"line_start":98,"line_end":98,"column_start":13,"column_end":16},"name":"end","qualname":"<ReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455544,"byte_end":7455565,"line_start":102,"line_end":102,"column_start":12,"column_end":33},"name":"ExtensionRangeOptions","qualname":"::ExtensionRangeOptions","value":"ExtensionRangeOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":341}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":341},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455691,"byte_end":7455711,"line_start":105,"line_end":105,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ExtensionRangeOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":321},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455572,"byte_end":7455639,"line_start":103,"line_end":103,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455644,"byte_end":7455682,"line_start":104,"line_end":104,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":342},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455859,"byte_end":7455879,"line_start":109,"line_end":109,"column_start":12,"column_end":32},"name":"FieldDescriptorProto","qualname":"::FieldDescriptorProto","value":"FieldDescriptorProto { name, number, label, r#type, type_name, extendee, default_value, oneof_index, json_name, options, proto3_optional }","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":" Describes a field within a message.\n","sig":null,"attributes":[{"value":"/ Describes a field within a message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455762,"byte_end":7455801,"line_start":107,"line_end":107,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":496},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455930,"byte_end":7455934,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"name","qualname":"::FieldDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455886,"byte_end":7455921,"line_start":110,"line_end":110,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456039,"byte_end":7456045,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"number","qualname":"::FieldDescriptorProto::number","value":"core::option::Option<i32>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455996,"byte_end":7456030,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":498},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456161,"byte_end":7456166,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"name":"label","qualname":"::FieldDescriptorProto::label","value":"core::option::Option<i32>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"field_descriptor_proto::Label\", optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456080,"byte_end":7456152,"line_start":114,"line_end":114,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":499},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456436,"byte_end":7456442,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"r#type","qualname":"::FieldDescriptorProto::r#type","value":"core::option::Option<i32>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n","sig":null,"attributes":[{"value":"/ If type_name is set, this need not be set.  If both this and type_name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456201,"byte_end":7456275,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456280,"byte_end":7456351,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"prost(enumeration = \"field_descriptor_proto::Type\", optional, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456356,"byte_end":7456427,"line_start":118,"line_end":118,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":500},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456852,"byte_end":7456861,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"type_name","qualname":"::FieldDescriptorProto::type_name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n","sig":null,"attributes":[{"value":"/ For message and enum types, this is the name of the type.  If the name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456477,"byte_end":7456551,"line_start":120,"line_end":120,"column_start":5,"column_end":79}},{"value":"/ starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456556,"byte_end":7456630,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ rules are used to find the type (i.e. first the nested types within this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456635,"byte_end":7456711,"line_start":122,"line_end":122,"column_start":5,"column_end":81}},{"value":"/ message are searched, then within the parent, on up to the root","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456716,"byte_end":7456783,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ namespace).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456788,"byte_end":7456803,"line_start":124,"line_end":124,"column_start":5,"column_end":20}},{"value":"prost(string, optional, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456808,"byte_end":7456843,"line_start":125,"line_end":125,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":501},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457093,"byte_end":7457101,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"extendee","qualname":"::FieldDescriptorProto::extendee","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n","sig":null,"attributes":[{"value":"/ For extensions, this is the name of the type being extended.  It is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456923,"byte_end":7456994,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ resolved in the same manner as type_name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456999,"byte_end":7457044,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457049,"byte_end":7457084,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":502},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457532,"byte_end":7457545,"line_start":137,"line_end":137,"column_start":9,"column_end":22},"name":"default_value","qualname":"::FieldDescriptorProto::default_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n","sig":null,"attributes":[{"value":"/ For numeric types, contains the original text representation of the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457163,"byte_end":7457241,"line_start":131,"line_end":131,"column_start":5,"column_end":83}},{"value":"/ For booleans, \"true\" or \"false\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457246,"byte_end":7457282,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/ For strings, contains the default text contents (not escaped in any way).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457287,"byte_end":7457364,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/ For bytes, contains the C escaped value.  All bytes >= 128 are escaped.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457369,"byte_end":7457444,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ TODO(kenton):  Base-64 encode?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457449,"byte_end":7457483,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"prost(string, optional, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457488,"byte_end":7457523,"line_start":136,"line_end":136,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":503},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457782,"byte_end":7457793,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::FieldDescriptorProto::oneof_index","value":"core::option::Option<i32>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n","sig":null,"attributes":[{"value":"/ If set, gives the index of a oneof in the containing type's oneof_decl","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457607,"byte_end":7457681,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ list.  This field is a member of that oneof.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457686,"byte_end":7457734,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"prost(int32, optional, tag = \"9\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457739,"byte_end":7457773,"line_start":140,"line_end":140,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":504},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458136,"byte_end":7458145,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"json_name","qualname":"::FieldDescriptorProto::json_name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n","sig":null,"attributes":[{"value":"/ JSON name of this field. The value is set by protocol compiler. If the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457828,"byte_end":7457902,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ user has set a \"json_name\" option on this field, that option's value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457907,"byte_end":7457979,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/ will be used. Otherwise, it's deduced from the field's name by converting","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457984,"byte_end":7458061,"line_start":144,"line_end":144,"column_start":5,"column_end":82}},{"value":"/ it to camelCase.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458066,"byte_end":7458086,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"prost(string, optional, tag = \"10\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458091,"byte_end":7458127,"line_start":146,"line_end":146,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":505},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458252,"byte_end":7458259,"line_start":149,"line_end":149,"column_start":9,"column_end":16},"name":"options","qualname":"::FieldDescriptorProto::options","value":"core::option::Option<FieldOptions>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458207,"byte_end":7458243,"line_start":148,"line_end":148,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":506},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459681,"byte_end":7459696,"line_start":172,"line_end":172,"column_start":9,"column_end":24},"name":"proto3_optional","qualname":"::FieldDescriptorProto::proto3_optional","value":"core::option::Option<bool>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":" If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.","sig":null,"attributes":[{"value":"/ If true, this is a proto3 \"optional\". When a proto3 field is optional, it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458303,"byte_end":7458380,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/ tracks presence regardless of field type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458385,"byte_end":7458430,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458435,"byte_end":7458438,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When proto3_optional is true, this field must be belong to a oneof to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458443,"byte_end":7458516,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ signal to old proto3 clients that presence is tracked for this field. This","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458521,"byte_end":7458599,"line_start":154,"line_end":154,"column_start":5,"column_end":83}},{"value":"/ oneof is known as a \"synthetic\" oneof, and this field must be its sole","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458604,"byte_end":7458678,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ member (each proto3 optional field gets its own synthetic oneof). Synthetic","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458683,"byte_end":7458762,"line_start":156,"line_end":156,"column_start":5,"column_end":84}},{"value":"/ oneofs exist in the descriptor only, and do not generate any API. Synthetic","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458767,"byte_end":7458846,"line_start":157,"line_end":157,"column_start":5,"column_end":84}},{"value":"/ oneofs must be ordered after all \"real\" oneofs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458851,"byte_end":7458902,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458907,"byte_end":7458910,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ For message fields, proto3_optional doesn't create any semantic change,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458915,"byte_end":7458990,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ since non-repeated message fields always track presence. However it still","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458995,"byte_end":7459072,"line_start":161,"line_end":161,"column_start":5,"column_end":82}},{"value":"/ indicates the semantic detail of whether the user wrote \"optional\" or not.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459077,"byte_end":7459155,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/ This can be useful for round-tripping the .proto file. For consistency we","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459160,"byte_end":7459237,"line_start":163,"line_end":163,"column_start":5,"column_end":82}},{"value":"/ give message fields a synthetic oneof also, even though it is not required","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459242,"byte_end":7459320,"line_start":164,"line_end":164,"column_start":5,"column_end":83}},{"value":"/ to track presence. This is especially important because the parser can't","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459325,"byte_end":7459401,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ tell if a field is a message or an enum, so it must always create a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459406,"byte_end":7459477,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ synthetic oneof.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459482,"byte_end":7459502,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459507,"byte_end":7459510,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Proto2 optional fields do not set this flag, because they already indicate","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459515,"byte_end":7459593,"line_start":169,"line_end":169,"column_start":5,"column_end":83}},{"value":"/ optional with `LABEL_OPTIONAL`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459598,"byte_end":7459633,"line_start":170,"line_end":170,"column_start":5,"column_end":40}},{"value":"prost(bool, optional, tag = \"17\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459638,"byte_end":7459672,"line_start":171,"line_end":171,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7455930,"byte_end":7455934,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"name":"name","qualname":"<FieldDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457093,"byte_end":7457101,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"extendee","qualname":"<FieldDescriptorProto>::extendee","value":"pub fn extendee(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `extendee`, or the default value if `extendee` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456039,"byte_end":7456045,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"number","qualname":"<FieldDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456161,"byte_end":7456166,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"name":"label","qualname":"<FieldDescriptorProto>::label","value":"pub fn label(&Self) -> field_descriptor_proto::Label","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `label`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456436,"byte_end":7456442,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"type","qualname":"<FieldDescriptorProto>::type","value":"pub fn r#type(&Self) -> field_descriptor_proto::Type","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `type`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7456852,"byte_end":7456861,"line_start":126,"line_end":126,"column_start":9,"column_end":18},"name":"type_name","qualname":"<FieldDescriptorProto>::type_name","value":"pub fn type_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `type_name`, or the default value if `type_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457532,"byte_end":7457545,"line_start":137,"line_end":137,"column_start":9,"column_end":22},"name":"default_value","qualname":"<FieldDescriptorProto>::default_value","value":"pub fn default_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `default_value`, or the default value if `default_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7457782,"byte_end":7457793,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"<FieldDescriptorProto>::oneof_index","value":"pub fn oneof_index(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `oneof_index`, or the default value if `oneof_index` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7458136,"byte_end":7458145,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"json_name","qualname":"<FieldDescriptorProto>::json_name","value":"pub fn json_name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `json_name`, or the default value if `json_name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459681,"byte_end":7459696,"line_start":172,"line_end":172,"column_start":9,"column_end":24},"name":"proto3_optional","qualname":"<FieldDescriptorProto>::proto3_optional","value":"pub fn proto3_optional(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `proto3_optional`, or the default value if `proto3_optional` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459799,"byte_end":7459821,"line_start":175,"line_end":175,"column_start":9,"column_end":31},"name":"field_descriptor_proto","qualname":"::field_descriptor_proto","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":620}],"decl_id":null,"docs":" Nested message and enum types in `FieldDescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FieldDescriptorProto`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459730,"byte_end":7459790,"line_start":174,"line_end":174,"column_start":1,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460052,"byte_end":7460058,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"name":"Double","qualname":"::field_descriptor_proto::Type::Double","value":"Type::Double","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" 0 is reserved for errors.\n Order is weird for historical reasons.\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459963,"byte_end":7459992,"line_start":179,"line_end":179,"column_start":9,"column_end":38}},{"value":"/ Order is weird for historical reasons.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460001,"byte_end":7460043,"line_start":180,"line_end":180,"column_start":9,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":511},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460072,"byte_end":7460077,"line_start":182,"line_end":182,"column_start":9,"column_end":14},"name":"Float","qualname":"::field_descriptor_proto::Type::Float","value":"Type::Float","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460216,"byte_end":7460221,"line_start":185,"line_end":185,"column_start":9,"column_end":14},"name":"Int64","qualname":"::field_descriptor_proto::Type::Int64","value":"Type::Int64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460091,"byte_end":7460167,"line_start":183,"line_end":183,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460176,"byte_end":7460207,"line_start":184,"line_end":184,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460235,"byte_end":7460241,"line_start":186,"line_end":186,"column_start":9,"column_end":15},"name":"Uint64","qualname":"::field_descriptor_proto::Type::Uint64","value":"Type::Uint64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460380,"byte_end":7460385,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"name":"Int32","qualname":"::field_descriptor_proto::Type::Int32","value":"Type::Int32","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n","sig":null,"attributes":[{"value":"/ Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460255,"byte_end":7460331,"line_start":187,"line_end":187,"column_start":9,"column_end":85}},{"value":"/ negative values are likely.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460340,"byte_end":7460371,"line_start":188,"line_end":188,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460399,"byte_end":7460406,"line_start":190,"line_end":190,"column_start":9,"column_end":16},"name":"Fixed64","qualname":"::field_descriptor_proto::Type::Fixed64","value":"Type::Fixed64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":526},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460420,"byte_end":7460427,"line_start":191,"line_end":191,"column_start":9,"column_end":16},"name":"Fixed32","qualname":"::field_descriptor_proto::Type::Fixed32","value":"Type::Fixed32","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":529},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460441,"byte_end":7460445,"line_start":192,"line_end":192,"column_start":9,"column_end":13},"name":"Bool","qualname":"::field_descriptor_proto::Type::Bool","value":"Type::Bool","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":532},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460459,"byte_end":7460465,"line_start":193,"line_end":193,"column_start":9,"column_end":15},"name":"String","qualname":"::field_descriptor_proto::Type::String","value":"Type::String","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":535},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460732,"byte_end":7460737,"line_start":198,"line_end":198,"column_start":9,"column_end":14},"name":"Group","qualname":"::field_descriptor_proto::Type::Group","value":"Type::Group","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n","sig":null,"attributes":[{"value":"/ Tag-delimited aggregate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460479,"byte_end":7460507,"line_start":194,"line_end":194,"column_start":9,"column_end":37}},{"value":"/ Group type is deprecated and not supported in proto3. However, Proto3","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460516,"byte_end":7460589,"line_start":195,"line_end":195,"column_start":9,"column_end":82}},{"value":"/ implementations should still be able to parse the group wire format and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460598,"byte_end":7460673,"line_start":196,"line_end":196,"column_start":9,"column_end":84}},{"value":"/ treat group fields as unknown fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460682,"byte_end":7460723,"line_start":197,"line_end":197,"column_start":9,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460792,"byte_end":7460799,"line_start":200,"line_end":200,"column_start":9,"column_end":16},"name":"Message","qualname":"::field_descriptor_proto::Type::Message","value":"Type::Message","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Length-delimited aggregate.\n","sig":null,"attributes":[{"value":"/ Length-delimited aggregate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460752,"byte_end":7460783,"line_start":199,"line_end":199,"column_start":9,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460844,"byte_end":7460849,"line_start":202,"line_end":202,"column_start":9,"column_end":14},"name":"Bytes","qualname":"::field_descriptor_proto::Type::Bytes","value":"Type::Bytes","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" New in version 2.\n","sig":null,"attributes":[{"value":"/ New in version 2.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460814,"byte_end":7460835,"line_start":201,"line_end":201,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":544},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460864,"byte_end":7460870,"line_start":203,"line_end":203,"column_start":9,"column_end":15},"name":"Uint32","qualname":"::field_descriptor_proto::Type::Uint32","value":"Type::Uint32","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460885,"byte_end":7460889,"line_start":204,"line_end":204,"column_start":9,"column_end":13},"name":"Enum","qualname":"::field_descriptor_proto::Type::Enum","value":"Type::Enum","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":550},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460904,"byte_end":7460912,"line_start":205,"line_end":205,"column_start":9,"column_end":17},"name":"Sfixed32","qualname":"::field_descriptor_proto::Type::Sfixed32","value":"Type::Sfixed32","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460927,"byte_end":7460935,"line_start":206,"line_end":206,"column_start":9,"column_end":17},"name":"Sfixed64","qualname":"::field_descriptor_proto::Type::Sfixed64","value":"Type::Sfixed64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460984,"byte_end":7460990,"line_start":208,"line_end":208,"column_start":9,"column_end":15},"name":"Sint32","qualname":"::field_descriptor_proto::Type::Sint32","value":"Type::Sint32","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7460950,"byte_end":7460975,"line_start":207,"line_end":207,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461039,"byte_end":7461045,"line_start":210,"line_end":210,"column_start":9,"column_end":15},"name":"Sint64","qualname":"::field_descriptor_proto::Type::Sint64","value":"Type::Sint64","parent":{"krate":0,"index":507},"children":[],"decl_id":null,"docs":" Uses ZigZag encoding.\n","sig":null,"attributes":[{"value":"/ Uses ZigZag encoding.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461005,"byte_end":7461030,"line_start":209,"line_end":209,"column_start":9,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":507},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459948,"byte_end":7459952,"line_start":178,"line_end":178,"column_start":14,"column_end":18},"name":"Type","qualname":"::field_descriptor_proto::Type","value":"pub enum Type {\n    Double = ,\n    Float = ,\n    Int64 = ,\n    Uint64 = ,\n    Int32 = ,\n    Fixed64 = ,\n    Fixed32 = ,\n    Bool = ,\n    String = ,\n    Group = ,\n    Message = ,\n    Bytes = ,\n    Uint32 = ,\n    Enum = ,\n    Sfixed32 = ,\n    Sfixed64 = ,\n    Sint32 = ,\n    Sint64 = ,\n}","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7459922,"byte_end":7459934,"line_start":177,"line_end":177,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461235,"byte_end":7461243,"line_start":216,"line_end":216,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field_descriptor_proto::Label::Optional","value":"Label::Optional","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" 0 is reserved for errors\n","sig":null,"attributes":[{"value":"/ 0 is reserved for errors","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461198,"byte_end":7461226,"line_start":215,"line_end":215,"column_start":9,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461257,"byte_end":7461265,"line_start":217,"line_end":217,"column_start":9,"column_end":17},"name":"Required","qualname":"::field_descriptor_proto::Label::Required","value":"Label::Required","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461279,"byte_end":7461287,"line_start":218,"line_end":218,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field_descriptor_proto::Label::Repeated","value":"Label::Repeated","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":587},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461182,"byte_end":7461187,"line_start":214,"line_end":214,"column_start":14,"column_end":19},"name":"Label","qualname":"::field_descriptor_proto::Label","value":"pub enum Label { Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461156,"byte_end":7461168,"line_start":213,"line_end":213,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461381,"byte_end":7461401,"line_start":223,"line_end":223,"column_start":12,"column_end":32},"name":"OneofDescriptorProto","qualname":"::OneofDescriptorProto","value":"OneofDescriptorProto { name, options }","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" Describes a oneof.\n","sig":null,"attributes":[{"value":"/ Describes a oneof.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461301,"byte_end":7461323,"line_start":221,"line_end":221,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":656},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461452,"byte_end":7461456,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"name":"name","qualname":"::OneofDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461408,"byte_end":7461443,"line_start":224,"line_end":224,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":657},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461563,"byte_end":7461570,"line_start":227,"line_end":227,"column_start":9,"column_end":16},"name":"options","qualname":"::OneofDescriptorProto::options","value":"core::option::Option<OneofOptions>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461518,"byte_end":7461554,"line_start":226,"line_end":226,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461452,"byte_end":7461456,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"name":"name","qualname":"<OneofDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":658},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461697,"byte_end":7461716,"line_start":231,"line_end":231,"column_start":12,"column_end":31},"name":"EnumDescriptorProto","qualname":"::EnumDescriptorProto","value":"EnumDescriptorProto { name, value, options, reserved_range, reserved_name }","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"decl_id":null,"docs":" Describes an enum type.\n","sig":null,"attributes":[{"value":"/ Describes an enum type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461612,"byte_end":7461639,"line_start":229,"line_end":229,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":704},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461767,"byte_end":7461771,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461723,"byte_end":7461758,"line_start":232,"line_end":232,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":705},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461878,"byte_end":7461883,"line_start":235,"line_end":235,"column_start":9,"column_end":14},"name":"value","qualname":"::EnumDescriptorProto::value","value":"prost::alloc::vec::Vec<EnumValueDescriptorProto>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461833,"byte_end":7461869,"line_start":234,"line_end":234,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":706},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461986,"byte_end":7461993,"line_start":237,"line_end":237,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumDescriptorProto::options","value":"core::option::Option<EnumOptions>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461941,"byte_end":7461977,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":707},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462257,"byte_end":7462271,"line_start":242,"line_end":242,"column_start":9,"column_end":23},"name":"reserved_range","qualname":"::EnumDescriptorProto::reserved_range","value":"prost::alloc::vec::Vec<enum_descriptor_proto::EnumReservedRange>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved numeric values may not be used","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462036,"byte_end":7462113,"line_start":238,"line_end":238,"column_start":5,"column_end":82}},{"value":"/ by enum values in the same enum declaration. Reserved ranges may not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462118,"byte_end":7462190,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ overlap.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462195,"byte_end":7462207,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462212,"byte_end":7462248,"line_start":241,"line_end":241,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":708},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462497,"byte_end":7462510,"line_start":246,"line_end":246,"column_start":9,"column_end":22},"name":"reserved_name","qualname":"::EnumDescriptorProto::reserved_name","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n","sig":null,"attributes":[{"value":"/ Reserved enum value names, which may not be reused. A given name may only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462345,"byte_end":7462422,"line_start":243,"line_end":243,"column_start":5,"column_end":82}},{"value":"/ be reserved once.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462427,"byte_end":7462448,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"prost(string, repeated, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462453,"byte_end":7462488,"line_start":245,"line_end":245,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7461767,"byte_end":7461771,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462640,"byte_end":7462661,"line_start":249,"line_end":249,"column_start":9,"column_end":30},"name":"enum_descriptor_proto","qualname":"::enum_descriptor_proto","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":750}],"decl_id":null,"docs":" Nested message and enum types in `EnumDescriptorProto`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `EnumDescriptorProto`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462572,"byte_end":7462631,"line_start":248,"line_end":248,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":709},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463057,"byte_end":7463074,"line_start":257,"line_end":257,"column_start":16,"column_end":33},"name":"EnumReservedRange","qualname":"::enum_descriptor_proto::EnumReservedRange","value":"EnumReservedRange { start, end }","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"decl_id":null,"docs":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.","sig":null,"attributes":[{"value":"/ Range of reserved numeric values. Reserved values may not be used by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462668,"byte_end":7462740,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ entries in the same enum. Reserved ranges may not overlap.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462745,"byte_end":7462807,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462812,"byte_end":7462815,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Note that this is distinct from DescriptorProto.ReservedRange in that it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462820,"byte_end":7462896,"line_start":253,"line_end":253,"column_start":5,"column_end":81}},{"value":"/ is inclusive such that it can appropriately represent the entire int32","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462901,"byte_end":7462975,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/ domain.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7462980,"byte_end":7462991,"line_start":255,"line_end":255,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":753},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463155,"byte_end":7463160,"line_start":260,"line_end":260,"column_start":13,"column_end":18},"name":"start","qualname":"::enum_descriptor_proto::EnumReservedRange::start","value":"core::option::Option<i32>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463085,"byte_end":7463099,"line_start":258,"line_end":258,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463108,"byte_end":7463142,"line_start":259,"line_end":259,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":754},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463269,"byte_end":7463272,"line_start":263,"line_end":263,"column_start":13,"column_end":16},"name":"end","qualname":"::enum_descriptor_proto::EnumReservedRange::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":709},"children":[],"decl_id":null,"docs":" Inclusive.\n","sig":null,"attributes":[{"value":"/ Inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463199,"byte_end":7463213,"line_start":261,"line_end":261,"column_start":9,"column_end":23}},{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463222,"byte_end":7463256,"line_start":262,"line_end":262,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463155,"byte_end":7463160,"line_start":260,"line_end":260,"column_start":13,"column_end":18},"name":"start","qualname":"<EnumReservedRange>::start","value":"pub fn start(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `start`, or the default value if `start` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463269,"byte_end":7463272,"line_start":263,"line_end":263,"column_start":13,"column_end":16},"name":"end","qualname":"<EnumReservedRange>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463406,"byte_end":7463430,"line_start":268,"line_end":268,"column_start":12,"column_end":36},"name":"EnumValueDescriptorProto","qualname":"::EnumValueDescriptorProto","value":"EnumValueDescriptorProto { name, number, options }","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803}],"decl_id":null,"docs":" Describes a value within an enum.\n","sig":null,"attributes":[{"value":"/ Describes a value within an enum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463311,"byte_end":7463348,"line_start":266,"line_end":266,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":801},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463481,"byte_end":7463485,"line_start":270,"line_end":270,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValueDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463437,"byte_end":7463472,"line_start":269,"line_end":269,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":802},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463590,"byte_end":7463596,"line_start":272,"line_end":272,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValueDescriptorProto::number","value":"core::option::Option<i32>","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463547,"byte_end":7463581,"line_start":271,"line_end":271,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":803},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463676,"byte_end":7463683,"line_start":274,"line_end":274,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValueDescriptorProto::options","value":"core::option::Option<EnumValueOptions>","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463631,"byte_end":7463667,"line_start":273,"line_end":273,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463481,"byte_end":7463485,"line_start":270,"line_end":270,"column_start":9,"column_end":13},"name":"name","qualname":"<EnumValueDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463590,"byte_end":7463596,"line_start":272,"line_end":272,"column_start":9,"column_end":15},"name":"number","qualname":"<EnumValueDescriptorProto>::number","value":"pub fn number(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `number`, or the default value if `number` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":804},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463811,"byte_end":7463833,"line_start":278,"line_end":278,"column_start":12,"column_end":34},"name":"ServiceDescriptorProto","qualname":"::ServiceDescriptorProto","value":"ServiceDescriptorProto { name, method, options }","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"decl_id":null,"docs":" Describes a service.\n","sig":null,"attributes":[{"value":"/ Describes a service.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463729,"byte_end":7463753,"line_start":276,"line_end":276,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":839},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463884,"byte_end":7463888,"line_start":280,"line_end":280,"column_start":9,"column_end":13},"name":"name","qualname":"::ServiceDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463840,"byte_end":7463875,"line_start":279,"line_end":279,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":840},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463995,"byte_end":7464001,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"method","qualname":"::ServiceDescriptorProto::method","value":"prost::alloc::vec::Vec<MethodDescriptorProto>","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463950,"byte_end":7463986,"line_start":281,"line_end":281,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":841},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464101,"byte_end":7464108,"line_start":284,"line_end":284,"column_start":9,"column_end":16},"name":"options","qualname":"::ServiceDescriptorProto::options","value":"core::option::Option<ServiceOptions>","parent":{"krate":0,"index":804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464056,"byte_end":7464092,"line_start":283,"line_end":283,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7463884,"byte_end":7463888,"line_start":280,"line_end":280,"column_start":9,"column_end":13},"name":"name","qualname":"<ServiceDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":842},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464246,"byte_end":7464267,"line_start":288,"line_end":288,"column_start":12,"column_end":33},"name":"MethodDescriptorProto","qualname":"::MethodDescriptorProto","value":"MethodDescriptorProto { name, input_type, output_type, options, client_streaming, server_streaming }","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"decl_id":null,"docs":" Describes a method of a service.\n","sig":null,"attributes":[{"value":"/ Describes a method of a service.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464152,"byte_end":7464188,"line_start":286,"line_end":286,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":924},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464318,"byte_end":7464322,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"name","qualname":"::MethodDescriptorProto::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464274,"byte_end":7464309,"line_start":289,"line_end":289,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":925},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464578,"byte_end":7464588,"line_start":294,"line_end":294,"column_start":9,"column_end":19},"name":"input_type","qualname":"::MethodDescriptorProto::input_type","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n","sig":null,"attributes":[{"value":"/ Input and output type names.  These are resolved in the same way as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464384,"byte_end":7464455,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ FieldDescriptorProto.type_name, but must refer to a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464460,"byte_end":7464529,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464534,"byte_end":7464569,"line_start":293,"line_end":293,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464694,"byte_end":7464705,"line_start":296,"line_end":296,"column_start":9,"column_end":20},"name":"output_type","qualname":"::MethodDescriptorProto::output_type","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464650,"byte_end":7464685,"line_start":295,"line_end":295,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464812,"byte_end":7464819,"line_start":298,"line_end":298,"column_start":9,"column_end":16},"name":"options","qualname":"::MethodDescriptorProto::options","value":"core::option::Option<MethodOptions>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464767,"byte_end":7464803,"line_start":297,"line_end":297,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":928},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464985,"byte_end":7465001,"line_start":301,"line_end":301,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"::MethodDescriptorProto::client_streaming","value":"core::option::Option<bool>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Identifies if client streams multiple client messages\n","sig":null,"attributes":[{"value":"/ Identifies if client streams multiple client messages","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464864,"byte_end":7464921,"line_start":299,"line_end":299,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464926,"byte_end":7464976,"line_start":300,"line_end":300,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":929},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7465158,"byte_end":7465174,"line_start":304,"line_end":304,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"::MethodDescriptorProto::server_streaming","value":"core::option::Option<bool>","parent":{"krate":0,"index":842},"children":[],"decl_id":null,"docs":" Identifies if server streams multiple server messages\n","sig":null,"attributes":[{"value":"/ Identifies if server streams multiple server messages","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7465037,"byte_end":7465094,"line_start":302,"line_end":302,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"6\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7465099,"byte_end":7465149,"line_start":303,"line_end":303,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464318,"byte_end":7464322,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"name","qualname":"<MethodDescriptorProto>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464578,"byte_end":7464588,"line_start":294,"line_end":294,"column_start":9,"column_end":19},"name":"input_type","qualname":"<MethodDescriptorProto>::input_type","value":"pub fn input_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `input_type`, or the default value if `input_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464694,"byte_end":7464705,"line_start":296,"line_end":296,"column_start":9,"column_end":20},"name":"output_type","qualname":"<MethodDescriptorProto>::output_type","value":"pub fn output_type(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `output_type`, or the default value if `output_type` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7464985,"byte_end":7465001,"line_start":301,"line_end":301,"column_start":9,"column_end":25},"name":"client_streaming","qualname":"<MethodDescriptorProto>::client_streaming","value":"pub fn client_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `client_streaming`, or the default value if `client_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7465158,"byte_end":7465174,"line_start":304,"line_end":304,"column_start":9,"column_end":25},"name":"server_streaming","qualname":"<MethodDescriptorProto>::server_streaming","value":"pub fn server_streaming(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `server_streaming`, or the default value if `server_streaming` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":930},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467151,"byte_end":7467162,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"FileOptions","qualname":"::FileOptions","value":"FileOptions { java_package, java_outer_classname, java_multiple_files, java_generate_equals_and_hash, java_string_check_utf8, optimize_for, go_package, cc_generic_services, java_generic_services, py_generic_services, php_generic_services, deprecated, cc_enable_arenas, objc_class_prefix, csharp_namespace, swift_prefix, php_class_prefix, php_namespace, php_metadata_namespace, ruby_package, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467470,"byte_end":7467482,"line_start":345,"line_end":345,"column_start":9,"column_end":21},"name":"java_package","qualname":"::FileOptions::java_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n","sig":null,"attributes":[{"value":"/ Sets the Java package where classes generated from this .proto will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467169,"byte_end":7467243,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/ placed.  By default, the proto package is used, but this is often","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467248,"byte_end":7467317,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/ inappropriate because proto packages do not normally start with backwards","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467322,"byte_end":7467399,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/ domain names.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467404,"byte_end":7467421,"line_start":343,"line_end":343,"column_start":5,"column_end":22}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467426,"byte_end":7467461,"line_start":344,"line_end":344,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467927,"byte_end":7467947,"line_start":352,"line_end":352,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"::FileOptions::java_outer_classname","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" If set, all the classes from the .proto file are wrapped in a single\n outer class with the given name.  This applies to both Proto1\n (equivalent to the old \"--one_java_file\" option) and Proto2 (where\n a .proto always translates to a single class, but you may want to\n explicitly choose the class name).\n","sig":null,"attributes":[{"value":"/ If set, all the classes from the .proto file are wrapped in a single","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467544,"byte_end":7467616,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ outer class with the given name.  This applies to both Proto1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467621,"byte_end":7467686,"line_start":347,"line_end":347,"column_start":5,"column_end":70}},{"value":"/ (equivalent to the old \"--one_java_file\" option) and Proto2 (where","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467691,"byte_end":7467761,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ a .proto always translates to a single class, but you may want to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467766,"byte_end":7467835,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"/ explicitly choose the class name).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467840,"byte_end":7467878,"line_start":350,"line_end":350,"column_start":5,"column_end":43}},{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467883,"byte_end":7467918,"line_start":351,"line_end":351,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468515,"byte_end":7468534,"line_start":360,"line_end":360,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"::FileOptions::java_multiple_files","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" If set true, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the outer class\n named by java_outer_classname.  However, the outer class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java code generator will generate a separate .java","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468009,"byte_end":7468085,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ file for each top-level message, enum, and service defined in the .proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468090,"byte_end":7468166,"line_start":354,"line_end":354,"column_start":5,"column_end":81}},{"value":"/ file.  Thus, these types will *not* be nested inside the outer class","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468171,"byte_end":7468243,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ named by java_outer_classname.  However, the outer class will still be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468248,"byte_end":7468322,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ generated to contain the file's getDescriptor() method as well as any","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468327,"byte_end":7468400,"line_start":357,"line_end":357,"column_start":5,"column_end":78}},{"value":"/ top-level extensions defined in the file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468405,"byte_end":7468450,"line_start":358,"line_end":358,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468455,"byte_end":7468506,"line_start":359,"line_end":359,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468665,"byte_end":7468694,"line_start":364,"line_end":364,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"::FileOptions::java_generate_equals_and_hash","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" This option does nothing.\n","sig":null,"attributes":[{"value":"/ This option does nothing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468570,"byte_end":7468599,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"deprecated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468604,"byte_end":7468617,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"prost(bool, optional, tag = \"20\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468622,"byte_end":7468656,"line_start":363,"line_end":363,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469175,"byte_end":7469197,"line_start":372,"line_end":372,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"::FileOptions::java_string_check_utf8","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n","sig":null,"attributes":[{"value":"/ If set true, then the Java2 code generator will generate code that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468730,"byte_end":7468800,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ throws an exception whenever an attempt is made to assign a non-UTF-8","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468805,"byte_end":7468878,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ byte sequence to a string field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468883,"byte_end":7468919,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"/ Message reflection will do the same.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468924,"byte_end":7468964,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ However, an extension field still accepts non-UTF-8 byte sequences.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468969,"byte_end":7469040,"line_start":369,"line_end":369,"column_start":5,"column_end":76}},{"value":"/ This option has no effect on when used with the lite runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469045,"byte_end":7469110,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"prost(bool, optional, tag = \"27\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469115,"byte_end":7469166,"line_start":371,"line_end":371,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469328,"byte_end":7469340,"line_start":374,"line_end":374,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"::FileOptions::optimize_for","value":"core::option::Option<i32>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"file_options::OptimizeMode\", optional, tag = \"9\",\ndefault = \"Speed\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469233,"byte_end":7469319,"line_start":373,"line_end":373,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469794,"byte_end":7469804,"line_start":381,"line_end":381,"column_start":9,"column_end":19},"name":"go_package","qualname":"::FileOptions::go_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n","sig":null,"attributes":[{"value":"/ Sets the Go package where structs generated from this .proto will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469375,"byte_end":7469447,"line_start":375,"line_end":375,"column_start":5,"column_end":77}},{"value":"/ placed. If omitted, the Go package will be derived from the following:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469452,"byte_end":7469526,"line_start":376,"line_end":376,"column_start":5,"column_end":79}},{"value":"/   - The basename of the package import path, if provided.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469531,"byte_end":7469592,"line_start":377,"line_end":377,"column_start":5,"column_end":66}},{"value":"/   - Otherwise, the package statement in the .proto file, if present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469597,"byte_end":7469669,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/   - Otherwise, the basename of the .proto file, without extension.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469674,"byte_end":7469744,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"prost(string, optional, tag = \"11\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469749,"byte_end":7469785,"line_start":380,"line_end":380,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470577,"byte_end":7470596,"line_start":393,"line_end":393,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"::FileOptions::cc_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.","sig":null,"attributes":[{"value":"/ Should generic services be generated in each language?  \"Generic\" services","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469866,"byte_end":7469944,"line_start":382,"line_end":382,"column_start":5,"column_end":83}},{"value":"/ are not specific to any particular RPC system.  They are generated by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469949,"byte_end":7470026,"line_start":383,"line_end":383,"column_start":5,"column_end":82}},{"value":"/ main code generators in each language (without additional plugins).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470031,"byte_end":7470102,"line_start":384,"line_end":384,"column_start":5,"column_end":76}},{"value":"/ Generic services were the only kind of service generation supported by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470107,"byte_end":7470181,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ early versions of google.protobuf.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470186,"byte_end":7470224,"line_start":386,"line_end":386,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470229,"byte_end":7470232,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Generic services are now considered deprecated in favor of using plugins","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470237,"byte_end":7470313,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ that generate code specific to your particular RPC system.  Therefore,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470318,"byte_end":7470392,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ these default to false.  Old code which depends on generic services should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470397,"byte_end":7470475,"line_start":390,"line_end":390,"column_start":5,"column_end":83}},{"value":"/ explicitly set them to true.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470480,"byte_end":7470512,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"prost(bool, optional, tag = \"16\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470517,"byte_end":7470568,"line_start":392,"line_end":392,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470692,"byte_end":7470713,"line_start":395,"line_end":395,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"::FileOptions::java_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"17\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470632,"byte_end":7470683,"line_start":394,"line_end":394,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470809,"byte_end":7470828,"line_start":397,"line_end":397,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"::FileOptions::py_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"18\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470749,"byte_end":7470800,"line_start":396,"line_end":396,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470924,"byte_end":7470944,"line_start":399,"line_end":399,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"::FileOptions::php_generic_services","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, optional, tag = \"42\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470864,"byte_end":7470915,"line_start":398,"line_end":398,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471296,"byte_end":7471306,"line_start":405,"line_end":405,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FileOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n","sig":null,"attributes":[{"value":"/ Is this file deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470980,"byte_end":7471008,"line_start":400,"line_end":400,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471013,"byte_end":7471087,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ for everything in the file, or it will be completely ignored; in the very","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471092,"byte_end":7471169,"line_start":402,"line_end":402,"column_start":5,"column_end":82}},{"value":"/ least, this is a formalization for deprecating files.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471174,"byte_end":7471231,"line_start":403,"line_end":403,"column_start":5,"column_end":62}},{"value":"prost(bool, optional, tag = \"23\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471236,"byte_end":7471287,"line_start":404,"line_end":404,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471528,"byte_end":7471544,"line_start":409,"line_end":409,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"::FileOptions::cc_enable_arenas","value":"core::option::Option<bool>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n","sig":null,"attributes":[{"value":"/ Enables the use of arenas for the proto messages in this file. This applies","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471342,"byte_end":7471421,"line_start":406,"line_end":406,"column_start":5,"column_end":84}},{"value":"/ only to generated classes for C++.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471426,"byte_end":7471464,"line_start":407,"line_end":407,"column_start":5,"column_end":43}},{"value":"prost(bool, optional, tag = \"31\", default = \"true\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471469,"byte_end":7471519,"line_start":408,"line_end":408,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471770,"byte_end":7471787,"line_start":413,"line_end":413,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"::FileOptions::objc_class_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n","sig":null,"attributes":[{"value":"/ Sets the objective c class prefix which is prepended to all objective c","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471580,"byte_end":7471655,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ generated classes from this .proto. There is no default.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471660,"byte_end":7471720,"line_start":411,"line_end":411,"column_start":5,"column_end":65}},{"value":"prost(string, optional, tag = \"36\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471725,"byte_end":7471761,"line_start":412,"line_end":412,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471960,"byte_end":7471976,"line_start":416,"line_end":416,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"::FileOptions::csharp_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Namespace for generated classes; defaults to the package.\n","sig":null,"attributes":[{"value":"/ Namespace for generated classes; defaults to the package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471849,"byte_end":7471910,"line_start":414,"line_end":414,"column_start":5,"column_end":66}},{"value":"prost(string, optional, tag = \"37\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471915,"byte_end":7471951,"line_start":415,"line_end":415,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472369,"byte_end":7472381,"line_start":422,"line_end":422,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"::FileOptions::swift_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n","sig":null,"attributes":[{"value":"/ By default Swift generators will take the proto package and CamelCase it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472038,"byte_end":7472114,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/ replacing '.' with underscore and use that to prefix the types/symbols","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472119,"byte_end":7472193,"line_start":418,"line_end":418,"column_start":5,"column_end":79}},{"value":"/ defined. When this options is provided, they will use this value instead","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472198,"byte_end":7472274,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ to prefix the types/symbols defined.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472279,"byte_end":7472319,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"39\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472324,"byte_end":7472360,"line_start":421,"line_end":421,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472614,"byte_end":7472630,"line_start":426,"line_end":426,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"::FileOptions::php_class_prefix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n","sig":null,"attributes":[{"value":"/ Sets the php class prefix which is prepended to all php generated classes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472443,"byte_end":7472520,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ from this .proto. Default is empty.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472525,"byte_end":7472564,"line_start":424,"line_end":424,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"40\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472569,"byte_end":7472605,"line_start":425,"line_end":425,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472933,"byte_end":7472946,"line_start":431,"line_end":431,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"::FileOptions::php_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated classes. Default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472692,"byte_end":7472769,"line_start":427,"line_end":427,"column_start":5,"column_end":82}},{"value":"/ is empty. When this option is empty, the package name will be used for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472774,"byte_end":7472848,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ determining the namespace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472853,"byte_end":7472883,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"prost(string, optional, tag = \"41\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472888,"byte_end":7472924,"line_start":430,"line_end":430,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473261,"byte_end":7473283,"line_start":436,"line_end":436,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"::FileOptions::php_metadata_namespace","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n","sig":null,"attributes":[{"value":"/ Use this option to change the namespace of php generated metadata classes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473008,"byte_end":7473086,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/ Default is empty. When this option is empty, the proto file name will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473091,"byte_end":7473167,"line_start":433,"line_end":433,"column_start":5,"column_end":81}},{"value":"/ used for determining the namespace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473172,"byte_end":7473211,"line_start":434,"line_end":434,"column_start":5,"column_end":44}},{"value":"prost(string, optional, tag = \"44\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473216,"byte_end":7473252,"line_start":435,"line_end":435,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473590,"byte_end":7473602,"line_start":441,"line_end":441,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"::FileOptions::ruby_package","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n","sig":null,"attributes":[{"value":"/ Use this option to change the package of ruby generated classes. Default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473345,"byte_end":7473421,"line_start":437,"line_end":437,"column_start":5,"column_end":81}},{"value":"/ is empty. When this option is not set, the package name will be used for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473426,"byte_end":7473502,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ determining the ruby package.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473507,"byte_end":7473540,"line_start":439,"line_end":439,"column_start":5,"column_end":38}},{"value":"prost(string, optional, tag = \"45\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473545,"byte_end":7473581,"line_start":440,"line_end":440,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473835,"byte_end":7473855,"line_start":445,"line_end":445,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FileOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":930},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473664,"byte_end":7473720,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ See the documentation for the \"Options\" section above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473725,"byte_end":7473783,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473788,"byte_end":7473826,"line_start":444,"line_end":444,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467470,"byte_end":7467482,"line_start":345,"line_end":345,"column_start":9,"column_end":21},"name":"java_package","qualname":"<FileOptions>::java_package","value":"pub fn java_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_package`, or the default value if `java_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7467927,"byte_end":7467947,"line_start":352,"line_end":352,"column_start":9,"column_end":29},"name":"java_outer_classname","qualname":"<FileOptions>::java_outer_classname","value":"pub fn java_outer_classname(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_outer_classname`, or the default value if `java_outer_classname` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469328,"byte_end":7469340,"line_start":374,"line_end":374,"column_start":9,"column_end":21},"name":"optimize_for","qualname":"<FileOptions>::optimize_for","value":"pub fn optimize_for(&Self) -> file_options::OptimizeMode","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `optimize_for`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468515,"byte_end":7468534,"line_start":360,"line_end":360,"column_start":9,"column_end":28},"name":"java_multiple_files","qualname":"<FileOptions>::java_multiple_files","value":"pub fn java_multiple_files(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_multiple_files`, or the default value if `java_multiple_files` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469794,"byte_end":7469804,"line_start":381,"line_end":381,"column_start":9,"column_end":19},"name":"go_package","qualname":"<FileOptions>::go_package","value":"pub fn go_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `go_package`, or the default value if `go_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470577,"byte_end":7470596,"line_start":393,"line_end":393,"column_start":9,"column_end":28},"name":"cc_generic_services","qualname":"<FileOptions>::cc_generic_services","value":"pub fn cc_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_generic_services`, or the default value if `cc_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470692,"byte_end":7470713,"line_start":395,"line_end":395,"column_start":9,"column_end":30},"name":"java_generic_services","qualname":"<FileOptions>::java_generic_services","value":"pub fn java_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generic_services`, or the default value if `java_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470809,"byte_end":7470828,"line_start":397,"line_end":397,"column_start":9,"column_end":28},"name":"py_generic_services","qualname":"<FileOptions>::py_generic_services","value":"pub fn py_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `py_generic_services`, or the default value if `py_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7468665,"byte_end":7468694,"line_start":364,"line_end":364,"column_start":9,"column_end":38},"name":"java_generate_equals_and_hash","qualname":"<FileOptions>::java_generate_equals_and_hash","value":"pub fn java_generate_equals_and_hash(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_generate_equals_and_hash`, or the default value if `java_generate_equals_and_hash` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471296,"byte_end":7471306,"line_start":405,"line_end":405,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FileOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7469175,"byte_end":7469197,"line_start":372,"line_end":372,"column_start":9,"column_end":31},"name":"java_string_check_utf8","qualname":"<FileOptions>::java_string_check_utf8","value":"pub fn java_string_check_utf8(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `java_string_check_utf8`, or the default value if `java_string_check_utf8` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471528,"byte_end":7471544,"line_start":409,"line_end":409,"column_start":9,"column_end":25},"name":"cc_enable_arenas","qualname":"<FileOptions>::cc_enable_arenas","value":"pub fn cc_enable_arenas(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `cc_enable_arenas`, or the default value if `cc_enable_arenas` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471770,"byte_end":7471787,"line_start":413,"line_end":413,"column_start":9,"column_end":26},"name":"objc_class_prefix","qualname":"<FileOptions>::objc_class_prefix","value":"pub fn objc_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `objc_class_prefix`, or the default value if `objc_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7471960,"byte_end":7471976,"line_start":416,"line_end":416,"column_start":9,"column_end":25},"name":"csharp_namespace","qualname":"<FileOptions>::csharp_namespace","value":"pub fn csharp_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `csharp_namespace`, or the default value if `csharp_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472369,"byte_end":7472381,"line_start":422,"line_end":422,"column_start":9,"column_end":21},"name":"swift_prefix","qualname":"<FileOptions>::swift_prefix","value":"pub fn swift_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `swift_prefix`, or the default value if `swift_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472614,"byte_end":7472630,"line_start":426,"line_end":426,"column_start":9,"column_end":25},"name":"php_class_prefix","qualname":"<FileOptions>::php_class_prefix","value":"pub fn php_class_prefix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_class_prefix`, or the default value if `php_class_prefix` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7472933,"byte_end":7472946,"line_start":431,"line_end":431,"column_start":9,"column_end":22},"name":"php_namespace","qualname":"<FileOptions>::php_namespace","value":"pub fn php_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_namespace`, or the default value if `php_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7470924,"byte_end":7470944,"line_start":399,"line_end":399,"column_start":9,"column_end":29},"name":"php_generic_services","qualname":"<FileOptions>::php_generic_services","value":"pub fn php_generic_services(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_generic_services`, or the default value if `php_generic_services` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473261,"byte_end":7473283,"line_start":436,"line_end":436,"column_start":9,"column_end":31},"name":"php_metadata_namespace","qualname":"<FileOptions>::php_metadata_namespace","value":"pub fn php_metadata_namespace(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `php_metadata_namespace`, or the default value if `php_metadata_namespace` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473590,"byte_end":7473602,"line_start":441,"line_end":441,"column_start":9,"column_end":21},"name":"ruby_package","qualname":"<FileOptions>::ruby_package","value":"pub fn ruby_package(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `ruby_package`, or the default value if `ruby_package` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473966,"byte_end":7473978,"line_start":448,"line_end":448,"column_start":9,"column_end":21},"name":"file_options","qualname":"::file_options","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1251}],"decl_id":null,"docs":" Nested message and enum types in `FileOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FileOptions`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473906,"byte_end":7473957,"line_start":447,"line_end":447,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474258,"byte_end":7474263,"line_start":454,"line_end":454,"column_start":9,"column_end":14},"name":"Speed","qualname":"::file_options::OptimizeMode::Speed","value":"OptimizeMode::Speed","parent":{"krate":0,"index":1218},"children":[],"decl_id":null,"docs":" Generate complete code for parsing, serialization,\n","sig":null,"attributes":[{"value":"/ Generate complete code for parsing, serialization,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474195,"byte_end":7474249,"line_start":453,"line_end":453,"column_start":9,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474364,"byte_end":7474372,"line_start":458,"line_end":458,"column_start":9,"column_end":17},"name":"CodeSize","qualname":"::file_options::OptimizeMode::CodeSize","value":"OptimizeMode::CodeSize","parent":{"krate":0,"index":1218},"children":[],"decl_id":null,"docs":" etc.","sig":null,"attributes":[{"value":"/ etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474277,"byte_end":7474285,"line_start":455,"line_end":455,"column_start":9,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474294,"byte_end":7474297,"line_start":456,"line_end":456,"column_start":9,"column_end":12}},{"value":"/ Use ReflectionOps to implement these methods.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474306,"byte_end":7474355,"line_start":457,"line_end":457,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474452,"byte_end":7474463,"line_start":460,"line_end":460,"column_start":9,"column_end":20},"name":"LiteRuntime","qualname":"::file_options::OptimizeMode::LiteRuntime","value":"OptimizeMode::LiteRuntime","parent":{"krate":0,"index":1218},"children":[],"decl_id":null,"docs":" Generate code using MessageLite and the lite runtime.\n","sig":null,"attributes":[{"value":"/ Generate code using MessageLite and the lite runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474386,"byte_end":7474443,"line_start":459,"line_end":459,"column_start":9,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474172,"byte_end":7474184,"line_start":452,"line_end":452,"column_start":14,"column_end":26},"name":"OptimizeMode","qualname":"::file_options::OptimizeMode","value":"pub enum OptimizeMode { Speed = , CodeSize = , LiteRuntime = , }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1225}],"decl_id":null,"docs":" Generated classes can be optimized for speed or code size.\n","sig":null,"attributes":[{"value":"/ Generated classes can be optimized for speed or code size.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7473985,"byte_end":7474047,"line_start":449,"line_end":449,"column_start":5,"column_end":67}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474146,"byte_end":7474158,"line_start":451,"line_end":451,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474534,"byte_end":7474548,"line_start":464,"line_end":464,"column_start":12,"column_end":26},"name":"MessageOptions","qualname":"::MessageOptions","value":"MessageOptions { message_set_wire_format, no_standard_descriptor_accessor, deprecated, map_entry, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475453,"byte_end":7475476,"line_start":484,"line_end":484,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"::MessageOptions::message_set_wire_format","value":"core::option::Option<bool>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.","sig":null,"attributes":[{"value":"/ Set true to use the old proto1 MessageSet wire format for extensions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474555,"byte_end":7474628,"line_start":465,"line_end":465,"column_start":5,"column_end":78}},{"value":"/ This is provided for backwards-compatibility with the MessageSet wire","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474633,"byte_end":7474706,"line_start":466,"line_end":466,"column_start":5,"column_end":78}},{"value":"/ format.  You should not use this for any other reason:  It's less","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474711,"byte_end":7474780,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ efficient, has fewer features, and is more complicated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474785,"byte_end":7474844,"line_start":468,"line_end":468,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474849,"byte_end":7474852,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ The message must be defined exactly as follows:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474857,"byte_end":7474908,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/   message Foo {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474913,"byte_end":7474932,"line_start":471,"line_end":471,"column_start":5,"column_end":24}},{"value":"/     option message_set_wire_format = true;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474937,"byte_end":7474983,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/     extensions 4 to max;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7474988,"byte_end":7475016,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/   }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475021,"byte_end":7475028,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ Note that the message cannot have any defined fields; MessageSets only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475033,"byte_end":7475107,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ have extensions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475112,"byte_end":7475132,"line_start":476,"line_end":476,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475137,"byte_end":7475140,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ All extensions of your type must be singular messages; e.g. they cannot","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475145,"byte_end":7475220,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ be int32s, enums, or repeated messages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475225,"byte_end":7475268,"line_start":479,"line_end":479,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475273,"byte_end":7475276,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Because this is an option, the above two restrictions are not enforced by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475281,"byte_end":7475358,"line_start":481,"line_end":481,"column_start":5,"column_end":82}},{"value":"/ the protocol compiler.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475363,"byte_end":7475389,"line_start":482,"line_end":482,"column_start":5,"column_end":31}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475394,"byte_end":7475444,"line_start":483,"line_end":483,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475812,"byte_end":7475843,"line_start":489,"line_end":489,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"::MessageOptions::no_standard_descriptor_accessor","value":"core::option::Option<bool>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n","sig":null,"attributes":[{"value":"/ Disables the generation of the standard \"descriptor()\" accessor, which can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475512,"byte_end":7475590,"line_start":485,"line_end":485,"column_start":5,"column_end":83}},{"value":"/ conflict with a field of the same name.  This is meant to make migration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475595,"byte_end":7475671,"line_start":486,"line_end":486,"column_start":5,"column_end":81}},{"value":"/ from proto1 easier; new code should avoid fields named \"descriptor\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475676,"byte_end":7475748,"line_start":487,"line_end":487,"column_start":5,"column_end":77}},{"value":"prost(bool, optional, tag = \"2\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475753,"byte_end":7475803,"line_start":488,"line_end":488,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476189,"byte_end":7476199,"line_start":495,"line_end":495,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MessageOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n","sig":null,"attributes":[{"value":"/ Is this message deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475879,"byte_end":7475910,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475915,"byte_end":7475989,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ for the message, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475994,"byte_end":7476067,"line_start":492,"line_end":492,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating messages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476072,"byte_end":7476125,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476130,"byte_end":7476180,"line_start":494,"line_end":494,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477209,"byte_end":7477218,"line_start":518,"line_end":518,"column_start":9,"column_end":18},"name":"map_entry","qualname":"::MessageOptions::map_entry","value":"core::option::Option<bool>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Whether the message is an automatically generated map entry type for the\n maps field.","sig":null,"attributes":[{"value":"/ Whether the message is an automatically generated map entry type for the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476235,"byte_end":7476311,"line_start":496,"line_end":496,"column_start":5,"column_end":81}},{"value":"/ maps field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476316,"byte_end":7476331,"line_start":497,"line_end":497,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476336,"byte_end":7476339,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ For maps fields:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476344,"byte_end":7476364,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/     map<KeyType, ValueType> map_field = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476369,"byte_end":7476415,"line_start":500,"line_end":500,"column_start":5,"column_end":51}},{"value":"/ The parsed descriptor looks like:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476420,"byte_end":7476457,"line_start":501,"line_end":501,"column_start":5,"column_end":42}},{"value":"/     message MapFieldEntry {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476462,"byte_end":7476493,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/         option map_entry = true;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476498,"byte_end":7476534,"line_start":503,"line_end":503,"column_start":5,"column_end":41}},{"value":"/         optional KeyType key = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476539,"byte_end":7476576,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/         optional ValueType value = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476581,"byte_end":7476622,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476627,"byte_end":7476636,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/     repeated MapFieldEntry map_field = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476641,"byte_end":7476686,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476691,"byte_end":7476694,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Implementations may choose not to generate the map_entry=true message, but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476699,"byte_end":7476777,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/ use a native map in the target language to hold the keys and values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476782,"byte_end":7476854,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ The reflection APIs in such implementations still need to work as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476859,"byte_end":7476928,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ if the field is a repeated message field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476933,"byte_end":7476978,"line_start":512,"line_end":512,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476983,"byte_end":7476986,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ NOTE: Do not set the option in .proto files. Always use the maps syntax","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476991,"byte_end":7477066,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ instead. The option should only be implicitly set by the proto compiler","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477071,"byte_end":7477146,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ parser.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477151,"byte_end":7477162,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"prost(bool, optional, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477167,"byte_end":7477200,"line_start":517,"line_end":517,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477373,"byte_end":7477393,"line_start":521,"line_end":521,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MessageOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477254,"byte_end":7477321,"line_start":519,"line_end":519,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477326,"byte_end":7477364,"line_start":520,"line_end":520,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475453,"byte_end":7475476,"line_start":484,"line_end":484,"column_start":9,"column_end":32},"name":"message_set_wire_format","qualname":"<MessageOptions>::message_set_wire_format","value":"pub fn message_set_wire_format(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `message_set_wire_format`, or the default value if `message_set_wire_format` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7475812,"byte_end":7475843,"line_start":489,"line_end":489,"column_start":9,"column_end":40},"name":"no_standard_descriptor_accessor","qualname":"<MessageOptions>::no_standard_descriptor_accessor","value":"pub fn no_standard_descriptor_accessor(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `no_standard_descriptor_accessor`, or the default value if `no_standard_descriptor_accessor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7476189,"byte_end":7476199,"line_start":495,"line_end":495,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MessageOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477209,"byte_end":7477218,"line_start":518,"line_end":518,"column_start":9,"column_end":18},"name":"map_entry","qualname":"<MessageOptions>::map_entry","value":"pub fn map_entry(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `map_entry`, or the default value if `map_entry` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477501,"byte_end":7477513,"line_start":524,"line_end":524,"column_start":12,"column_end":24},"name":"FieldOptions","qualname":"::FieldOptions","value":"FieldOptions { ctype, packed, jstype, lazy, deprecated, weak, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477914,"byte_end":7477919,"line_start":530,"line_end":530,"column_start":9,"column_end":14},"name":"ctype","qualname":"::FieldOptions::ctype","value":"core::option::Option<i32>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n","sig":null,"attributes":[{"value":"/ The ctype option instructs the C++ code generator to use a different","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477520,"byte_end":7477592,"line_start":525,"line_end":525,"column_start":5,"column_end":77}},{"value":"/ representation of the field than it normally would.  See the specific","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477597,"byte_end":7477670,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ options below.  This option is not yet implemented in the open source","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477675,"byte_end":7477748,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ release -- sorry, we'll try to include it in a future version!","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477753,"byte_end":7477819,"line_start":528,"line_end":528,"column_start":5,"column_end":71}},{"value":"prost(enumeration = \"field_options::CType\", optional, tag = \"1\", default =\n\"String\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477824,"byte_end":7477905,"line_start":529,"line_end":529,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478362,"byte_end":7478368,"line_start":537,"line_end":537,"column_start":9,"column_end":15},"name":"packed","qualname":"::FieldOptions::packed","value":"core::option::Option<bool>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n","sig":null,"attributes":[{"value":"/ The packed option can be enabled for repeated primitive fields to enable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477954,"byte_end":7478030,"line_start":531,"line_end":531,"column_start":5,"column_end":81}},{"value":"/ a more efficient representation on the wire. Rather than repeatedly","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478035,"byte_end":7478106,"line_start":532,"line_end":532,"column_start":5,"column_end":76}},{"value":"/ writing the tag and type for each element, the entire array is encoded as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478111,"byte_end":7478188,"line_start":533,"line_end":533,"column_start":5,"column_end":82}},{"value":"/ a single length-delimited blob. In proto3, only explicit setting it to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478193,"byte_end":7478267,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ false will avoid using packed encoding.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478272,"byte_end":7478315,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478320,"byte_end":7478353,"line_start":536,"line_end":536,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479225,"byte_end":7479231,"line_start":550,"line_end":550,"column_start":9,"column_end":15},"name":"jstype","qualname":"::FieldOptions::jstype","value":"core::option::Option<i32>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.","sig":null,"attributes":[{"value":"/ The jstype option determines the JavaScript type used for values of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478404,"byte_end":7478479,"line_start":538,"line_end":538,"column_start":5,"column_end":80}},{"value":"/ field.  The option is permitted only for 64 bit integral and fixed types","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478484,"byte_end":7478560,"line_start":539,"line_end":539,"column_start":5,"column_end":81}},{"value":"/ (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478565,"byte_end":7478643,"line_start":540,"line_end":540,"column_start":5,"column_end":83}},{"value":"/ is represented as JavaScript string, which avoids loss of precision that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478648,"byte_end":7478724,"line_start":541,"line_end":541,"column_start":5,"column_end":81}},{"value":"/ can happen when a large value is converted to a floating point JavaScript.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478729,"byte_end":7478807,"line_start":542,"line_end":542,"column_start":5,"column_end":83}},{"value":"/ Specifying JS_NUMBER for the jstype causes the generated JavaScript code to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478812,"byte_end":7478891,"line_start":543,"line_end":543,"column_start":5,"column_end":84}},{"value":"/ use the JavaScript \"number\" type.  The behavior of the default option","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478896,"byte_end":7478969,"line_start":544,"line_end":544,"column_start":5,"column_end":78}},{"value":"/ JS_NORMAL is implementation dependent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478974,"byte_end":7479016,"line_start":545,"line_end":545,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479021,"byte_end":7479024,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This option is an enum to permit additional types to be added, e.g.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479029,"byte_end":7479100,"line_start":547,"line_end":547,"column_start":5,"column_end":76}},{"value":"/ goog.math.Integer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479105,"byte_end":7479127,"line_start":548,"line_end":548,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"field_options::JsType\", optional, tag = \"6\", default =\n\"JsNormal\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479132,"byte_end":7479216,"line_start":549,"line_end":549,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481153,"byte_end":7481157,"line_start":580,"line_end":580,"column_start":9,"column_end":13},"name":"lazy","qualname":"::FieldOptions::lazy","value":"core::option::Option<bool>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.","sig":null,"attributes":[{"value":"/ Should this field be parsed lazily?  Lazy applies only to message-type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479266,"byte_end":7479340,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/ fields.  It means that when the outer message is initially parsed, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479345,"byte_end":7479419,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/ inner message's contents will not be parsed but instead stored in encoded","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479424,"byte_end":7479501,"line_start":553,"line_end":553,"column_start":5,"column_end":82}},{"value":"/ form.  The inner message will actually be parsed when it is first accessed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479506,"byte_end":7479585,"line_start":554,"line_end":554,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479590,"byte_end":7479593,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This is only a hint.  Implementations are free to choose whether to use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479598,"byte_end":7479673,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ eager or lazy parsing regardless of the value of this option.  However,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479678,"byte_end":7479753,"line_start":557,"line_end":557,"column_start":5,"column_end":80}},{"value":"/ setting this option true suggests that the protocol author believes that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479758,"byte_end":7479834,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"/ using lazy parsing on this field is worth the additional bookkeeping","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479839,"byte_end":7479911,"line_start":559,"line_end":559,"column_start":5,"column_end":77}},{"value":"/ overhead typically needed to implement it.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479916,"byte_end":7479962,"line_start":560,"line_end":560,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479967,"byte_end":7479970,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This option does not affect the public interface of any generated code;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479975,"byte_end":7480050,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ all method signatures remain the same.  Furthermore, thread-safety of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480055,"byte_end":7480132,"line_start":563,"line_end":563,"column_start":5,"column_end":82}},{"value":"/ interface is not affected by this option; const methods remain safe to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480137,"byte_end":7480211,"line_start":564,"line_end":564,"column_start":5,"column_end":79}},{"value":"/ call from multiple threads concurrently, while non-const methods continue","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480216,"byte_end":7480293,"line_start":565,"line_end":565,"column_start":5,"column_end":82}},{"value":"/ to require exclusive access.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480298,"byte_end":7480330,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480335,"byte_end":7480338,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480343,"byte_end":7480346,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Note that implementations may choose not to check required fields within","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480351,"byte_end":7480427,"line_start":569,"line_end":569,"column_start":5,"column_end":81}},{"value":"/ a lazy sub-message.  That is, calling IsInitialized() on the outer message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480432,"byte_end":7480510,"line_start":570,"line_end":570,"column_start":5,"column_end":83}},{"value":"/ may return true even if the inner message has missing required fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480515,"byte_end":7480589,"line_start":571,"line_end":571,"column_start":5,"column_end":79}},{"value":"/ This is necessary because otherwise the inner message would have to be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480594,"byte_end":7480668,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ parsed in order to perform the check, defeating the purpose of lazy","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480673,"byte_end":7480744,"line_start":573,"line_end":573,"column_start":5,"column_end":76}},{"value":"/ parsing.  An implementation which chooses not to check required fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480749,"byte_end":7480823,"line_start":574,"line_end":574,"column_start":5,"column_end":79}},{"value":"/ must be consistent about it.  That is, for any particular sub-message, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480828,"byte_end":7480906,"line_start":575,"line_end":575,"column_start":5,"column_end":83}},{"value":"/ implementation must either *always* check its required fields, or *never*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480911,"byte_end":7480988,"line_start":576,"line_end":576,"column_start":5,"column_end":82}},{"value":"/ check its required fields, regardless of whether or not the message has","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7480993,"byte_end":7481068,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ been parsed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481073,"byte_end":7481089,"line_start":578,"line_end":578,"column_start":5,"column_end":21}},{"value":"prost(bool, optional, tag = \"5\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481094,"byte_end":7481144,"line_start":579,"line_end":579,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481497,"byte_end":7481507,"line_start":586,"line_end":586,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::FieldOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n","sig":null,"attributes":[{"value":"/ Is this field deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481193,"byte_end":7481222,"line_start":581,"line_end":581,"column_start":5,"column_end":34}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481227,"byte_end":7481301,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ for accessors, or it will be completely ignored; in the very least, this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481306,"byte_end":7481382,"line_start":583,"line_end":583,"column_start":5,"column_end":81}},{"value":"/ is a formalization for deprecating fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481387,"byte_end":7481433,"line_start":584,"line_end":584,"column_start":5,"column_end":51}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481438,"byte_end":7481488,"line_start":585,"line_end":585,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481659,"byte_end":7481663,"line_start":589,"line_end":589,"column_start":9,"column_end":13},"name":"weak","qualname":"::FieldOptions::weak","value":"core::option::Option<bool>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" For Google-internal migration only. Do not use.\n","sig":null,"attributes":[{"value":"/ For Google-internal migration only. Do not use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481543,"byte_end":7481594,"line_start":587,"line_end":587,"column_start":5,"column_end":56}},{"value":"prost(bool, optional, tag = \"10\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481599,"byte_end":7481650,"line_start":588,"line_end":588,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481818,"byte_end":7481838,"line_start":592,"line_end":592,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::FieldOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1327},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481699,"byte_end":7481766,"line_start":590,"line_end":590,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481771,"byte_end":7481809,"line_start":591,"line_end":591,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7477914,"byte_end":7477919,"line_start":530,"line_end":530,"column_start":9,"column_end":14},"name":"ctype","qualname":"<FieldOptions>::ctype","value":"pub fn ctype(&Self) -> field_options::CType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `ctype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7478362,"byte_end":7478368,"line_start":537,"line_end":537,"column_start":9,"column_end":15},"name":"packed","qualname":"<FieldOptions>::packed","value":"pub fn packed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `packed`, or the default value if `packed` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481497,"byte_end":7481507,"line_start":586,"line_end":586,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<FieldOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481153,"byte_end":7481157,"line_start":580,"line_end":580,"column_start":9,"column_end":13},"name":"lazy","qualname":"<FieldOptions>::lazy","value":"pub fn lazy(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `lazy`, or the default value if `lazy` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7479225,"byte_end":7479231,"line_start":550,"line_end":550,"column_start":9,"column_end":15},"name":"jstype","qualname":"<FieldOptions>::jstype","value":"pub fn jstype(&Self) -> field_options::JsType","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `jstype`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481659,"byte_end":7481663,"line_start":589,"line_end":589,"column_start":9,"column_end":13},"name":"weak","qualname":"<FieldOptions>::weak","value":"pub fn weak(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `weak`, or the default value if `weak` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":31},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481950,"byte_end":7481963,"line_start":595,"line_end":595,"column_start":9,"column_end":22},"name":"field_options","qualname":"::field_options","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1463},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1507}],"decl_id":null,"docs":" Nested message and enum types in `FieldOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `FieldOptions`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7481889,"byte_end":7481941,"line_start":594,"line_end":594,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482132,"byte_end":7482138,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"name":"String","qualname":"::field_options::CType::String","value":"CType::String","parent":{"krate":0,"index":1439},"children":[],"decl_id":null,"docs":" Default mode.\n","sig":null,"attributes":[{"value":"/ Default mode.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482106,"byte_end":7482123,"line_start":599,"line_end":599,"column_start":9,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482152,"byte_end":7482156,"line_start":601,"line_end":601,"column_start":9,"column_end":13},"name":"Cord","qualname":"::field_options::CType::Cord","value":"CType::Cord","parent":{"krate":0,"index":1439},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482170,"byte_end":7482181,"line_start":602,"line_end":602,"column_start":9,"column_end":20},"name":"StringPiece","qualname":"::field_options::CType::StringPiece","value":"CType::StringPiece","parent":{"krate":0,"index":1439},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482090,"byte_end":7482095,"line_start":598,"line_end":598,"column_start":14,"column_end":19},"name":"CType","qualname":"::field_options::CType","value":"pub enum CType { String = , Cord = , StringPiece = , }","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1446}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482064,"byte_end":7482076,"line_start":597,"line_end":597,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482368,"byte_end":7482376,"line_start":608,"line_end":608,"column_start":9,"column_end":17},"name":"JsNormal","qualname":"::field_options::JsType::JsNormal","value":"JsType::JsNormal","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Use the default type.\n","sig":null,"attributes":[{"value":"/ Use the default type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482334,"byte_end":7482359,"line_start":607,"line_end":607,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482426,"byte_end":7482434,"line_start":610,"line_end":610,"column_start":9,"column_end":17},"name":"JsString","qualname":"::field_options::JsType::JsString","value":"JsType::JsString","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Use JavaScript strings.\n","sig":null,"attributes":[{"value":"/ Use JavaScript strings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482390,"byte_end":7482417,"line_start":609,"line_end":609,"column_start":9,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482484,"byte_end":7482492,"line_start":612,"line_end":612,"column_start":9,"column_end":17},"name":"JsNumber","qualname":"::field_options::JsType::JsNumber","value":"JsType::JsNumber","parent":{"krate":0,"index":1474},"children":[],"decl_id":null,"docs":" Use JavaScript numbers.\n","sig":null,"attributes":[{"value":"/ Use JavaScript numbers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482448,"byte_end":7482475,"line_start":611,"line_end":611,"column_start":9,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482317,"byte_end":7482323,"line_start":606,"line_end":606,"column_start":14,"column_end":20},"name":"JsType","qualname":"::field_options::JsType","value":"pub enum JsType { JsNormal = , JsString = , JsNumber = , }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1478},{"krate":0,"index":1481}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482291,"byte_end":7482303,"line_start":605,"line_end":605,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482563,"byte_end":7482575,"line_start":616,"line_end":616,"column_start":12,"column_end":24},"name":"OneofOptions","qualname":"::OneofOptions","value":"OneofOptions { uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1529}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482701,"byte_end":7482721,"line_start":619,"line_end":619,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::OneofOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482582,"byte_end":7482649,"line_start":617,"line_end":617,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482654,"byte_end":7482692,"line_start":618,"line_end":618,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482829,"byte_end":7482840,"line_start":622,"line_end":622,"column_start":12,"column_end":23},"name":"EnumOptions","qualname":"::EnumOptions","value":"EnumOptions { allow_alias, deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482985,"byte_end":7482996,"line_start":626,"line_end":626,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"::EnumOptions::allow_alias","value":"core::option::Option<bool>","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Set this option to true to allow mapping different tag names to the same\n value.\n","sig":null,"attributes":[{"value":"/ Set this option to true to allow mapping different tag names to the same","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482847,"byte_end":7482923,"line_start":623,"line_end":623,"column_start":5,"column_end":81}},{"value":"/ value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482928,"byte_end":7482938,"line_start":624,"line_end":624,"column_start":5,"column_end":15}},{"value":"prost(bool, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482943,"byte_end":7482976,"line_start":625,"line_end":625,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483333,"byte_end":7483343,"line_start":632,"line_end":632,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n","sig":null,"attributes":[{"value":"/ Is this enum deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483032,"byte_end":7483060,"line_start":627,"line_end":627,"column_start":5,"column_end":33}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483065,"byte_end":7483139,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ for the enum, or it will be completely ignored; in the very least, this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483144,"byte_end":7483219,"line_start":629,"line_end":629,"column_start":5,"column_end":80}},{"value":"/ is a formalization for deprecating enums.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483224,"byte_end":7483269,"line_start":630,"line_end":630,"column_start":5,"column_end":50}},{"value":"prost(bool, optional, tag = \"3\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483274,"byte_end":7483324,"line_start":631,"line_end":631,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483498,"byte_end":7483518,"line_start":635,"line_end":635,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1530},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483379,"byte_end":7483446,"line_start":633,"line_end":633,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483451,"byte_end":7483489,"line_start":634,"line_end":634,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7482985,"byte_end":7482996,"line_start":626,"line_end":626,"column_start":9,"column_end":20},"name":"allow_alias","qualname":"<EnumOptions>::allow_alias","value":"pub fn allow_alias(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `allow_alias`, or the default value if `allow_alias` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483333,"byte_end":7483343,"line_start":632,"line_end":632,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483626,"byte_end":7483642,"line_start":638,"line_end":638,"column_start":12,"column_end":28},"name":"EnumValueOptions","qualname":"::EnumValueOptions","value":"EnumValueOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483968,"byte_end":7483978,"line_start":644,"line_end":644,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::EnumValueOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n","sig":null,"attributes":[{"value":"/ Is this enum value deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483649,"byte_end":7483683,"line_start":639,"line_end":639,"column_start":5,"column_end":39}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483688,"byte_end":7483762,"line_start":640,"line_end":640,"column_start":5,"column_end":79}},{"value":"/ for the enum value, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483767,"byte_end":7483843,"line_start":641,"line_end":641,"column_start":5,"column_end":81}},{"value":"/ this is a formalization for deprecating enum values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483848,"byte_end":7483904,"line_start":642,"line_end":642,"column_start":5,"column_end":61}},{"value":"prost(bool, optional, tag = \"1\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483909,"byte_end":7483959,"line_start":643,"line_end":643,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484133,"byte_end":7484153,"line_start":647,"line_end":647,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::EnumValueOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1578},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484014,"byte_end":7484081,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484086,"byte_end":7484124,"line_start":646,"line_end":646,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7483968,"byte_end":7483978,"line_start":644,"line_end":644,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<EnumValueOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484261,"byte_end":7484275,"line_start":650,"line_end":650,"column_start":12,"column_end":26},"name":"ServiceOptions","qualname":"::ServiceOptions","value":"ServiceOptions { deprecated, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1646},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484850,"byte_end":7484860,"line_start":661,"line_end":661,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::ServiceOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","sig":null,"attributes":[{"value":"/ Is this service deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484539,"byte_end":7484570,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484575,"byte_end":7484649,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ for the service, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484654,"byte_end":7484727,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ this is a formalization for deprecating services.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484732,"byte_end":7484785,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484790,"byte_end":7484841,"line_start":660,"line_end":660,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485015,"byte_end":7485035,"line_start":664,"line_end":664,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::ServiceOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484896,"byte_end":7484963,"line_start":662,"line_end":662,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484968,"byte_end":7485006,"line_start":663,"line_end":663,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7484850,"byte_end":7484860,"line_start":661,"line_end":661,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<ServiceOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485143,"byte_end":7485156,"line_start":667,"line_end":667,"column_start":12,"column_end":25},"name":"MethodOptions","qualname":"::MethodOptions","value":"MethodOptions { deprecated, idempotency_level, uninterpreted_option }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485728,"byte_end":7485738,"line_start":678,"line_end":678,"column_start":9,"column_end":19},"name":"deprecated","qualname":"::MethodOptions::deprecated","value":"core::option::Option<bool>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","sig":null,"attributes":[{"value":"/ Is this method deprecated?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485420,"byte_end":7485450,"line_start":673,"line_end":673,"column_start":5,"column_end":35}},{"value":"/ Depending on the target platform, this can emit Deprecated annotations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485455,"byte_end":7485529,"line_start":674,"line_end":674,"column_start":5,"column_end":79}},{"value":"/ for the method, or it will be completely ignored; in the very least,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485534,"byte_end":7485606,"line_start":675,"line_end":675,"column_start":5,"column_end":77}},{"value":"/ this is a formalization for deprecating methods.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485611,"byte_end":7485663,"line_start":676,"line_end":676,"column_start":5,"column_end":57}},{"value":"prost(bool, optional, tag = \"33\", default = \"false\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485668,"byte_end":7485719,"line_start":677,"line_end":677,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485889,"byte_end":7485906,"line_start":680,"line_end":680,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"::MethodOptions::idempotency_level","value":"core::option::Option<i32>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(enumeration = \"method_options::IdempotencyLevel\", optional, tag =\n\"34\", default = \"IdempotencyUnknown\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485774,"byte_end":7485880,"line_start":679,"line_end":679,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486060,"byte_end":7486080,"line_start":683,"line_end":683,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::MethodOptions::uninterpreted_option","value":"prost::alloc::vec::Vec<UninterpretedOption>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":" The parser stores options it doesn't recognize here. See above.\n","sig":null,"attributes":[{"value":"/ The parser stores options it doesn't recognize here. See above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485941,"byte_end":7486008,"line_start":681,"line_end":681,"column_start":5,"column_end":72}},{"value":"prost(message, repeated, tag = \"999\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486013,"byte_end":7486051,"line_start":682,"line_end":682,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1696},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485728,"byte_end":7485738,"line_start":678,"line_end":678,"column_start":9,"column_end":19},"name":"deprecated","qualname":"<MethodOptions>::deprecated","value":"pub fn deprecated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `deprecated`, or the default value if `deprecated` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7485889,"byte_end":7485906,"line_start":680,"line_end":680,"column_start":9,"column_end":26},"name":"idempotency_level","qualname":"<MethodOptions>::idempotency_level","value":"pub fn idempotency_level(&Self) -> method_options::IdempotencyLevel","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `idempotency_level`, or the default if the field is unset or set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486193,"byte_end":7486207,"line_start":686,"line_end":686,"column_start":9,"column_end":23},"name":"method_options","qualname":"::method_options","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1735}],"decl_id":null,"docs":" Nested message and enum types in `MethodOptions`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `MethodOptions`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486131,"byte_end":7486184,"line_start":685,"line_end":685,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486605,"byte_end":7486623,"line_start":693,"line_end":693,"column_start":9,"column_end":27},"name":"IdempotencyUnknown","qualname":"::method_options::IdempotencyLevel::IdempotencyUnknown","value":"IdempotencyLevel::IdempotencyUnknown","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486668,"byte_end":7486681,"line_start":695,"line_end":695,"column_start":9,"column_end":22},"name":"NoSideEffects","qualname":"::method_options::IdempotencyLevel::NoSideEffects","value":"IdempotencyLevel::NoSideEffects","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":" implies idempotent\n","sig":null,"attributes":[{"value":"/ implies idempotent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486637,"byte_end":7486659,"line_start":694,"line_end":694,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486745,"byte_end":7486755,"line_start":697,"line_end":697,"column_start":9,"column_end":19},"name":"Idempotent","qualname":"::method_options::IdempotencyLevel::Idempotent","value":"IdempotencyLevel::Idempotent","parent":{"krate":0,"index":1702},"children":[],"decl_id":null,"docs":" idempotent, but may have side effects\n","sig":null,"attributes":[{"value":"/ idempotent, but may have side effects","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486695,"byte_end":7486736,"line_start":696,"line_end":696,"column_start":9,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486578,"byte_end":7486594,"line_start":692,"line_end":692,"column_start":14,"column_end":30},"name":"IdempotencyLevel","qualname":"::method_options::IdempotencyLevel","value":"pub enum IdempotencyLevel {\n    IdempotencyUnknown = ,\n    NoSideEffects = ,\n    Idempotent = ,\n}","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1709}],"decl_id":null,"docs":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n","sig":null,"attributes":[{"value":"/ Is this method side-effect-free (or safe in HTTP parlance), or idempotent,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486214,"byte_end":7486292,"line_start":687,"line_end":687,"column_start":5,"column_end":83}},{"value":"/ or neither? HTTP based RPC implementation may choose GET verb for safe","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486297,"byte_end":7486371,"line_start":688,"line_end":688,"column_start":5,"column_end":79}},{"value":"/ methods, and PUT verb for idempotent methods instead of the default POST.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486376,"byte_end":7486453,"line_start":689,"line_end":689,"column_start":5,"column_end":82}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486552,"byte_end":7486564,"line_start":691,"line_end":691,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487224,"byte_end":7487243,"line_start":707,"line_end":707,"column_start":12,"column_end":31},"name":"UninterpretedOption","qualname":"::UninterpretedOption","value":"UninterpretedOption { name, identifier_value, positive_int_value, negative_int_value, double_value, string_value, aggregate_value }","parent":null,"children":[{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836}],"decl_id":null,"docs":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n","sig":null,"attributes":[{"value":"/ A message representing a option the parser does not recognize. This only","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486769,"byte_end":7486845,"line_start":700,"line_end":700,"column_start":1,"column_end":77}},{"value":"/ appears in options protos created by the compiler::Parser class.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486846,"byte_end":7486914,"line_start":701,"line_end":701,"column_start":1,"column_end":69}},{"value":"/ DescriptorPool resolves these when building Descriptor objects. Therefore,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486915,"byte_end":7486993,"line_start":702,"line_end":702,"column_start":1,"column_end":79}},{"value":"/ options protos in descriptor objects (e.g. returned by Descriptor::options(),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7486994,"byte_end":7487075,"line_start":703,"line_end":703,"column_start":1,"column_end":82}},{"value":"/ or produced by Descriptor::CopyTo()) will never have UninterpretedOptions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487076,"byte_end":7487153,"line_start":704,"line_end":704,"column_start":1,"column_end":78}},{"value":"/ in them.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487154,"byte_end":7487166,"line_start":705,"line_end":705,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487295,"byte_end":7487299,"line_start":709,"line_end":709,"column_start":9,"column_end":13},"name":"name","qualname":"::UninterpretedOption::name","value":"prost::alloc::vec::Vec<uninterpreted_option::NamePart>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487250,"byte_end":7487286,"line_start":708,"line_end":708,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487562,"byte_end":7487578,"line_start":713,"line_end":713,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"::UninterpretedOption::identifier_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n","sig":null,"attributes":[{"value":"/ The value of the uninterpreted option, in whatever type the tokenizer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487363,"byte_end":7487436,"line_start":710,"line_end":710,"column_start":5,"column_end":78}},{"value":"/ identified it as during parsing. Exactly one of these should be set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487441,"byte_end":7487513,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487518,"byte_end":7487553,"line_start":712,"line_end":712,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487684,"byte_end":7487702,"line_start":715,"line_end":715,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"::UninterpretedOption::positive_int_value","value":"core::option::Option<u64>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(uint64, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487640,"byte_end":7487675,"line_start":714,"line_end":714,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487780,"byte_end":7487798,"line_start":717,"line_end":717,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"::UninterpretedOption::negative_int_value","value":"core::option::Option<i64>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int64, optional, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487737,"byte_end":7487771,"line_start":716,"line_end":716,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487877,"byte_end":7487889,"line_start":719,"line_end":719,"column_start":9,"column_end":21},"name":"double_value","qualname":"::UninterpretedOption::double_value","value":"core::option::Option<f64>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(double, optional, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487833,"byte_end":7487868,"line_start":718,"line_end":718,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487973,"byte_end":7487985,"line_start":721,"line_end":721,"column_start":9,"column_end":21},"name":"string_value","qualname":"::UninterpretedOption::string_value","value":"core::option::Option<prost::alloc::vec::Vec<u8>>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bytes = \"vec\", optional, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487924,"byte_end":7487964,"line_start":720,"line_end":720,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488089,"byte_end":7488104,"line_start":723,"line_end":723,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"::UninterpretedOption::aggregate_value","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488045,"byte_end":7488080,"line_start":722,"line_end":722,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487562,"byte_end":7487578,"line_start":713,"line_end":713,"column_start":9,"column_end":25},"name":"identifier_value","qualname":"<UninterpretedOption>::identifier_value","value":"pub fn identifier_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `identifier_value`, or the default value if `identifier_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487684,"byte_end":7487702,"line_start":715,"line_end":715,"column_start":9,"column_end":27},"name":"positive_int_value","qualname":"<UninterpretedOption>::positive_int_value","value":"pub fn positive_int_value(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `positive_int_value`, or the default value if `positive_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487780,"byte_end":7487798,"line_start":717,"line_end":717,"column_start":9,"column_end":27},"name":"negative_int_value","qualname":"<UninterpretedOption>::negative_int_value","value":"pub fn negative_int_value(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `negative_int_value`, or the default value if `negative_int_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487877,"byte_end":7487889,"line_start":719,"line_end":719,"column_start":9,"column_end":21},"name":"double_value","qualname":"<UninterpretedOption>::double_value","value":"pub fn double_value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `double_value`, or the default value if `double_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7487973,"byte_end":7487985,"line_start":721,"line_end":721,"column_start":9,"column_end":21},"name":"string_value","qualname":"<UninterpretedOption>::string_value","value":"pub fn string_value(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `string_value`, or the default value if `string_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488089,"byte_end":7488104,"line_start":723,"line_end":723,"column_start":9,"column_end":24},"name":"aggregate_value","qualname":"<UninterpretedOption>::aggregate_value","value":"pub fn aggregate_value(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `aggregate_value`, or the default value if `aggregate_value` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":33},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488232,"byte_end":7488252,"line_start":726,"line_end":726,"column_start":9,"column_end":29},"name":"uninterpreted_option","qualname":"::uninterpreted_option","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1854},{"krate":0,"index":1856}],"decl_id":null,"docs":" Nested message and enum types in `UninterpretedOption`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `UninterpretedOption`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488164,"byte_end":7488223,"line_start":725,"line_end":725,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488669,"byte_end":7488677,"line_start":733,"line_end":733,"column_start":16,"column_end":24},"name":"NamePart","qualname":"::uninterpreted_option::NamePart","value":"NamePart { name_part, is_extension }","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"decl_id":null,"docs":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n","sig":null,"attributes":[{"value":"/ The name of the uninterpreted option.  Each string represents a segment in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488259,"byte_end":7488337,"line_start":727,"line_end":727,"column_start":5,"column_end":83}},{"value":"/ a dot-separated name.  is_extension is true iff a segment represents an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488342,"byte_end":7488417,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ extension (denoted with parentheses in options specs in .proto files).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488422,"byte_end":7488496,"line_start":729,"line_end":729,"column_start":5,"column_end":79}},{"value":"/ E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488501,"byte_end":7488574,"line_start":730,"line_end":730,"column_start":5,"column_end":78}},{"value":"/ \"foo.(bar.baz).qux\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488579,"byte_end":7488603,"line_start":731,"line_end":731,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488736,"byte_end":7488745,"line_start":735,"line_end":735,"column_start":13,"column_end":22},"name":"name_part","qualname":"::uninterpreted_option::NamePart::name_part","value":"prost::alloc::string::String","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, required, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488688,"byte_end":7488723,"line_start":734,"line_end":734,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488833,"byte_end":7488845,"line_start":737,"line_end":737,"column_start":13,"column_end":25},"name":"is_extension","qualname":"::uninterpreted_option::NamePart::is_extension","value":"bool","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(bool, required, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488787,"byte_end":7488820,"line_start":736,"line_end":736,"column_start":9,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489131,"byte_end":7489145,"line_start":746,"line_end":746,"column_start":12,"column_end":26},"name":"SourceCodeInfo","qualname":"::SourceCodeInfo","value":"SourceCodeInfo { location }","parent":null,"children":[{"krate":0,"index":1884}],"decl_id":null,"docs":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","sig":null,"attributes":[{"value":"/ Encapsulates information about the original source file from which a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7488962,"byte_end":7489034,"line_start":743,"line_end":743,"column_start":1,"column_end":73}},{"value":"/ FileDescriptorProto was generated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489035,"byte_end":7489073,"line_start":744,"line_end":744,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491661,"byte_end":7491669,"line_start":791,"line_end":791,"column_start":9,"column_end":17},"name":"location","qualname":"::SourceCodeInfo::location","value":"prost::alloc::vec::Vec<source_code_info::Location>","parent":{"krate":0,"index":1864},"children":[],"decl_id":null,"docs":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.","sig":null,"attributes":[{"value":"/ A Location identifies a piece of source code in a .proto file which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489152,"byte_end":7489223,"line_start":747,"line_end":747,"column_start":5,"column_end":76}},{"value":"/ corresponds to a particular definition.  This information is intended","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489228,"byte_end":7489301,"line_start":748,"line_end":748,"column_start":5,"column_end":78}},{"value":"/ to be useful to IDEs, code indexers, documentation generators, and similar","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489306,"byte_end":7489384,"line_start":749,"line_end":749,"column_start":5,"column_end":83}},{"value":"/ tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489389,"byte_end":7489399,"line_start":750,"line_end":750,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489404,"byte_end":7489407,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ For example, say we have a file like:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489412,"byte_end":7489453,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/   message Foo {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489458,"byte_end":7489477,"line_start":753,"line_end":753,"column_start":5,"column_end":24}},{"value":"/     optional string foo = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489482,"byte_end":7489514,"line_start":754,"line_end":754,"column_start":5,"column_end":37}},{"value":"/   }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489519,"byte_end":7489526,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"/ Let's look at just the field definition:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489531,"byte_end":7489575,"line_start":756,"line_end":756,"column_start":5,"column_end":49}},{"value":"/   optional string foo = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489580,"byte_end":7489610,"line_start":757,"line_end":757,"column_start":5,"column_end":35}},{"value":"/   ^       ^^     ^^  ^  ^^^","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489615,"byte_end":7489646,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/   a       bc     de  f  ghi","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489651,"byte_end":7489682,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ We have the following locations:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489687,"byte_end":7489723,"line_start":760,"line_end":760,"column_start":5,"column_end":41}},{"value":"/   span   path               represents","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489728,"byte_end":7489770,"line_start":761,"line_end":761,"column_start":5,"column_end":47}},{"value":"/   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489775,"byte_end":7489834,"line_start":762,"line_end":762,"column_start":5,"column_end":64}},{"value":"/   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489839,"byte_end":7489892,"line_start":763,"line_end":763,"column_start":5,"column_end":58}},{"value":"/   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489897,"byte_end":7489947,"line_start":764,"line_end":764,"column_start":5,"column_end":55}},{"value":"/   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7489952,"byte_end":7489999,"line_start":765,"line_end":765,"column_start":5,"column_end":52}},{"value":"/   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490004,"byte_end":7490051,"line_start":766,"line_end":766,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490056,"byte_end":7490059,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490064,"byte_end":7490074,"line_start":768,"line_end":768,"column_start":5,"column_end":15}},{"value":"/ - A location may refer to a repeated field itself (i.e. not to any","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490079,"byte_end":7490149,"line_start":769,"line_end":769,"column_start":5,"column_end":75}},{"value":"/   particular index within it).  This is used whenever a set of elements are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490154,"byte_end":7490233,"line_start":770,"line_end":770,"column_start":5,"column_end":84}},{"value":"/   logically enclosed in a single code segment.  For example, an entire","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490238,"byte_end":7490312,"line_start":771,"line_end":771,"column_start":5,"column_end":79}},{"value":"/   extend block (possibly containing multiple extension definitions) will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490317,"byte_end":7490393,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/   have an outer location whose path refers to the \"extensions\" repeated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490398,"byte_end":7490473,"line_start":773,"line_end":773,"column_start":5,"column_end":80}},{"value":"/   field without an index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490478,"byte_end":7490507,"line_start":774,"line_end":774,"column_start":5,"column_end":34}},{"value":"/ - Multiple locations may have the same path.  This happens when a single","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490512,"byte_end":7490588,"line_start":775,"line_end":775,"column_start":5,"column_end":81}},{"value":"/   logical declaration is spread out across multiple places.  The most","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490593,"byte_end":7490666,"line_start":776,"line_end":776,"column_start":5,"column_end":78}},{"value":"/   obvious example is the \"extend\" block again -- there may be multiple","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490671,"byte_end":7490745,"line_start":777,"line_end":777,"column_start":5,"column_end":79}},{"value":"/   extend blocks in the same scope, each of which will have the same path.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490750,"byte_end":7490827,"line_start":778,"line_end":778,"column_start":5,"column_end":82}},{"value":"/ - A location's span is not always a subset of its parent's span.  For","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490832,"byte_end":7490905,"line_start":779,"line_end":779,"column_start":5,"column_end":78}},{"value":"/   example, the \"extendee\" of an extension declaration appears at the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490910,"byte_end":7490982,"line_start":780,"line_end":780,"column_start":5,"column_end":77}},{"value":"/   beginning of the \"extend\" block and is shared by all extensions within","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7490987,"byte_end":7491063,"line_start":781,"line_end":781,"column_start":5,"column_end":81}},{"value":"/   the block.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491068,"byte_end":7491084,"line_start":782,"line_end":782,"column_start":5,"column_end":21}},{"value":"/ - Just because a location's span is a subset of some other location's span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491089,"byte_end":7491167,"line_start":783,"line_end":783,"column_start":5,"column_end":83}},{"value":"/   does not mean that it is a descendant.  For example, a \"group\" defines","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491172,"byte_end":7491248,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"/   both a type and a field in a single declaration.  Thus, the locations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491253,"byte_end":7491328,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/   corresponding to the type and field and their components will overlap.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491333,"byte_end":7491409,"line_start":786,"line_end":786,"column_start":5,"column_end":81}},{"value":"/ - Code which tries to interpret locations should probably be designed to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491414,"byte_end":7491490,"line_start":787,"line_end":787,"column_start":5,"column_end":81}},{"value":"/   ignore those that it doesn't understand, as more types of locations could","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491495,"byte_end":7491574,"line_start":788,"line_end":788,"column_start":5,"column_end":84}},{"value":"/   be recorded in the future.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491579,"byte_end":7491611,"line_start":789,"line_end":789,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491616,"byte_end":7491652,"line_start":790,"line_end":790,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491790,"byte_end":7491806,"line_start":794,"line_end":794,"column_start":9,"column_end":25},"name":"source_code_info","qualname":"::source_code_info","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1892},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1956}],"decl_id":null,"docs":" Nested message and enum types in `SourceCodeInfo`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `SourceCodeInfo`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491727,"byte_end":7491781,"line_start":793,"line_end":793,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491874,"byte_end":7491882,"line_start":796,"line_end":796,"column_start":16,"column_end":24},"name":"Location","qualname":"::source_code_info::Location","value":"Location { path, span, leading_comments, trailing_comments, leading_detached_comments }","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493075,"byte_end":7493079,"line_start":821,"line_end":821,"column_start":13,"column_end":17},"name":"path","qualname":"::source_code_info::Location::path","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" Identifies which part of the FileDescriptorProto was defined at this\n location.","sig":null,"attributes":[{"value":"/ Identifies which part of the FileDescriptorProto was defined at this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491893,"byte_end":7491965,"line_start":797,"line_end":797,"column_start":9,"column_end":81}},{"value":"/ location.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491974,"byte_end":7491987,"line_start":798,"line_end":798,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7491996,"byte_end":7491999,"line_start":799,"line_end":799,"column_start":9,"column_end":12}},{"value":"/ Each element is a field number or an index.  They form a path from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492008,"byte_end":7492078,"line_start":800,"line_end":800,"column_start":9,"column_end":79}},{"value":"/ the root FileDescriptorProto to the place where the definition.  For","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492087,"byte_end":7492159,"line_start":801,"line_end":801,"column_start":9,"column_end":81}},{"value":"/ example, this path:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492168,"byte_end":7492191,"line_start":802,"line_end":802,"column_start":9,"column_end":32}},{"value":"/   [ 4, 3, 2, 7, 1 ]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492200,"byte_end":7492223,"line_start":803,"line_end":803,"column_start":9,"column_end":32}},{"value":"/ refers to:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492232,"byte_end":7492246,"line_start":804,"line_end":804,"column_start":9,"column_end":23}},{"value":"/   file.message_type(3)  // 4, 3","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492255,"byte_end":7492290,"line_start":805,"line_end":805,"column_start":9,"column_end":44}},{"value":"/       .field(7)         // 2, 7","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492299,"byte_end":7492334,"line_start":806,"line_end":806,"column_start":9,"column_end":44}},{"value":"/       .name()           // 1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492343,"byte_end":7492375,"line_start":807,"line_end":807,"column_start":9,"column_end":41}},{"value":"/ This is because FileDescriptorProto.message_type has field number 4:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492384,"byte_end":7492456,"line_start":808,"line_end":808,"column_start":9,"column_end":81}},{"value":"/   repeated DescriptorProto message_type = 4;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492465,"byte_end":7492513,"line_start":809,"line_end":809,"column_start":9,"column_end":57}},{"value":"/ and DescriptorProto.field has field number 2:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492522,"byte_end":7492571,"line_start":810,"line_end":810,"column_start":9,"column_end":58}},{"value":"/   repeated FieldDescriptorProto field = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492580,"byte_end":7492626,"line_start":811,"line_end":811,"column_start":9,"column_end":55}},{"value":"/ and FieldDescriptorProto.name has field number 1:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492635,"byte_end":7492688,"line_start":812,"line_end":812,"column_start":9,"column_end":62}},{"value":"/   optional string name = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492697,"byte_end":7492728,"line_start":813,"line_end":813,"column_start":9,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492737,"byte_end":7492740,"line_start":814,"line_end":814,"column_start":9,"column_end":12}},{"value":"/ Thus, the above path gives the location of a field name.  If we removed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492749,"byte_end":7492824,"line_start":815,"line_end":815,"column_start":9,"column_end":84}},{"value":"/ the last element:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492833,"byte_end":7492854,"line_start":816,"line_end":816,"column_start":9,"column_end":30}},{"value":"/   [ 4, 3, 2, 7 ]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492863,"byte_end":7492883,"line_start":817,"line_end":817,"column_start":9,"column_end":29}},{"value":"/ this path refers to the whole field declaration (from the beginning","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492892,"byte_end":7492963,"line_start":818,"line_end":818,"column_start":9,"column_end":80}},{"value":"/ of the label to the terminating semicolon).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7492972,"byte_end":7493019,"line_start":819,"line_end":819,"column_start":9,"column_end":56}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493028,"byte_end":7493062,"line_start":820,"line_end":820,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493543,"byte_end":7493547,"line_start":828,"line_end":828,"column_start":13,"column_end":17},"name":"span","qualname":"::source_code_info::Location::span","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n","sig":null,"attributes":[{"value":"/ Always has exactly three or four elements: start line, start column,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493120,"byte_end":7493192,"line_start":822,"line_end":822,"column_start":9,"column_end":81}},{"value":"/ end line (optional, otherwise assumed same as start line), end column.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493201,"byte_end":7493275,"line_start":823,"line_end":823,"column_start":9,"column_end":83}},{"value":"/ These are packed into a single field for efficiency.  Note that line","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493284,"byte_end":7493356,"line_start":824,"line_end":824,"column_start":9,"column_end":81}},{"value":"/ and column numbers are zero-based -- typically you will want to add","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493365,"byte_end":7493436,"line_start":825,"line_end":825,"column_start":9,"column_end":80}},{"value":"/ 1 to each before displaying to a user.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493445,"byte_end":7493487,"line_start":826,"line_end":826,"column_start":9,"column_end":51}},{"value":"prost(int32, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493496,"byte_end":7493530,"line_start":827,"line_end":827,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495709,"byte_end":7495725,"line_start":877,"line_end":877,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"::source_code_info::Location::leading_comments","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.","sig":null,"attributes":[{"value":"/ If this SourceCodeInfo represents a complete declaration, these are any","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493588,"byte_end":7493663,"line_start":829,"line_end":829,"column_start":9,"column_end":84}},{"value":"/ comments appearing before and after the declaration which appear to be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493672,"byte_end":7493746,"line_start":830,"line_end":830,"column_start":9,"column_end":83}},{"value":"/ attached to the declaration.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493755,"byte_end":7493787,"line_start":831,"line_end":831,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493796,"byte_end":7493799,"line_start":832,"line_end":832,"column_start":9,"column_end":12}},{"value":"/ A series of line comments appearing on consecutive lines, with no other","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493808,"byte_end":7493883,"line_start":833,"line_end":833,"column_start":9,"column_end":84}},{"value":"/ tokens appearing on those lines, will be treated as a single comment.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493892,"byte_end":7493965,"line_start":834,"line_end":834,"column_start":9,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493974,"byte_end":7493977,"line_start":835,"line_end":835,"column_start":9,"column_end":12}},{"value":"/ leading_detached_comments will keep paragraphs of comments that appear","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7493986,"byte_end":7494060,"line_start":836,"line_end":836,"column_start":9,"column_end":83}},{"value":"/ before (but not connected to) the current element. Each paragraph,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494069,"byte_end":7494139,"line_start":837,"line_end":837,"column_start":9,"column_end":79}},{"value":"/ separated by empty lines, will be one comment element in the repeated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494148,"byte_end":7494221,"line_start":838,"line_end":838,"column_start":9,"column_end":82}},{"value":"/ field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494230,"byte_end":7494240,"line_start":839,"line_end":839,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494249,"byte_end":7494252,"line_start":840,"line_end":840,"column_start":9,"column_end":12}},{"value":"/ Only the comment content is provided; comment markers (e.g. //) are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494261,"byte_end":7494332,"line_start":841,"line_end":841,"column_start":9,"column_end":80}},{"value":"/ stripped out.  For block comments, leading whitespace and an asterisk","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494341,"byte_end":7494414,"line_start":842,"line_end":842,"column_start":9,"column_end":82}},{"value":"/ will be stripped from the beginning of each line other than the first.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494423,"byte_end":7494497,"line_start":843,"line_end":843,"column_start":9,"column_end":83}},{"value":"/ Newlines are included in the output.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494506,"byte_end":7494546,"line_start":844,"line_end":844,"column_start":9,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494555,"byte_end":7494558,"line_start":845,"line_end":845,"column_start":9,"column_end":12}},{"value":"/ Examples:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494567,"byte_end":7494580,"line_start":846,"line_end":846,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494589,"byte_end":7494592,"line_start":847,"line_end":847,"column_start":9,"column_end":12}},{"value":"/   optional int32 foo = 1;  // Comment attached to foo.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494601,"byte_end":7494659,"line_start":848,"line_end":848,"column_start":9,"column_end":67}},{"value":"/   // Comment attached to bar.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494668,"byte_end":7494701,"line_start":849,"line_end":849,"column_start":9,"column_end":42}},{"value":"/   optional int32 bar = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494710,"byte_end":7494739,"line_start":850,"line_end":850,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494748,"byte_end":7494751,"line_start":851,"line_end":851,"column_start":9,"column_end":12}},{"value":"/   optional string baz = 3;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494760,"byte_end":7494790,"line_start":852,"line_end":852,"column_start":9,"column_end":39}},{"value":"/   // Comment attached to baz.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494799,"byte_end":7494832,"line_start":853,"line_end":853,"column_start":9,"column_end":42}},{"value":"/   // Another line attached to baz.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494841,"byte_end":7494879,"line_start":854,"line_end":854,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494888,"byte_end":7494891,"line_start":855,"line_end":855,"column_start":9,"column_end":12}},{"value":"/   // Comment attached to qux.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494900,"byte_end":7494933,"line_start":856,"line_end":856,"column_start":9,"column_end":42}},{"value":"/   //","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494942,"byte_end":7494950,"line_start":857,"line_end":857,"column_start":9,"column_end":17}},{"value":"/   // Another line attached to qux.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7494959,"byte_end":7494997,"line_start":858,"line_end":858,"column_start":9,"column_end":47}},{"value":"/   optional double qux = 4;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495006,"byte_end":7495036,"line_start":859,"line_end":859,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495045,"byte_end":7495048,"line_start":860,"line_end":860,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge. This is not leading or trailing comments","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495057,"byte_end":7495134,"line_start":861,"line_end":861,"column_start":9,"column_end":86}},{"value":"/   // to qux or corge because there are blank lines separating it from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495143,"byte_end":7495216,"line_start":862,"line_end":862,"column_start":9,"column_end":82}},{"value":"/   // both.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495225,"byte_end":7495239,"line_start":863,"line_end":863,"column_start":9,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495248,"byte_end":7495251,"line_start":864,"line_end":864,"column_start":9,"column_end":12}},{"value":"/   // Detached comment for corge paragraph 2.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495260,"byte_end":7495308,"line_start":865,"line_end":865,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495317,"byte_end":7495320,"line_start":866,"line_end":866,"column_start":9,"column_end":12}},{"value":"/   optional string corge = 5;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495329,"byte_end":7495361,"line_start":867,"line_end":867,"column_start":9,"column_end":41}},{"value":"/   /* Block comment attached","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495370,"byte_end":7495401,"line_start":868,"line_end":868,"column_start":9,"column_end":40}},{"value":"/    * to corge.  Leading asterisks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495410,"byte_end":7495447,"line_start":869,"line_end":869,"column_start":9,"column_end":46}},{"value":"/    * will be removed. */","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495456,"byte_end":7495484,"line_start":870,"line_end":870,"column_start":9,"column_end":37}},{"value":"/   /* Block comment attached to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495493,"byte_end":7495527,"line_start":871,"line_end":871,"column_start":9,"column_end":43}},{"value":"/    * grault. */","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495536,"byte_end":7495555,"line_start":872,"line_end":872,"column_start":9,"column_end":28}},{"value":"/   optional int32 grault = 6;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495564,"byte_end":7495596,"line_start":873,"line_end":873,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495605,"byte_end":7495608,"line_start":874,"line_end":874,"column_start":9,"column_end":12}},{"value":"/   // ignored detached comments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495617,"byte_end":7495652,"line_start":875,"line_end":875,"column_start":9,"column_end":44}},{"value":"prost(string, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495661,"byte_end":7495696,"line_start":876,"line_end":876,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495839,"byte_end":7495856,"line_start":879,"line_end":879,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"::source_code_info::Location::trailing_comments","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495791,"byte_end":7495826,"line_start":878,"line_end":878,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495970,"byte_end":7495995,"line_start":881,"line_end":881,"column_start":13,"column_end":38},"name":"leading_detached_comments","qualname":"::source_code_info::Location::leading_detached_comments","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(string, repeated, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495922,"byte_end":7495957,"line_start":880,"line_end":880,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495709,"byte_end":7495725,"line_start":877,"line_end":877,"column_start":13,"column_end":29},"name":"leading_comments","qualname":"<Location>::leading_comments","value":"pub fn leading_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `leading_comments`, or the default value if `leading_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7495839,"byte_end":7495856,"line_start":879,"line_end":879,"column_start":13,"column_end":30},"name":"trailing_comments","qualname":"<Location>::trailing_comments","value":"pub fn trailing_comments(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `trailing_comments`, or the default value if `trailing_comments` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496352,"byte_end":7496369,"line_start":888,"line_end":888,"column_start":12,"column_end":29},"name":"GeneratedCodeInfo","qualname":"::GeneratedCodeInfo","value":"GeneratedCodeInfo { annotation }","parent":null,"children":[{"krate":0,"index":1984}],"decl_id":null,"docs":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n","sig":null,"attributes":[{"value":"/ Describes the relationship between generated code and its original source","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496063,"byte_end":7496140,"line_start":884,"line_end":884,"column_start":1,"column_end":78}},{"value":"/ file. A GeneratedCodeInfo message is associated with only one generated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496141,"byte_end":7496216,"line_start":885,"line_end":885,"column_start":1,"column_end":76}},{"value":"/ source file, but may contain references to different source .proto files.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496217,"byte_end":7496294,"line_start":886,"line_end":886,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496541,"byte_end":7496551,"line_start":892,"line_end":892,"column_start":9,"column_end":19},"name":"annotation","qualname":"::GeneratedCodeInfo::annotation","value":"prost::alloc::vec::Vec<generated_code_info::Annotation>","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n","sig":null,"attributes":[{"value":"/ An Annotation connects some span of text in generated code to an element","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496376,"byte_end":7496452,"line_start":889,"line_end":889,"column_start":5,"column_end":81}},{"value":"/ of its generating .proto file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496457,"byte_end":7496491,"line_start":890,"line_end":890,"column_start":5,"column_end":39}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496496,"byte_end":7496532,"line_start":891,"line_end":891,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496680,"byte_end":7496699,"line_start":895,"line_end":895,"column_start":9,"column_end":28},"name":"generated_code_info","qualname":"::generated_code_info","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2047}],"decl_id":null,"docs":" Nested message and enum types in `GeneratedCodeInfo`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `GeneratedCodeInfo`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496614,"byte_end":7496671,"line_start":894,"line_end":894,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496767,"byte_end":7496777,"line_start":897,"line_end":897,"column_start":16,"column_end":26},"name":"Annotation","qualname":"::generated_code_info::Annotation","value":"Annotation { path, source_file, begin, end }","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496984,"byte_end":7496988,"line_start":901,"line_end":901,"column_start":13,"column_end":17},"name":"path","qualname":"::generated_code_info::Annotation::path","value":"prost::alloc::vec::Vec<i32>","parent":{"krate":0,"index":1985},"children":[],"decl_id":null,"docs":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n","sig":null,"attributes":[{"value":"/ Identifies the element in the original source .proto file. This field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496788,"byte_end":7496861,"line_start":898,"line_end":898,"column_start":9,"column_end":82}},{"value":"/ is formatted the same as SourceCodeInfo.Location.path.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496870,"byte_end":7496928,"line_start":899,"line_end":899,"column_start":9,"column_end":67}},{"value":"prost(int32, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7496937,"byte_end":7496971,"line_start":900,"line_end":900,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497151,"byte_end":7497162,"line_start":904,"line_end":904,"column_start":13,"column_end":24},"name":"source_file","qualname":"::generated_code_info::Annotation::source_file","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":1985},"children":[],"decl_id":null,"docs":" Identifies the filesystem path to the original source .proto.\n","sig":null,"attributes":[{"value":"/ Identifies the filesystem path to the original source .proto.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497029,"byte_end":7497094,"line_start":902,"line_end":902,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497103,"byte_end":7497138,"line_start":903,"line_end":903,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497400,"byte_end":7497405,"line_start":908,"line_end":908,"column_start":13,"column_end":18},"name":"begin","qualname":"::generated_code_info::Annotation::begin","value":"core::option::Option<i32>","parent":{"krate":0,"index":1985},"children":[],"decl_id":null,"docs":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n","sig":null,"attributes":[{"value":"/ Identifies the starting offset in bytes in the generated code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497228,"byte_end":7497293,"line_start":905,"line_end":905,"column_start":9,"column_end":74}},{"value":"/ that relates to the identified object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497302,"byte_end":7497344,"line_start":906,"line_end":906,"column_start":9,"column_end":51}},{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497353,"byte_end":7497387,"line_start":907,"line_end":907,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497726,"byte_end":7497729,"line_start":913,"line_end":913,"column_start":13,"column_end":16},"name":"end","qualname":"::generated_code_info::Annotation::end","value":"core::option::Option<i32>","parent":{"krate":0,"index":1985},"children":[],"decl_id":null,"docs":" Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n","sig":null,"attributes":[{"value":"/ Identifies the ending offset in bytes in the generated code that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497444,"byte_end":7497512,"line_start":909,"line_end":909,"column_start":9,"column_end":77}},{"value":"/ relates to the identified offset. The end offset should be one past","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497521,"byte_end":7497592,"line_start":910,"line_end":910,"column_start":9,"column_end":80}},{"value":"/ the last relevant byte (so the length of the text = end - begin).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497601,"byte_end":7497670,"line_start":911,"line_end":911,"column_start":9,"column_end":78}},{"value":"prost(int32, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497679,"byte_end":7497713,"line_start":912,"line_end":912,"column_start":9,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497151,"byte_end":7497162,"line_start":904,"line_end":904,"column_start":13,"column_end":24},"name":"source_file","qualname":"<Annotation>::source_file","value":"pub fn source_file(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `source_file`, or the default value if `source_file` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497400,"byte_end":7497405,"line_start":908,"line_end":908,"column_start":13,"column_end":18},"name":"begin","qualname":"<Annotation>::begin","value":"pub fn begin(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `begin`, or the default value if `begin` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497726,"byte_end":7497729,"line_start":913,"line_end":913,"column_start":13,"column_end":16},"name":"end","qualname":"<Annotation>::end","value":"pub fn end(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `end`, or the default value if `end` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500235,"byte_end":7500238,"line_start":1000,"line_end":1000,"column_start":12,"column_end":15},"name":"Any","qualname":"::Any","value":"Any { type_url, value }","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081}],"decl_id":null,"docs":" `Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.","sig":null,"attributes":[{"value":"/ `Any` contains an arbitrary serialized protocol buffer message along with a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497768,"byte_end":7497847,"line_start":916,"line_end":916,"column_start":1,"column_end":80}},{"value":"/ URL that describes the type of the serialized message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497848,"byte_end":7497906,"line_start":917,"line_end":917,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497907,"byte_end":7497910,"line_start":918,"line_end":918,"column_start":1,"column_end":4}},{"value":"/ Protobuf library provides support to pack/unpack Any values in the form","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497911,"byte_end":7497986,"line_start":919,"line_end":919,"column_start":1,"column_end":76}},{"value":"/ of utility functions or additional generated methods of the Any type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7497987,"byte_end":7498060,"line_start":920,"line_end":920,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498061,"byte_end":7498064,"line_start":921,"line_end":921,"column_start":1,"column_end":4}},{"value":"/ Example 1: Pack and unpack a message in C++.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498065,"byte_end":7498113,"line_start":922,"line_end":922,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498114,"byte_end":7498117,"line_start":923,"line_end":923,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498118,"byte_end":7498140,"line_start":924,"line_end":924,"column_start":1,"column_end":23}},{"value":"/     Any any;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498141,"byte_end":7498157,"line_start":925,"line_end":925,"column_start":1,"column_end":17}},{"value":"/     any.PackFrom(foo);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498158,"byte_end":7498184,"line_start":926,"line_end":926,"column_start":1,"column_end":27}},{"value":"/     ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498185,"byte_end":7498196,"line_start":927,"line_end":927,"column_start":1,"column_end":12}},{"value":"/     if (any.UnpackTo(&foo)) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498197,"byte_end":7498230,"line_start":928,"line_end":928,"column_start":1,"column_end":34}},{"value":"/       ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498231,"byte_end":7498244,"line_start":929,"line_end":929,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498245,"byte_end":7498254,"line_start":930,"line_end":930,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498255,"byte_end":7498258,"line_start":931,"line_end":931,"column_start":1,"column_end":4}},{"value":"/ Example 2: Pack and unpack a message in Java.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498259,"byte_end":7498308,"line_start":932,"line_end":932,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498309,"byte_end":7498312,"line_start":933,"line_end":933,"column_start":1,"column_end":4}},{"value":"/     Foo foo = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498313,"byte_end":7498335,"line_start":934,"line_end":934,"column_start":1,"column_end":23}},{"value":"/     Any any = Any.pack(foo);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498336,"byte_end":7498368,"line_start":935,"line_end":935,"column_start":1,"column_end":33}},{"value":"/     ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498369,"byte_end":7498380,"line_start":936,"line_end":936,"column_start":1,"column_end":12}},{"value":"/     if (any.is(Foo.class)) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498381,"byte_end":7498413,"line_start":937,"line_end":937,"column_start":1,"column_end":33}},{"value":"/       foo = any.unpack(Foo.class);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498414,"byte_end":7498452,"line_start":938,"line_end":938,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498453,"byte_end":7498462,"line_start":939,"line_end":939,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498463,"byte_end":7498466,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/  Example 3: Pack and unpack a message in Python.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498467,"byte_end":7498519,"line_start":941,"line_end":941,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498520,"byte_end":7498523,"line_start":942,"line_end":942,"column_start":1,"column_end":4}},{"value":"/     foo = Foo(...)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498524,"byte_end":7498546,"line_start":943,"line_end":943,"column_start":1,"column_end":23}},{"value":"/     any = Any()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498547,"byte_end":7498566,"line_start":944,"line_end":944,"column_start":1,"column_end":20}},{"value":"/     any.Pack(foo)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498567,"byte_end":7498588,"line_start":945,"line_end":945,"column_start":1,"column_end":22}},{"value":"/     ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498589,"byte_end":7498600,"line_start":946,"line_end":946,"column_start":1,"column_end":12}},{"value":"/     if any.Is(Foo.DESCRIPTOR):","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498601,"byte_end":7498635,"line_start":947,"line_end":947,"column_start":1,"column_end":35}},{"value":"/       any.Unpack(foo)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498636,"byte_end":7498661,"line_start":948,"line_end":948,"column_start":1,"column_end":26}},{"value":"/       ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498662,"byte_end":7498675,"line_start":949,"line_end":949,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498676,"byte_end":7498679,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/  Example 4: Pack and unpack a message in Go","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498680,"byte_end":7498727,"line_start":951,"line_end":951,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498728,"byte_end":7498731,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/      foo := &pb.Foo{...}","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498732,"byte_end":7498760,"line_start":953,"line_end":953,"column_start":1,"column_end":29}},{"value":"/      any, err := anypb.New(foo)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498761,"byte_end":7498796,"line_start":954,"line_end":954,"column_start":1,"column_end":36}},{"value":"/      if err != nil {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498797,"byte_end":7498821,"line_start":955,"line_end":955,"column_start":1,"column_end":25}},{"value":"/        ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498822,"byte_end":7498836,"line_start":956,"line_end":956,"column_start":1,"column_end":15}},{"value":"/      }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498837,"byte_end":7498847,"line_start":957,"line_end":957,"column_start":1,"column_end":11}},{"value":"/      ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498848,"byte_end":7498860,"line_start":958,"line_end":958,"column_start":1,"column_end":13}},{"value":"/      foo := &pb.Foo{}","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498861,"byte_end":7498886,"line_start":959,"line_end":959,"column_start":1,"column_end":26}},{"value":"/      if err := any.UnmarshalTo(foo); err != nil {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498887,"byte_end":7498940,"line_start":960,"line_end":960,"column_start":1,"column_end":54}},{"value":"/        ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498941,"byte_end":7498955,"line_start":961,"line_end":961,"column_start":1,"column_end":15}},{"value":"/      }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498956,"byte_end":7498966,"line_start":962,"line_end":962,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498967,"byte_end":7498970,"line_start":963,"line_end":963,"column_start":1,"column_end":4}},{"value":"/ The pack methods provided by protobuf library will by default use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7498971,"byte_end":7499040,"line_start":964,"line_end":964,"column_start":1,"column_end":70}},{"value":"/ 'type.googleapis.com/full.type.name' as the type URL and the unpack","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499041,"byte_end":7499112,"line_start":965,"line_end":965,"column_start":1,"column_end":72}},{"value":"/ methods only use the fully qualified type name after the last '/'","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499113,"byte_end":7499182,"line_start":966,"line_end":966,"column_start":1,"column_end":70}},{"value":"/ in the type URL, for example \"foo.bar.com/x/y.z\" will yield type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499183,"byte_end":7499251,"line_start":967,"line_end":967,"column_start":1,"column_end":69}},{"value":"/ name \"y.z\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499252,"byte_end":7499267,"line_start":968,"line_end":968,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499268,"byte_end":7499271,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499272,"byte_end":7499275,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ JSON","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499276,"byte_end":7499284,"line_start":971,"line_end":971,"column_start":1,"column_end":9}},{"value":"/ ====","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499285,"byte_end":7499293,"line_start":972,"line_end":972,"column_start":1,"column_end":9}},{"value":"/ The JSON representation of an `Any` value uses the regular","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499294,"byte_end":7499356,"line_start":973,"line_end":973,"column_start":1,"column_end":63}},{"value":"/ representation of the deserialized, embedded message, with an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499357,"byte_end":7499422,"line_start":974,"line_end":974,"column_start":1,"column_end":66}},{"value":"/ additional field `@type` which contains the type URL. Example:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499423,"byte_end":7499489,"line_start":975,"line_end":975,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499490,"byte_end":7499493,"line_start":976,"line_end":976,"column_start":1,"column_end":4}},{"value":"/     package google.profile;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499494,"byte_end":7499525,"line_start":977,"line_end":977,"column_start":1,"column_end":32}},{"value":"/     message Person {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499526,"byte_end":7499550,"line_start":978,"line_end":978,"column_start":1,"column_end":25}},{"value":"/       string first_name = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499551,"byte_end":7499583,"line_start":979,"line_end":979,"column_start":1,"column_end":33}},{"value":"/       string last_name = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499584,"byte_end":7499615,"line_start":980,"line_end":980,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499616,"byte_end":7499625,"line_start":981,"line_end":981,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499626,"byte_end":7499629,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499630,"byte_end":7499639,"line_start":983,"line_end":983,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.profile.Person\",","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499640,"byte_end":7499703,"line_start":984,"line_end":984,"column_start":1,"column_end":64}},{"value":"/       \"firstName\": <string>,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499704,"byte_end":7499736,"line_start":985,"line_end":985,"column_start":1,"column_end":33}},{"value":"/       \"lastName\": <string>","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499737,"byte_end":7499767,"line_start":986,"line_end":986,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499768,"byte_end":7499777,"line_start":987,"line_end":987,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499778,"byte_end":7499781,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ If the embedded message type is well-known and has a custom JSON","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499782,"byte_end":7499850,"line_start":989,"line_end":989,"column_start":1,"column_end":69}},{"value":"/ representation, that representation will be embedded adding a field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499851,"byte_end":7499922,"line_start":990,"line_end":990,"column_start":1,"column_end":72}},{"value":"/ `value` which holds the custom JSON in addition to the `@type`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499923,"byte_end":7499989,"line_start":991,"line_end":991,"column_start":1,"column_end":67}},{"value":"/ field. Example (for message \\[google.protobuf.Duration][\\]):","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7499990,"byte_end":7500054,"line_start":992,"line_end":992,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500055,"byte_end":7500058,"line_start":993,"line_end":993,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500059,"byte_end":7500068,"line_start":994,"line_end":994,"column_start":1,"column_end":10}},{"value":"/       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500069,"byte_end":7500135,"line_start":995,"line_end":995,"column_start":1,"column_end":67}},{"value":"/       \"value\": \"1.212s\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500136,"byte_end":7500163,"line_start":996,"line_end":996,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500164,"byte_end":7500173,"line_start":997,"line_end":997,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500174,"byte_end":7500177,"line_start":998,"line_end":998,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501829,"byte_end":7501837,"line_start":1030,"line_end":1030,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Any::type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":" A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).","sig":null,"attributes":[{"value":"/ A URL/resource name that uniquely identifies the type of the serialized","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500245,"byte_end":7500320,"line_start":1001,"line_end":1001,"column_start":5,"column_end":80}},{"value":"/ protocol buffer message. This string must contain at least","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500325,"byte_end":7500387,"line_start":1002,"line_end":1002,"column_start":5,"column_end":67}},{"value":"/ one \"/\" character. The last segment of the URL's path must represent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500392,"byte_end":7500464,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/ the fully qualified name of the type (as in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500469,"byte_end":7500516,"line_start":1004,"line_end":1004,"column_start":5,"column_end":52}},{"value":"/ `path/google.protobuf.Duration`). The name should be in a canonical form","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500521,"byte_end":7500597,"line_start":1005,"line_end":1005,"column_start":5,"column_end":81}},{"value":"/ (e.g., leading \".\" is not accepted).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500602,"byte_end":7500642,"line_start":1006,"line_end":1006,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500647,"byte_end":7500650,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ In practice, teams usually precompile into the binary all types that they","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500655,"byte_end":7500732,"line_start":1008,"line_end":1008,"column_start":5,"column_end":82}},{"value":"/ expect it to use in the context of Any. However, for URLs which use the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500737,"byte_end":7500812,"line_start":1009,"line_end":1009,"column_start":5,"column_end":80}},{"value":"/ scheme `http`, `https`, or no scheme, one can optionally set up a type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500817,"byte_end":7500891,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ server that maps type URLs to message definitions as follows:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500896,"byte_end":7500961,"line_start":1011,"line_end":1011,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500966,"byte_end":7500969,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ * If no scheme is provided, `https` is assumed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7500974,"byte_end":7501025,"line_start":1013,"line_end":1013,"column_start":5,"column_end":56}},{"value":"/ * An HTTP GET on the URL must yield a \\[google.protobuf.Type][\\]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501030,"byte_end":7501098,"line_start":1014,"line_end":1014,"column_start":5,"column_end":73}},{"value":"/   value in binary format, or produce an error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501103,"byte_end":7501153,"line_start":1015,"line_end":1015,"column_start":5,"column_end":55}},{"value":"/ * Applications are allowed to cache lookup results based on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501158,"byte_end":7501225,"line_start":1016,"line_end":1016,"column_start":5,"column_end":72}},{"value":"/   URL, or have them precompiled into a binary to avoid any","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501230,"byte_end":7501292,"line_start":1017,"line_end":1017,"column_start":5,"column_end":67}},{"value":"/   lookup. Therefore, binary compatibility needs to be preserved","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501297,"byte_end":7501364,"line_start":1018,"line_end":1018,"column_start":5,"column_end":72}},{"value":"/   on changes to types. (Use versioned type names to manage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501369,"byte_end":7501431,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"/   breaking changes.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501436,"byte_end":7501460,"line_start":1020,"line_end":1020,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501465,"byte_end":7501468,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Note: this functionality is not currently available in the official","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501473,"byte_end":7501544,"line_start":1022,"line_end":1022,"column_start":5,"column_end":76}},{"value":"/ protobuf release, and it is not used for type URLs beginning with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501549,"byte_end":7501618,"line_start":1023,"line_end":1023,"column_start":5,"column_end":74}},{"value":"/ type.googleapis.com.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501623,"byte_end":7501647,"line_start":1024,"line_end":1024,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501652,"byte_end":7501655,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ Schemes other than `http`, `https` (or the empty scheme) might be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501660,"byte_end":7501729,"line_start":1026,"line_end":1026,"column_start":5,"column_end":74}},{"value":"/ used with implementation specific semantics.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501734,"byte_end":7501782,"line_start":1027,"line_end":1027,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501787,"byte_end":7501790,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501795,"byte_end":7501820,"line_start":1029,"line_end":1029,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501994,"byte_end":7501999,"line_start":1033,"line_end":1033,"column_start":9,"column_end":14},"name":"value","qualname":"::Any::value","value":"prost::alloc::vec::Vec<u8>","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":" Must be a valid serialized protocol buffer of the above specified type.\n","sig":null,"attributes":[{"value":"/ Must be a valid serialized protocol buffer of the above specified type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501875,"byte_end":7501950,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"prost(bytes = \"vec\", tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7501955,"byte_end":7501985,"line_start":1032,"line_end":1032,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502215,"byte_end":7502228,"line_start":1038,"line_end":1038,"column_start":12,"column_end":25},"name":"SourceContext","qualname":"::SourceContext","value":"SourceContext { file_name }","parent":null,"children":[{"krate":0,"index":2104}],"decl_id":null,"docs":" `SourceContext` represents information about the source of a\n protobuf element, like the file in which it is defined.\n","sig":null,"attributes":[{"value":"/ `SourceContext` represents information about the source of a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502033,"byte_end":7502097,"line_start":1035,"line_end":1035,"column_start":1,"column_end":65}},{"value":"/ protobuf element, like the file in which it is defined.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502098,"byte_end":7502157,"line_start":1036,"line_end":1036,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502432,"byte_end":7502441,"line_start":1042,"line_end":1042,"column_start":9,"column_end":18},"name":"file_name","qualname":"::SourceContext::file_name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" The path-qualified name of the .proto file that contained the associated\n protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.\n","sig":null,"attributes":[{"value":"/ The path-qualified name of the .proto file that contained the associated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502235,"byte_end":7502311,"line_start":1039,"line_end":1039,"column_start":5,"column_end":81}},{"value":"/ protobuf element.  For example: `\"google/protobuf/source_context.proto\"`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502316,"byte_end":7502393,"line_start":1040,"line_end":1040,"column_start":5,"column_end":82}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502398,"byte_end":7502423,"line_start":1041,"line_end":1041,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502570,"byte_end":7502574,"line_start":1046,"line_end":1046,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, fields, oneofs, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157}],"decl_id":null,"docs":" A protocol buffer message type.\n","sig":null,"attributes":[{"value":"/ A protocol buffer message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502477,"byte_end":7502512,"line_start":1044,"line_end":1044,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502657,"byte_end":7502661,"line_start":1049,"line_end":1049,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The fully qualified message name.\n","sig":null,"attributes":[{"value":"/ The fully qualified message name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502581,"byte_end":7502618,"line_start":1047,"line_end":1047,"column_start":5,"column_end":42}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502623,"byte_end":7502648,"line_start":1048,"line_end":1048,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502772,"byte_end":7502778,"line_start":1052,"line_end":1052,"column_start":9,"column_end":15},"name":"fields","qualname":"::Type::fields","value":"prost::alloc::vec::Vec<Field>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The list of fields.\n","sig":null,"attributes":[{"value":"/ The list of fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502699,"byte_end":7502722,"line_start":1050,"line_end":1050,"column_start":5,"column_end":28}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502727,"byte_end":7502763,"line_start":1051,"line_end":1051,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502934,"byte_end":7502940,"line_start":1055,"line_end":1055,"column_start":9,"column_end":15},"name":"oneofs","qualname":"::Type::oneofs","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The list of types appearing in `oneof` definitions in this type.\n","sig":null,"attributes":[{"value":"/ The list of types appearing in `oneof` definitions in this type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502817,"byte_end":7502885,"line_start":1053,"line_end":1053,"column_start":5,"column_end":73}},{"value":"prost(string, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7502890,"byte_end":7502925,"line_start":1054,"line_end":1054,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503086,"byte_end":7503093,"line_start":1058,"line_end":1058,"column_start":9,"column_end":16},"name":"options","qualname":"::Type::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503004,"byte_end":7503036,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503041,"byte_end":7503077,"line_start":1057,"line_end":1057,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503206,"byte_end":7503220,"line_start":1061,"line_end":1061,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Type::source_context","value":"core::option::Option<SourceContext>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503133,"byte_end":7503156,"line_start":1059,"line_end":1059,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503161,"byte_end":7503197,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503340,"byte_end":7503346,"line_start":1064,"line_end":1064,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Type::syntax","value":"i32","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503265,"byte_end":7503287,"line_start":1062,"line_end":1062,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503292,"byte_end":7503331,"line_start":1063,"line_end":1063,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503340,"byte_end":7503346,"line_start":1064,"line_end":1064,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Type>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503450,"byte_end":7503455,"line_start":1068,"line_end":1068,"column_start":12,"column_end":17},"name":"Field","qualname":"::Field","value":"Field { kind, cardinality, number, name, type_url, oneof_index, packed, options, json_name, default_value }","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229}],"decl_id":null,"docs":" A single field of a message type.\n","sig":null,"attributes":[{"value":"/ A single field of a message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503355,"byte_end":7503392,"line_start":1066,"line_end":1066,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503539,"byte_end":7503543,"line_start":1071,"line_end":1071,"column_start":9,"column_end":13},"name":"kind","qualname":"::Field::kind","value":"i32","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field type.\n","sig":null,"attributes":[{"value":"/ The field type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503462,"byte_end":7503481,"line_start":1069,"line_end":1069,"column_start":5,"column_end":24}},{"value":"prost(enumeration = \"field::Kind\", tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503486,"byte_end":7503530,"line_start":1070,"line_end":1070,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503645,"byte_end":7503656,"line_start":1074,"line_end":1074,"column_start":9,"column_end":20},"name":"cardinality","qualname":"::Field::cardinality","value":"i32","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field cardinality.\n","sig":null,"attributes":[{"value":"/ The field cardinality.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503554,"byte_end":7503580,"line_start":1072,"line_end":1072,"column_start":5,"column_end":31}},{"value":"prost(enumeration = \"field::Cardinality\", tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503585,"byte_end":7503636,"line_start":1073,"line_end":1073,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503726,"byte_end":7503732,"line_start":1077,"line_end":1077,"column_start":9,"column_end":15},"name":"number","qualname":"::Field::number","value":"i32","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field number.\n","sig":null,"attributes":[{"value":"/ The field number.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503667,"byte_end":7503688,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"prost(int32, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503693,"byte_end":7503717,"line_start":1076,"line_end":1076,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503801,"byte_end":7503805,"line_start":1080,"line_end":1080,"column_start":9,"column_end":13},"name":"name","qualname":"::Field::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field name.\n","sig":null,"attributes":[{"value":"/ The field name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503743,"byte_end":7503762,"line_start":1078,"line_end":1078,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503767,"byte_end":7503792,"line_start":1079,"line_end":1079,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504027,"byte_end":7504035,"line_start":1084,"line_end":1084,"column_start":9,"column_end":17},"name":"type_url","qualname":"::Field::type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field type URL, without the scheme, for message or enumeration\n types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.\n","sig":null,"attributes":[{"value":"/ The field type URL, without the scheme, for message or enumeration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503843,"byte_end":7503913,"line_start":1081,"line_end":1081,"column_start":5,"column_end":75}},{"value":"/ types. Example: `\"type.googleapis.com/google.protobuf.Timestamp\"`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503918,"byte_end":7503988,"line_start":1082,"line_end":1082,"column_start":5,"column_end":75}},{"value":"prost(string, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503993,"byte_end":7504018,"line_start":1083,"line_end":1083,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504270,"byte_end":7504281,"line_start":1088,"line_end":1088,"column_start":9,"column_end":20},"name":"oneof_index","qualname":"::Field::oneof_index","value":"i32","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The index of the field type in `Type.oneofs`, for message or enumeration\n types. The first type has index 1; zero means the type is not in the list.\n","sig":null,"attributes":[{"value":"/ The index of the field type in `Type.oneofs`, for message or enumeration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504073,"byte_end":7504149,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ types. The first type has index 1; zero means the type is not in the list.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504154,"byte_end":7504232,"line_start":1086,"line_end":1086,"column_start":5,"column_end":83}},{"value":"prost(int32, tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504237,"byte_end":7504261,"line_start":1087,"line_end":1087,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504387,"byte_end":7504393,"line_start":1091,"line_end":1091,"column_start":9,"column_end":15},"name":"packed","qualname":"::Field::packed","value":"bool","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" Whether to use alternative packed wire representation.\n","sig":null,"attributes":[{"value":"/ Whether to use alternative packed wire representation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504292,"byte_end":7504350,"line_start":1089,"line_end":1089,"column_start":5,"column_end":63}},{"value":"prost(bool, tag = \"8\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504355,"byte_end":7504378,"line_start":1090,"line_end":1090,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504487,"byte_end":7504494,"line_start":1094,"line_end":1094,"column_start":9,"column_end":16},"name":"options","qualname":"::Field::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The protocol buffer options.\n","sig":null,"attributes":[{"value":"/ The protocol buffer options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504405,"byte_end":7504437,"line_start":1092,"line_end":1092,"column_start":5,"column_end":37}},{"value":"prost(message, repeated, tag = \"9\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504442,"byte_end":7504478,"line_start":1093,"line_end":1093,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504598,"byte_end":7504607,"line_start":1097,"line_end":1097,"column_start":9,"column_end":18},"name":"json_name","qualname":"::Field::json_name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The field JSON name.\n","sig":null,"attributes":[{"value":"/ The field JSON name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504534,"byte_end":7504558,"line_start":1095,"line_end":1095,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"10\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504563,"byte_end":7504589,"line_start":1096,"line_end":1096,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504761,"byte_end":7504774,"line_start":1100,"line_end":1100,"column_start":9,"column_end":22},"name":"default_value","qualname":"::Field::default_value","value":"prost::alloc::string::String","parent":{"krate":0,"index":2158},"children":[],"decl_id":null,"docs":" The string value of the default value of this field. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ The string value of the default value of this field. Proto2 syntax only.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504645,"byte_end":7504721,"line_start":1098,"line_end":1098,"column_start":5,"column_end":81}},{"value":"prost(string, tag = \"11\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504726,"byte_end":7504752,"line_start":1099,"line_end":1099,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503539,"byte_end":7503543,"line_start":1071,"line_end":1071,"column_start":9,"column_end":13},"name":"kind","qualname":"<Field>::kind","value":"pub fn kind(&Self) -> field::Kind","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `kind`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7503645,"byte_end":7503656,"line_start":1074,"line_end":1074,"column_start":9,"column_end":20},"name":"cardinality","qualname":"<Field>::cardinality","value":"pub fn cardinality(&Self) -> field::Cardinality","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `cardinality`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504864,"byte_end":7504869,"line_start":1103,"line_end":1103,"column_start":9,"column_end":14},"name":"field","qualname":"::field","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2230},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2337},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2349}],"decl_id":null,"docs":" Nested message and enum types in `Field`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `Field`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504810,"byte_end":7504855,"line_start":1102,"line_end":1102,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505070,"byte_end":7505081,"line_start":1109,"line_end":1109,"column_start":9,"column_end":20},"name":"TypeUnknown","qualname":"::field::Kind::TypeUnknown","value":"Kind::TypeUnknown","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type unknown.\n","sig":null,"attributes":[{"value":"/ Field type unknown.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505038,"byte_end":7505061,"line_start":1108,"line_end":1108,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505126,"byte_end":7505136,"line_start":1111,"line_end":1111,"column_start":9,"column_end":19},"name":"TypeDouble","qualname":"::field::Kind::TypeDouble","value":"Kind::TypeDouble","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type double.\n","sig":null,"attributes":[{"value":"/ Field type double.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505095,"byte_end":7505117,"line_start":1110,"line_end":1110,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505180,"byte_end":7505189,"line_start":1113,"line_end":1113,"column_start":9,"column_end":18},"name":"TypeFloat","qualname":"::field::Kind::TypeFloat","value":"Kind::TypeFloat","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type float.\n","sig":null,"attributes":[{"value":"/ Field type float.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505150,"byte_end":7505171,"line_start":1112,"line_end":1112,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505233,"byte_end":7505242,"line_start":1115,"line_end":1115,"column_start":9,"column_end":18},"name":"TypeInt64","qualname":"::field::Kind::TypeInt64","value":"Kind::TypeInt64","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type int64.\n","sig":null,"attributes":[{"value":"/ Field type int64.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505203,"byte_end":7505224,"line_start":1114,"line_end":1114,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505287,"byte_end":7505297,"line_start":1117,"line_end":1117,"column_start":9,"column_end":19},"name":"TypeUint64","qualname":"::field::Kind::TypeUint64","value":"Kind::TypeUint64","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type uint64.\n","sig":null,"attributes":[{"value":"/ Field type uint64.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505256,"byte_end":7505278,"line_start":1116,"line_end":1116,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2246},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505341,"byte_end":7505350,"line_start":1119,"line_end":1119,"column_start":9,"column_end":18},"name":"TypeInt32","qualname":"::field::Kind::TypeInt32","value":"Kind::TypeInt32","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type int32.\n","sig":null,"attributes":[{"value":"/ Field type int32.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505311,"byte_end":7505332,"line_start":1118,"line_end":1118,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505396,"byte_end":7505407,"line_start":1121,"line_end":1121,"column_start":9,"column_end":20},"name":"TypeFixed64","qualname":"::field::Kind::TypeFixed64","value":"Kind::TypeFixed64","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type fixed64.\n","sig":null,"attributes":[{"value":"/ Field type fixed64.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505364,"byte_end":7505387,"line_start":1120,"line_end":1120,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505453,"byte_end":7505464,"line_start":1123,"line_end":1123,"column_start":9,"column_end":20},"name":"TypeFixed32","qualname":"::field::Kind::TypeFixed32","value":"Kind::TypeFixed32","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type fixed32.\n","sig":null,"attributes":[{"value":"/ Field type fixed32.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505421,"byte_end":7505444,"line_start":1122,"line_end":1122,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505507,"byte_end":7505515,"line_start":1125,"line_end":1125,"column_start":9,"column_end":17},"name":"TypeBool","qualname":"::field::Kind::TypeBool","value":"Kind::TypeBool","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type bool.\n","sig":null,"attributes":[{"value":"/ Field type bool.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505478,"byte_end":7505498,"line_start":1124,"line_end":1124,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505560,"byte_end":7505570,"line_start":1127,"line_end":1127,"column_start":9,"column_end":19},"name":"TypeString","qualname":"::field::Kind::TypeString","value":"Kind::TypeString","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type string.\n","sig":null,"attributes":[{"value":"/ Field type string.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505529,"byte_end":7505551,"line_start":1126,"line_end":1126,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505650,"byte_end":7505659,"line_start":1129,"line_end":1129,"column_start":9,"column_end":18},"name":"TypeGroup","qualname":"::field::Kind::TypeGroup","value":"Kind::TypeGroup","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type group. Proto2 syntax only, and deprecated.\n","sig":null,"attributes":[{"value":"/ Field type group. Proto2 syntax only, and deprecated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505584,"byte_end":7505641,"line_start":1128,"line_end":1128,"column_start":9,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505706,"byte_end":7505717,"line_start":1131,"line_end":1131,"column_start":9,"column_end":20},"name":"TypeMessage","qualname":"::field::Kind::TypeMessage","value":"Kind::TypeMessage","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type message.\n","sig":null,"attributes":[{"value":"/ Field type message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505674,"byte_end":7505697,"line_start":1130,"line_end":1130,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505762,"byte_end":7505771,"line_start":1133,"line_end":1133,"column_start":9,"column_end":18},"name":"TypeBytes","qualname":"::field::Kind::TypeBytes","value":"Kind::TypeBytes","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type bytes.\n","sig":null,"attributes":[{"value":"/ Field type bytes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505732,"byte_end":7505753,"line_start":1132,"line_end":1132,"column_start":9,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505817,"byte_end":7505827,"line_start":1135,"line_end":1135,"column_start":9,"column_end":19},"name":"TypeUint32","qualname":"::field::Kind::TypeUint32","value":"Kind::TypeUint32","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type uint32.\n","sig":null,"attributes":[{"value":"/ Field type uint32.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505786,"byte_end":7505808,"line_start":1134,"line_end":1134,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505871,"byte_end":7505879,"line_start":1137,"line_end":1137,"column_start":9,"column_end":17},"name":"TypeEnum","qualname":"::field::Kind::TypeEnum","value":"Kind::TypeEnum","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type enum.\n","sig":null,"attributes":[{"value":"/ Field type enum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505842,"byte_end":7505862,"line_start":1136,"line_end":1136,"column_start":9,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505927,"byte_end":7505939,"line_start":1139,"line_end":1139,"column_start":9,"column_end":21},"name":"TypeSfixed32","qualname":"::field::Kind::TypeSfixed32","value":"Kind::TypeSfixed32","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type sfixed32.\n","sig":null,"attributes":[{"value":"/ Field type sfixed32.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505894,"byte_end":7505918,"line_start":1138,"line_end":1138,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505987,"byte_end":7505999,"line_start":1141,"line_end":1141,"column_start":9,"column_end":21},"name":"TypeSfixed64","qualname":"::field::Kind::TypeSfixed64","value":"Kind::TypeSfixed64","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type sfixed64.\n","sig":null,"attributes":[{"value":"/ Field type sfixed64.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505954,"byte_end":7505978,"line_start":1140,"line_end":1140,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506045,"byte_end":7506055,"line_start":1143,"line_end":1143,"column_start":9,"column_end":19},"name":"TypeSint32","qualname":"::field::Kind::TypeSint32","value":"Kind::TypeSint32","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type sint32.\n","sig":null,"attributes":[{"value":"/ Field type sint32.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506014,"byte_end":7506036,"line_start":1142,"line_end":1142,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506101,"byte_end":7506111,"line_start":1145,"line_end":1145,"column_start":9,"column_end":19},"name":"TypeSint64","qualname":"::field::Kind::TypeSint64","value":"Kind::TypeSint64","parent":{"krate":0,"index":2230},"children":[],"decl_id":null,"docs":" Field type sint64.\n","sig":null,"attributes":[{"value":"/ Field type sint64.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506070,"byte_end":7506092,"line_start":1144,"line_end":1144,"column_start":9,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7505023,"byte_end":7505027,"line_start":1107,"line_end":1107,"column_start":14,"column_end":18},"name":"Kind","qualname":"::field::Kind","value":"pub enum Kind {\n    TypeUnknown = ,\n    TypeDouble = ,\n    TypeFloat = ,\n    TypeInt64 = ,\n    TypeUint64 = ,\n    TypeInt32 = ,\n    TypeFixed64 = ,\n    TypeFixed32 = ,\n    TypeBool = ,\n    TypeString = ,\n    TypeGroup = ,\n    TypeMessage = ,\n    TypeBytes = ,\n    TypeUint32 = ,\n    TypeEnum = ,\n    TypeSfixed32 = ,\n    TypeSfixed64 = ,\n    TypeSint32 = ,\n    TypeSint64 = ,\n}","parent":null,"children":[{"krate":0,"index":2231},{"krate":0,"index":2234},{"krate":0,"index":2237},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2246},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2261},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2285}],"decl_id":null,"docs":" Basic field types.\n","sig":null,"attributes":[{"value":"/ Basic field types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504876,"byte_end":7504898,"line_start":1104,"line_end":1104,"column_start":5,"column_end":27}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7504997,"byte_end":7505009,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506379,"byte_end":7506386,"line_start":1152,"line_end":1152,"column_start":9,"column_end":16},"name":"Unknown","qualname":"::field::Cardinality::Unknown","value":"Cardinality::Unknown","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" For fields with unknown cardinality.\n","sig":null,"attributes":[{"value":"/ For fields with unknown cardinality.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506330,"byte_end":7506370,"line_start":1151,"line_end":1151,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506433,"byte_end":7506441,"line_start":1154,"line_end":1154,"column_start":9,"column_end":17},"name":"Optional","qualname":"::field::Cardinality::Optional","value":"Cardinality::Optional","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" For optional fields.\n","sig":null,"attributes":[{"value":"/ For optional fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506400,"byte_end":7506424,"line_start":1153,"line_end":1153,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506508,"byte_end":7506516,"line_start":1156,"line_end":1156,"column_start":9,"column_end":17},"name":"Required","qualname":"::field::Cardinality::Required","value":"Cardinality::Required","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" For required fields. Proto2 syntax only.\n","sig":null,"attributes":[{"value":"/ For required fields. Proto2 syntax only.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506455,"byte_end":7506499,"line_start":1155,"line_end":1155,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506563,"byte_end":7506571,"line_start":1158,"line_end":1158,"column_start":9,"column_end":17},"name":"Repeated","qualname":"::field::Cardinality::Repeated","value":"Cardinality::Repeated","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":" For repeated fields.\n","sig":null,"attributes":[{"value":"/ For repeated fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506530,"byte_end":7506554,"line_start":1157,"line_end":1157,"column_start":9,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506308,"byte_end":7506319,"line_start":1150,"line_end":1150,"column_start":14,"column_end":25},"name":"Cardinality","qualname":"::field::Cardinality","value":"pub enum Cardinality { Unknown = , Optional = , Required = , Repeated = , }","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323}],"decl_id":null,"docs":" Whether a field is optional, required, or repeated.\n","sig":null,"attributes":[{"value":"/ Whether a field is optional, required, or repeated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506128,"byte_end":7506183,"line_start":1147,"line_end":1147,"column_start":5,"column_end":60}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506282,"byte_end":7506294,"line_start":1149,"line_end":1149,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506668,"byte_end":7506672,"line_start":1163,"line_end":1163,"column_start":12,"column_end":16},"name":"Enum","qualname":"::Enum","value":"Enum { name, enumvalue, options, source_context, syntax }","parent":null,"children":[{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392}],"decl_id":null,"docs":" Enum type definition.\n","sig":null,"attributes":[{"value":"/ Enum type definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506585,"byte_end":7506610,"line_start":1161,"line_end":1161,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506737,"byte_end":7506741,"line_start":1166,"line_end":1166,"column_start":9,"column_end":13},"name":"name","qualname":"::Enum::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Enum type name.\n","sig":null,"attributes":[{"value":"/ Enum type name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506679,"byte_end":7506698,"line_start":1164,"line_end":1164,"column_start":5,"column_end":24}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506703,"byte_end":7506728,"line_start":1165,"line_end":1165,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2389},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506856,"byte_end":7506865,"line_start":1169,"line_end":1169,"column_start":9,"column_end":18},"name":"enumvalue","qualname":"::Enum::enumvalue","value":"prost::alloc::vec::Vec<EnumValue>","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Enum value definitions.\n","sig":null,"attributes":[{"value":"/ Enum value definitions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506779,"byte_end":7506806,"line_start":1167,"line_end":1167,"column_start":5,"column_end":32}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506811,"byte_end":7506847,"line_start":1168,"line_end":1168,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506986,"byte_end":7506993,"line_start":1172,"line_end":1172,"column_start":9,"column_end":16},"name":"options","qualname":"::Enum::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506908,"byte_end":7506936,"line_start":1170,"line_end":1170,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7506941,"byte_end":7506977,"line_start":1171,"line_end":1171,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2391},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507106,"byte_end":7507120,"line_start":1175,"line_end":1175,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Enum::source_context","value":"core::option::Option<SourceContext>","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" The source context.\n","sig":null,"attributes":[{"value":"/ The source context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507033,"byte_end":7507056,"line_start":1173,"line_end":1173,"column_start":5,"column_end":28}},{"value":"prost(message, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507061,"byte_end":7507097,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507240,"byte_end":7507246,"line_start":1178,"line_end":1178,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Enum::syntax","value":"i32","parent":{"krate":0,"index":2351},"children":[],"decl_id":null,"docs":" The source syntax.\n","sig":null,"attributes":[{"value":"/ The source syntax.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507165,"byte_end":7507187,"line_start":1176,"line_end":1176,"column_start":5,"column_end":27}},{"value":"prost(enumeration = \"Syntax\", tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507192,"byte_end":7507231,"line_start":1177,"line_end":1177,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507240,"byte_end":7507246,"line_start":1178,"line_end":1178,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Enum>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507339,"byte_end":7507348,"line_start":1182,"line_end":1182,"column_start":12,"column_end":21},"name":"EnumValue","qualname":"::EnumValue","value":"EnumValue { name, number, options }","parent":null,"children":[{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421}],"decl_id":null,"docs":" Enum value definition.\n","sig":null,"attributes":[{"value":"/ Enum value definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507255,"byte_end":7507281,"line_start":1180,"line_end":1180,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507414,"byte_end":7507418,"line_start":1185,"line_end":1185,"column_start":9,"column_end":13},"name":"name","qualname":"::EnumValue::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Enum value name.\n","sig":null,"attributes":[{"value":"/ Enum value name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507355,"byte_end":7507375,"line_start":1183,"line_end":1183,"column_start":5,"column_end":25}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507380,"byte_end":7507405,"line_start":1184,"line_end":1184,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507516,"byte_end":7507522,"line_start":1188,"line_end":1188,"column_start":9,"column_end":15},"name":"number","qualname":"::EnumValue::number","value":"i32","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Enum value number.\n","sig":null,"attributes":[{"value":"/ Enum value number.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507456,"byte_end":7507478,"line_start":1186,"line_end":1186,"column_start":5,"column_end":27}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507483,"byte_end":7507507,"line_start":1187,"line_end":1187,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507611,"byte_end":7507618,"line_start":1191,"line_end":1191,"column_start":9,"column_end":16},"name":"options","qualname":"::EnumValue::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Protocol buffer options.\n","sig":null,"attributes":[{"value":"/ Protocol buffer options.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507533,"byte_end":7507561,"line_start":1189,"line_end":1189,"column_start":5,"column_end":33}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507566,"byte_end":7507602,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507808,"byte_end":7507814,"line_start":1196,"line_end":1196,"column_start":12,"column_end":18},"name":"Option","qualname":"::Option","value":"Option { name, value }","parent":null,"children":[{"krate":0,"index":2446},{"krate":0,"index":2447}],"decl_id":null,"docs":" A protocol buffer option, which can be attached to a message, field,\n enumeration, etc.\n","sig":null,"attributes":[{"value":"/ A protocol buffer option, which can be attached to a message, field,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507656,"byte_end":7507728,"line_start":1193,"line_end":1193,"column_start":1,"column_end":73}},{"value":"/ enumeration, etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507729,"byte_end":7507750,"line_start":1194,"line_end":1194,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508120,"byte_end":7508124,"line_start":1202,"line_end":1202,"column_start":9,"column_end":13},"name":"name","qualname":"::Option::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2422},"children":[],"decl_id":null,"docs":" The option's name. For protobuf built-in options (options defined in\n descriptor.proto), this is the short name. For example, `\"map_entry\"`.\n For custom options, it should be the fully-qualified name. For example,\n `\"google.api.http\"`.\n","sig":null,"attributes":[{"value":"/ The option's name. For protobuf built-in options (options defined in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507821,"byte_end":7507893,"line_start":1197,"line_end":1197,"column_start":5,"column_end":77}},{"value":"/ descriptor.proto), this is the short name. For example, `\"map_entry\"`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507898,"byte_end":7507972,"line_start":1198,"line_end":1198,"column_start":5,"column_end":79}},{"value":"/ For custom options, it should be the fully-qualified name. For example,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7507977,"byte_end":7508052,"line_start":1199,"line_end":1199,"column_start":5,"column_end":80}},{"value":"/ `\"google.api.http\"`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508057,"byte_end":7508081,"line_start":1200,"line_end":1200,"column_start":5,"column_end":29}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508086,"byte_end":7508111,"line_start":1201,"line_end":1201,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508508,"byte_end":7508513,"line_start":1208,"line_end":1208,"column_start":9,"column_end":14},"name":"value","qualname":"::Option::value","value":"core::option::Option<Any>","parent":{"krate":0,"index":2422},"children":[],"decl_id":null,"docs":" The option's value packed in an Any message. If the value is a primitive,\n the corresponding wrapper type defined in google/protobuf/wrappers.proto\n should be used. If the value is an enum, it should be stored as an int32\n value using the google.protobuf.Int32Value type.\n","sig":null,"attributes":[{"value":"/ The option's value packed in an Any message. If the value is a primitive,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508162,"byte_end":7508239,"line_start":1203,"line_end":1203,"column_start":5,"column_end":82}},{"value":"/ the corresponding wrapper type defined in google/protobuf/wrappers.proto","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508244,"byte_end":7508320,"line_start":1204,"line_end":1204,"column_start":5,"column_end":81}},{"value":"/ should be used. If the value is an enum, it should be stored as an int32","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508325,"byte_end":7508401,"line_start":1205,"line_end":1205,"column_start":5,"column_end":81}},{"value":"/ value using the google.protobuf.Int32Value type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508406,"byte_end":7508458,"line_start":1206,"line_end":1206,"column_start":5,"column_end":57}},{"value":"prost(message, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508463,"byte_end":7508499,"line_start":1207,"line_end":1207,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508758,"byte_end":7508764,"line_start":1215,"line_end":1215,"column_start":5,"column_end":11},"name":"Proto2","qualname":"::Syntax::Proto2","value":"Syntax::Proto2","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Syntax `proto2`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto2`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508733,"byte_end":7508753,"line_start":1214,"line_end":1214,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508799,"byte_end":7508805,"line_start":1217,"line_end":1217,"column_start":5,"column_end":11},"name":"Proto3","qualname":"::Syntax::Proto3","value":"Syntax::Proto3","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Syntax `proto3`.\n","sig":null,"attributes":[{"value":"/ Syntax `proto3`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508774,"byte_end":7508794,"line_start":1216,"line_end":1216,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508720,"byte_end":7508726,"line_start":1213,"line_end":1213,"column_start":10,"column_end":16},"name":"Syntax","qualname":"::Syntax","value":"pub enum Syntax { Proto2 = , Proto3 = , }","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2452}],"decl_id":null,"docs":" The syntax in which a protocol buffer element is defined.\n","sig":null,"attributes":[{"value":"/ The syntax in which a protocol buffer element is defined.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508546,"byte_end":7508607,"line_start":1210,"line_end":1210,"column_start":1,"column_end":62}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508698,"byte_end":7508710,"line_start":1212,"line_end":1212,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509441,"byte_end":7509444,"line_start":1229,"line_end":1229,"column_start":12,"column_end":15},"name":"Api","qualname":"::Api","value":"Api { name, methods, options, version, source_context, mixins, syntax }","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527}],"decl_id":null,"docs":" Api is a light-weight descriptor for an API Interface.","sig":null,"attributes":[{"value":"/ Api is a light-weight descriptor for an API Interface.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508813,"byte_end":7508871,"line_start":1219,"line_end":1219,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508872,"byte_end":7508875,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ Interfaces are also described as \"protocol buffer services\" in some contexts,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508876,"byte_end":7508957,"line_start":1221,"line_end":1221,"column_start":1,"column_end":82}},{"value":"/ such as by the \"service\" keyword in a .proto file, but they are different","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7508958,"byte_end":7509035,"line_start":1222,"line_end":1222,"column_start":1,"column_end":78}},{"value":"/ from API Services, which represent a concrete implementation of an interface","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509036,"byte_end":7509116,"line_start":1223,"line_end":1223,"column_start":1,"column_end":81}},{"value":"/ as opposed to simply a description of methods and bindings. They are also","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509117,"byte_end":7509194,"line_start":1224,"line_end":1224,"column_start":1,"column_end":78}},{"value":"/ sometimes simply referred to as \"APIs\" in other contexts, such as the name of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509195,"byte_end":7509276,"line_start":1225,"line_end":1225,"column_start":1,"column_end":82}},{"value":"/ this message itself. See <https://cloud.google.com/apis/design/glossary> for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509277,"byte_end":7509357,"line_start":1226,"line_end":1226,"column_start":1,"column_end":81}},{"value":"/ detailed terminology.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509358,"byte_end":7509383,"line_start":1227,"line_end":1227,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509609,"byte_end":7509613,"line_start":1233,"line_end":1233,"column_start":9,"column_end":13},"name":"name","qualname":"::Api::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" The fully qualified name of this interface, including package name\n followed by the interface's simple name.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of this interface, including package name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509451,"byte_end":7509521,"line_start":1230,"line_end":1230,"column_start":5,"column_end":75}},{"value":"/ followed by the interface's simple name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509526,"byte_end":7509570,"line_start":1231,"line_end":1231,"column_start":5,"column_end":49}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509575,"byte_end":7509600,"line_start":1232,"line_end":1232,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509757,"byte_end":7509764,"line_start":1236,"line_end":1236,"column_start":9,"column_end":16},"name":"methods","qualname":"::Api::methods","value":"prost::alloc::vec::Vec<Method>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" The methods of this interface, in unspecified order.\n","sig":null,"attributes":[{"value":"/ The methods of this interface, in unspecified order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509651,"byte_end":7509707,"line_start":1234,"line_end":1234,"column_start":5,"column_end":61}},{"value":"prost(message, repeated, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509712,"byte_end":7509748,"line_start":1235,"line_end":1235,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509897,"byte_end":7509904,"line_start":1239,"line_end":1239,"column_start":9,"column_end":16},"name":"options","qualname":"::Api::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Any metadata attached to the interface.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the interface.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509804,"byte_end":7509847,"line_start":1237,"line_end":1237,"column_start":5,"column_end":48}},{"value":"prost(message, repeated, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509852,"byte_end":7509888,"line_start":1238,"line_end":1238,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511139,"byte_end":7511146,"line_start":1262,"line_end":1262,"column_start":9,"column_end":16},"name":"version","qualname":"::Api::version","value":"prost::alloc::string::String","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" A version string for this interface. If specified, must have the form\n `major-version.minor-version`, as in `1.10`. If the minor version is\n omitted, it defaults to zero. If the entire version field is empty, the\n major version is derived from the package name, as outlined below. If the\n field is not empty, the version in the package name will be verified to be\n consistent with what is provided here.","sig":null,"attributes":[{"value":"/ A version string for this interface. If specified, must have the form","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7509944,"byte_end":7510017,"line_start":1240,"line_end":1240,"column_start":5,"column_end":78}},{"value":"/ `major-version.minor-version`, as in `1.10`. If the minor version is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510022,"byte_end":7510094,"line_start":1241,"line_end":1241,"column_start":5,"column_end":77}},{"value":"/ omitted, it defaults to zero. If the entire version field is empty, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510099,"byte_end":7510174,"line_start":1242,"line_end":1242,"column_start":5,"column_end":80}},{"value":"/ major version is derived from the package name, as outlined below. If the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510179,"byte_end":7510256,"line_start":1243,"line_end":1243,"column_start":5,"column_end":82}},{"value":"/ field is not empty, the version in the package name will be verified to be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510261,"byte_end":7510339,"line_start":1244,"line_end":1244,"column_start":5,"column_end":83}},{"value":"/ consistent with what is provided here.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510344,"byte_end":7510386,"line_start":1245,"line_end":1245,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510391,"byte_end":7510394,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ The versioning schema uses [semantic","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510399,"byte_end":7510439,"line_start":1247,"line_end":1247,"column_start":5,"column_end":45}},{"value":"/ versioning](<http://semver.org>) where the major version number","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510444,"byte_end":7510511,"line_start":1248,"line_end":1248,"column_start":5,"column_end":72}},{"value":"/ indicates a breaking change and the minor version an additive,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510516,"byte_end":7510582,"line_start":1249,"line_end":1249,"column_start":5,"column_end":71}},{"value":"/ non-breaking change. Both version numbers are signals to users","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510587,"byte_end":7510653,"line_start":1250,"line_end":1250,"column_start":5,"column_end":71}},{"value":"/ what to expect from different versions, and should be carefully","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510658,"byte_end":7510725,"line_start":1251,"line_end":1251,"column_start":5,"column_end":72}},{"value":"/ chosen based on the product plan.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510730,"byte_end":7510767,"line_start":1252,"line_end":1252,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510772,"byte_end":7510775,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ The major version is also reflected in the package name of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510780,"byte_end":7510846,"line_start":1254,"line_end":1254,"column_start":5,"column_end":71}},{"value":"/ interface, which must end in `v<major-version>`, as in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510851,"byte_end":7510909,"line_start":1255,"line_end":1255,"column_start":5,"column_end":63}},{"value":"/ `google.feature.v1`. For major versions 0 and 1, the suffix can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510914,"byte_end":7510981,"line_start":1256,"line_end":1256,"column_start":5,"column_end":72}},{"value":"/ be omitted. Zero major versions must only be used for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7510986,"byte_end":7511043,"line_start":1257,"line_end":1257,"column_start":5,"column_end":62}},{"value":"/ experimental, non-GA interfaces.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511048,"byte_end":7511084,"line_start":1258,"line_end":1258,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511089,"byte_end":7511092,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511097,"byte_end":7511100,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511105,"byte_end":7511130,"line_start":1261,"line_end":1261,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511321,"byte_end":7511335,"line_start":1266,"line_end":1266,"column_start":9,"column_end":23},"name":"source_context","qualname":"::Api::source_context","value":"core::option::Option<SourceContext>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Source context for the protocol buffer service represented by this\n message.\n","sig":null,"attributes":[{"value":"/ Source context for the protocol buffer service represented by this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511184,"byte_end":7511254,"line_start":1263,"line_end":1263,"column_start":5,"column_end":75}},{"value":"/ message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511259,"byte_end":7511271,"line_start":1264,"line_end":1264,"column_start":5,"column_end":17}},{"value":"prost(message, optional, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511276,"byte_end":7511312,"line_start":1265,"line_end":1265,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511471,"byte_end":7511477,"line_start":1269,"line_end":1269,"column_start":9,"column_end":15},"name":"mixins","qualname":"::Api::mixins","value":"prost::alloc::vec::Vec<Mixin>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Included interfaces. See \\[Mixin][\\].\n","sig":null,"attributes":[{"value":"/ Included interfaces. See \\[Mixin][\\].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511380,"byte_end":7511421,"line_start":1267,"line_end":1267,"column_start":5,"column_end":46}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511426,"byte_end":7511462,"line_start":1268,"line_end":1268,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511606,"byte_end":7511612,"line_start":1272,"line_end":1272,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Api::syntax","value":"i32","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" The source syntax of the service.\n","sig":null,"attributes":[{"value":"/ The source syntax of the service.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511516,"byte_end":7511553,"line_start":1270,"line_end":1270,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511558,"byte_end":7511597,"line_start":1271,"line_end":1271,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511606,"byte_end":7511612,"line_start":1272,"line_end":1272,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Api>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511730,"byte_end":7511736,"line_start":1276,"line_end":1276,"column_start":12,"column_end":18},"name":"Method","qualname":"::Method","value":"Method { name, request_type_url, request_streaming, response_type_url, response_streaming, options, syntax }","parent":null,"children":[{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580}],"decl_id":null,"docs":" Method represents a method of an API interface.\n","sig":null,"attributes":[{"value":"/ Method represents a method of an API interface.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511621,"byte_end":7511672,"line_start":1274,"line_end":1274,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511817,"byte_end":7511821,"line_start":1279,"line_end":1279,"column_start":9,"column_end":13},"name":"name","qualname":"::Method::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" The simple name of this method.\n","sig":null,"attributes":[{"value":"/ The simple name of this method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511743,"byte_end":7511778,"line_start":1277,"line_end":1277,"column_start":5,"column_end":40}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511783,"byte_end":7511808,"line_start":1278,"line_end":1278,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511934,"byte_end":7511950,"line_start":1282,"line_end":1282,"column_start":9,"column_end":25},"name":"request_type_url","qualname":"::Method::request_type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" A URL of the input message type.\n","sig":null,"attributes":[{"value":"/ A URL of the input message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511859,"byte_end":7511895,"line_start":1280,"line_end":1280,"column_start":5,"column_end":41}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511900,"byte_end":7511925,"line_start":1281,"line_end":1281,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2576},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512062,"byte_end":7512079,"line_start":1285,"line_end":1285,"column_start":9,"column_end":26},"name":"request_streaming","qualname":"::Method::request_streaming","value":"bool","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" If true, the request is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the request is streamed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7511988,"byte_end":7512025,"line_start":1283,"line_end":1283,"column_start":5,"column_end":42}},{"value":"prost(bool, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512030,"byte_end":7512053,"line_start":1284,"line_end":1284,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512169,"byte_end":7512186,"line_start":1288,"line_end":1288,"column_start":9,"column_end":26},"name":"response_type_url","qualname":"::Method::response_type_url","value":"prost::alloc::string::String","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" The URL of the output message type.\n","sig":null,"attributes":[{"value":"/ The URL of the output message type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512091,"byte_end":7512130,"line_start":1286,"line_end":1286,"column_start":5,"column_end":44}},{"value":"prost(string, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512135,"byte_end":7512160,"line_start":1287,"line_end":1287,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512299,"byte_end":7512317,"line_start":1291,"line_end":1291,"column_start":9,"column_end":27},"name":"response_streaming","qualname":"::Method::response_streaming","value":"bool","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" If true, the response is streamed.\n","sig":null,"attributes":[{"value":"/ If true, the response is streamed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512224,"byte_end":7512262,"line_start":1289,"line_end":1289,"column_start":5,"column_end":43}},{"value":"prost(bool, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512267,"byte_end":7512290,"line_start":1290,"line_end":1290,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512419,"byte_end":7512426,"line_start":1294,"line_end":1294,"column_start":9,"column_end":16},"name":"options","qualname":"::Method::options","value":"prost::alloc::vec::Vec<Option>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" Any metadata attached to the method.\n","sig":null,"attributes":[{"value":"/ Any metadata attached to the method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512329,"byte_end":7512369,"line_start":1292,"line_end":1292,"column_start":5,"column_end":45}},{"value":"prost(message, repeated, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512374,"byte_end":7512410,"line_start":1293,"line_end":1293,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512556,"byte_end":7512562,"line_start":1297,"line_end":1297,"column_start":9,"column_end":15},"name":"syntax","qualname":"::Method::syntax","value":"i32","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":" The source syntax of this method.\n","sig":null,"attributes":[{"value":"/ The source syntax of this method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512466,"byte_end":7512503,"line_start":1295,"line_end":1295,"column_start":5,"column_end":42}},{"value":"prost(enumeration = \"Syntax\", tag = \"7\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512508,"byte_end":7512547,"line_start":1296,"line_end":1296,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512556,"byte_end":7512562,"line_start":1297,"line_end":1297,"column_start":9,"column_end":15},"name":"syntax","qualname":"<Method>::syntax","value":"pub fn syntax(&Self) -> Syntax","parent":null,"children":[],"decl_id":null,"docs":"Returns the enum value of `syntax`, or the default if the field is set to an invalid enum value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515355,"byte_end":7515360,"line_start":1378,"line_end":1378,"column_start":12,"column_end":17},"name":"Mixin","qualname":"::Mixin","value":"Mixin { name, root }","parent":null,"children":[{"krate":0,"index":2606},{"krate":0,"index":2607}],"decl_id":null,"docs":" Declares an API Interface to be included in this interface. The including\n interface must redeclare all the methods from the included interface, but\n documentation and options are inherited as follows:","sig":null,"attributes":[{"value":"/ Declares an API Interface to be included in this interface. The including","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512571,"byte_end":7512648,"line_start":1299,"line_end":1299,"column_start":1,"column_end":78}},{"value":"/ interface must redeclare all the methods from the included interface, but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512649,"byte_end":7512726,"line_start":1300,"line_end":1300,"column_start":1,"column_end":78}},{"value":"/ documentation and options are inherited as follows:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512727,"byte_end":7512782,"line_start":1301,"line_end":1301,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512783,"byte_end":7512786,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ - If after comment and whitespace stripping, the documentation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512787,"byte_end":7512853,"line_start":1303,"line_end":1303,"column_start":1,"column_end":67}},{"value":"/   string of the redeclared method is empty, it will be inherited","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512854,"byte_end":7512922,"line_start":1304,"line_end":1304,"column_start":1,"column_end":69}},{"value":"/   from the original method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512923,"byte_end":7512954,"line_start":1305,"line_end":1305,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512955,"byte_end":7512958,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ - Each annotation belonging to the service config (http,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7512959,"byte_end":7513019,"line_start":1307,"line_end":1307,"column_start":1,"column_end":61}},{"value":"/   visibility) which is not set in the redeclared method will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513020,"byte_end":7513087,"line_start":1308,"line_end":1308,"column_start":1,"column_end":68}},{"value":"/   inherited.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513088,"byte_end":7513104,"line_start":1309,"line_end":1309,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513105,"byte_end":7513108,"line_start":1310,"line_end":1310,"column_start":1,"column_end":4}},{"value":"/ - If an http annotation is inherited, the path pattern will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513109,"byte_end":7513175,"line_start":1311,"line_end":1311,"column_start":1,"column_end":67}},{"value":"/   modified as follows. Any version prefix will be replaced by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513176,"byte_end":7513245,"line_start":1312,"line_end":1312,"column_start":1,"column_end":70}},{"value":"/   version of the including interface plus the \\[root][\\] path if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513246,"byte_end":7513314,"line_start":1313,"line_end":1313,"column_start":1,"column_end":69}},{"value":"/   specified.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513315,"byte_end":7513331,"line_start":1314,"line_end":1314,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513332,"byte_end":7513335,"line_start":1315,"line_end":1315,"column_start":1,"column_end":4}},{"value":"/ Example of a simple mixin:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513336,"byte_end":7513366,"line_start":1316,"line_end":1316,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513367,"byte_end":7513370,"line_start":1317,"line_end":1317,"column_start":1,"column_end":4}},{"value":"/     package google.acl.v1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513371,"byte_end":7513401,"line_start":1318,"line_end":1318,"column_start":1,"column_end":31}},{"value":"/     service AccessControl {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513402,"byte_end":7513433,"line_start":1319,"line_end":1319,"column_start":1,"column_end":32}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513434,"byte_end":7513477,"line_start":1320,"line_end":1320,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513478,"byte_end":7513529,"line_start":1321,"line_end":1321,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v1/{resource=**}:getAcl\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513530,"byte_end":7513600,"line_start":1322,"line_end":1322,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513601,"byte_end":7513612,"line_start":1323,"line_end":1323,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513613,"byte_end":7513622,"line_start":1324,"line_end":1324,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513623,"byte_end":7513626,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/     package google.storage.v2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513627,"byte_end":7513661,"line_start":1326,"line_end":1326,"column_start":1,"column_end":35}},{"value":"/     service Storage {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513662,"byte_end":7513687,"line_start":1327,"line_end":1327,"column_start":1,"column_end":26}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513688,"byte_end":7513738,"line_start":1328,"line_end":1328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513739,"byte_end":7513742,"line_start":1329,"line_end":1329,"column_start":1,"column_end":4}},{"value":"/       // Get a data record.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513743,"byte_end":7513774,"line_start":1330,"line_end":1330,"column_start":1,"column_end":32}},{"value":"/       rpc GetData(GetDataRequest) returns (Data) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513775,"byte_end":7513829,"line_start":1331,"line_end":1331,"column_start":1,"column_end":55}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513830,"byte_end":7513893,"line_start":1332,"line_end":1332,"column_start":1,"column_end":64}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513894,"byte_end":7513905,"line_start":1333,"line_end":1333,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513906,"byte_end":7513915,"line_start":1334,"line_end":1334,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513916,"byte_end":7513919,"line_start":1335,"line_end":1335,"column_start":1,"column_end":4}},{"value":"/ Example of a mixin configuration:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513920,"byte_end":7513957,"line_start":1336,"line_end":1336,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513958,"byte_end":7513961,"line_start":1337,"line_end":1337,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513962,"byte_end":7513975,"line_start":1338,"line_end":1338,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7513976,"byte_end":7514017,"line_start":1339,"line_end":1339,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514018,"byte_end":7514035,"line_start":1340,"line_end":1340,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514036,"byte_end":7514081,"line_start":1341,"line_end":1341,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514082,"byte_end":7514085,"line_start":1342,"line_end":1342,"column_start":1,"column_end":4}},{"value":"/ The mixin construct implies that all methods in `AccessControl` are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514086,"byte_end":7514157,"line_start":1343,"line_end":1343,"column_start":1,"column_end":72}},{"value":"/ also declared with same name and request/response types in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514158,"byte_end":7514220,"line_start":1344,"line_end":1344,"column_start":1,"column_end":63}},{"value":"/ `Storage`. A documentation generator or annotation processor will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514221,"byte_end":7514290,"line_start":1345,"line_end":1345,"column_start":1,"column_end":70}},{"value":"/ see the effective `Storage.GetAcl` method after inheriting","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514291,"byte_end":7514353,"line_start":1346,"line_end":1346,"column_start":1,"column_end":63}},{"value":"/ documentation and annotations as follows:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514354,"byte_end":7514399,"line_start":1347,"line_end":1347,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514400,"byte_end":7514403,"line_start":1348,"line_end":1348,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514404,"byte_end":7514429,"line_start":1349,"line_end":1349,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514430,"byte_end":7514473,"line_start":1350,"line_end":1350,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514474,"byte_end":7514525,"line_start":1351,"line_end":1351,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/{resource=**}:getAcl\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514526,"byte_end":7514596,"line_start":1352,"line_end":1352,"column_start":1,"column_end":71}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514597,"byte_end":7514608,"line_start":1353,"line_end":1353,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514609,"byte_end":7514622,"line_start":1354,"line_end":1354,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514623,"byte_end":7514632,"line_start":1355,"line_end":1355,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514633,"byte_end":7514636,"line_start":1356,"line_end":1356,"column_start":1,"column_end":4}},{"value":"/ Note how the version in the path pattern changed from `v1` to `v2`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514637,"byte_end":7514708,"line_start":1357,"line_end":1357,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514709,"byte_end":7514712,"line_start":1358,"line_end":1358,"column_start":1,"column_end":4}},{"value":"/ If the `root` field in the mixin is specified, it should be a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514713,"byte_end":7514778,"line_start":1359,"line_end":1359,"column_start":1,"column_end":66}},{"value":"/ relative path under which inherited HTTP paths are placed. Example:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514779,"byte_end":7514850,"line_start":1360,"line_end":1360,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514851,"byte_end":7514854,"line_start":1361,"line_end":1361,"column_start":1,"column_end":4}},{"value":"/     apis:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514855,"byte_end":7514868,"line_start":1362,"line_end":1362,"column_start":1,"column_end":14}},{"value":"/     - name: google.storage.v2.Storage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514869,"byte_end":7514910,"line_start":1363,"line_end":1363,"column_start":1,"column_end":42}},{"value":"/       mixins:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514911,"byte_end":7514928,"line_start":1364,"line_end":1364,"column_start":1,"column_end":18}},{"value":"/       - name: google.acl.v1.AccessControl","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514929,"byte_end":7514974,"line_start":1365,"line_end":1365,"column_start":1,"column_end":46}},{"value":"/         root: acls","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514975,"byte_end":7514997,"line_start":1366,"line_end":1366,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7514998,"byte_end":7515001,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ This implies the following inherited HTTP annotation:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515002,"byte_end":7515059,"line_start":1368,"line_end":1368,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515060,"byte_end":7515063,"line_start":1369,"line_end":1369,"column_start":1,"column_end":4}},{"value":"/     service Storage {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515064,"byte_end":7515089,"line_start":1370,"line_end":1370,"column_start":1,"column_end":26}},{"value":"/       // Get the underlying ACL object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515090,"byte_end":7515133,"line_start":1371,"line_end":1371,"column_start":1,"column_end":44}},{"value":"/       rpc GetAcl(GetAclRequest) returns (Acl) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515134,"byte_end":7515185,"line_start":1372,"line_end":1372,"column_start":1,"column_end":52}},{"value":"/         option (google.api.http).get = \"/v2/acls/{resource=**}:getAcl\";","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515186,"byte_end":7515261,"line_start":1373,"line_end":1373,"column_start":1,"column_end":76}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515262,"byte_end":7515273,"line_start":1374,"line_end":1374,"column_start":1,"column_end":12}},{"value":"/       ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515274,"byte_end":7515287,"line_start":1375,"line_end":1375,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515288,"byte_end":7515297,"line_start":1376,"line_end":1376,"column_start":1,"column_end":10}}]},{"kind":"Field","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515470,"byte_end":7515474,"line_start":1381,"line_end":1381,"column_start":9,"column_end":13},"name":"name","qualname":"::Mixin::name","value":"prost::alloc::string::String","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" The fully qualified name of the interface which is included.\n","sig":null,"attributes":[{"value":"/ The fully qualified name of the interface which is included.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515367,"byte_end":7515431,"line_start":1379,"line_end":1379,"column_start":5,"column_end":69}},{"value":"prost(string, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515436,"byte_end":7515461,"line_start":1380,"line_end":1380,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515637,"byte_end":7515641,"line_start":1385,"line_end":1385,"column_start":9,"column_end":13},"name":"root","qualname":"::Mixin::root","value":"prost::alloc::string::String","parent":{"krate":0,"index":2581},"children":[],"decl_id":null,"docs":" If non-empty specifies a path under which inherited HTTP paths\n are rooted.\n","sig":null,"attributes":[{"value":"/ If non-empty specifies a path under which inherited HTTP paths","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515512,"byte_end":7515578,"line_start":1382,"line_end":1382,"column_start":5,"column_end":71}},{"value":"/ are rooted.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515583,"byte_end":7515598,"line_start":1383,"line_end":1383,"column_start":5,"column_end":20}},{"value":"prost(string, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515603,"byte_end":7515628,"line_start":1384,"line_end":1384,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517979,"byte_end":7517987,"line_start":1448,"line_end":1448,"column_start":12,"column_end":20},"name":"Duration","qualname":"::Duration","value":"Duration { seconds, nanos }","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"decl_id":null,"docs":" A Duration represents a signed, fixed-length span of time represented\n as a count of seconds and fractions of seconds at nanosecond\n resolution. It is independent of any calendar and concepts like \"day\"\n or \"month\". It is related to Timestamp in that the difference between\n two Timestamp values is a Duration and it can be added or subtracted\n from a Timestamp. Range is approximately +-10,000 years.","sig":null,"attributes":[{"value":"/ A Duration represents a signed, fixed-length span of time represented","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515677,"byte_end":7515750,"line_start":1387,"line_end":1387,"column_start":1,"column_end":74}},{"value":"/ as a count of seconds and fractions of seconds at nanosecond","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515751,"byte_end":7515815,"line_start":1388,"line_end":1388,"column_start":1,"column_end":65}},{"value":"/ resolution. It is independent of any calendar and concepts like \"day\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515816,"byte_end":7515889,"line_start":1389,"line_end":1389,"column_start":1,"column_end":74}},{"value":"/ or \"month\". It is related to Timestamp in that the difference between","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515890,"byte_end":7515963,"line_start":1390,"line_end":1390,"column_start":1,"column_end":74}},{"value":"/ two Timestamp values is a Duration and it can be added or subtracted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7515964,"byte_end":7516036,"line_start":1391,"line_end":1391,"column_start":1,"column_end":73}},{"value":"/ from a Timestamp. Range is approximately +-10,000 years.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516037,"byte_end":7516097,"line_start":1392,"line_end":1392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516098,"byte_end":7516101,"line_start":1393,"line_end":1393,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516102,"byte_end":7516116,"line_start":1394,"line_end":1394,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516117,"byte_end":7516120,"line_start":1395,"line_end":1395,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Duration from two Timestamps in pseudo code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516121,"byte_end":7516188,"line_start":1396,"line_end":1396,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516189,"byte_end":7516192,"line_start":1397,"line_end":1397,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516193,"byte_end":7516223,"line_start":1398,"line_end":1398,"column_start":1,"column_end":31}},{"value":"/     Timestamp end = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516224,"byte_end":7516252,"line_start":1399,"line_end":1399,"column_start":1,"column_end":29}},{"value":"/     Duration duration = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516253,"byte_end":7516285,"line_start":1400,"line_end":1400,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516286,"byte_end":7516289,"line_start":1401,"line_end":1401,"column_start":1,"column_end":4}},{"value":"/     duration.seconds = end.seconds - start.seconds;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516290,"byte_end":7516345,"line_start":1402,"line_end":1402,"column_start":1,"column_end":56}},{"value":"/     duration.nanos = end.nanos - start.nanos;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516346,"byte_end":7516395,"line_start":1403,"line_end":1403,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516396,"byte_end":7516399,"line_start":1404,"line_end":1404,"column_start":1,"column_end":4}},{"value":"/     if (duration.seconds < 0 && duration.nanos > 0) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516400,"byte_end":7516457,"line_start":1405,"line_end":1405,"column_start":1,"column_end":58}},{"value":"/       duration.seconds += 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516458,"byte_end":7516490,"line_start":1406,"line_end":1406,"column_start":1,"column_end":33}},{"value":"/       duration.nanos -= 1000000000;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516491,"byte_end":7516530,"line_start":1407,"line_end":1407,"column_start":1,"column_end":40}},{"value":"/     } else if (duration.seconds > 0 && duration.nanos < 0) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516531,"byte_end":7516595,"line_start":1408,"line_end":1408,"column_start":1,"column_end":65}},{"value":"/       duration.seconds -= 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516596,"byte_end":7516628,"line_start":1409,"line_end":1409,"column_start":1,"column_end":33}},{"value":"/       duration.nanos += 1000000000;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516629,"byte_end":7516668,"line_start":1410,"line_end":1410,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516669,"byte_end":7516678,"line_start":1411,"line_end":1411,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516679,"byte_end":7516682,"line_start":1412,"line_end":1412,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from Timestamp + Duration in pseudo code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516683,"byte_end":7516757,"line_start":1413,"line_end":1413,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516758,"byte_end":7516761,"line_start":1414,"line_end":1414,"column_start":1,"column_end":4}},{"value":"/     Timestamp start = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516762,"byte_end":7516792,"line_start":1415,"line_end":1415,"column_start":1,"column_end":31}},{"value":"/     Duration duration = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516793,"byte_end":7516825,"line_start":1416,"line_end":1416,"column_start":1,"column_end":33}},{"value":"/     Timestamp end = ...;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516826,"byte_end":7516854,"line_start":1417,"line_end":1417,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516855,"byte_end":7516858,"line_start":1418,"line_end":1418,"column_start":1,"column_end":4}},{"value":"/     end.seconds = start.seconds + duration.seconds;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516859,"byte_end":7516914,"line_start":1419,"line_end":1419,"column_start":1,"column_end":56}},{"value":"/     end.nanos = start.nanos + duration.nanos;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516915,"byte_end":7516964,"line_start":1420,"line_end":1420,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516965,"byte_end":7516968,"line_start":1421,"line_end":1421,"column_start":1,"column_end":4}},{"value":"/     if (end.nanos < 0) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516969,"byte_end":7516997,"line_start":1422,"line_end":1422,"column_start":1,"column_end":29}},{"value":"/       end.seconds -= 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7516998,"byte_end":7517025,"line_start":1423,"line_end":1423,"column_start":1,"column_end":28}},{"value":"/       end.nanos += 1000000000;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517026,"byte_end":7517060,"line_start":1424,"line_end":1424,"column_start":1,"column_end":35}},{"value":"/     } else if (end.nanos >= 1000000000) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517061,"byte_end":7517106,"line_start":1425,"line_end":1425,"column_start":1,"column_end":46}},{"value":"/       end.seconds += 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517107,"byte_end":7517134,"line_start":1426,"line_end":1426,"column_start":1,"column_end":28}},{"value":"/       end.nanos -= 1000000000;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517135,"byte_end":7517169,"line_start":1427,"line_end":1427,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517170,"byte_end":7517179,"line_start":1428,"line_end":1428,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517180,"byte_end":7517183,"line_start":1429,"line_end":1429,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Duration from datetime.timedelta in Python.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517184,"byte_end":7517250,"line_start":1430,"line_end":1430,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517251,"byte_end":7517254,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/     td = datetime.timedelta(days=3, minutes=10)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517255,"byte_end":7517306,"line_start":1432,"line_end":1432,"column_start":1,"column_end":52}},{"value":"/     duration = Duration()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517307,"byte_end":7517336,"line_start":1433,"line_end":1433,"column_start":1,"column_end":30}},{"value":"/     duration.FromTimedelta(td)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517337,"byte_end":7517371,"line_start":1434,"line_end":1434,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517372,"byte_end":7517375,"line_start":1435,"line_end":1435,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517376,"byte_end":7517394,"line_start":1436,"line_end":1436,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517395,"byte_end":7517398,"line_start":1437,"line_end":1437,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Duration type is encoded as a string rather than an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517399,"byte_end":7517474,"line_start":1438,"line_end":1438,"column_start":1,"column_end":76}},{"value":"/ object, where the string ends in the suffix \"s\" (indicating seconds) and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517475,"byte_end":7517551,"line_start":1439,"line_end":1439,"column_start":1,"column_end":77}},{"value":"/ is preceded by the number of seconds, with nanoseconds expressed as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517552,"byte_end":7517623,"line_start":1440,"line_end":1440,"column_start":1,"column_end":72}},{"value":"/ fractional seconds. For example, 3 seconds with 0 nanoseconds should be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517624,"byte_end":7517699,"line_start":1441,"line_end":1441,"column_start":1,"column_end":76}},{"value":"/ encoded in JSON format as \"3s\", while 3 seconds and 1 nanosecond should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517700,"byte_end":7517775,"line_start":1442,"line_end":1442,"column_start":1,"column_end":76}},{"value":"/ be expressed in JSON format as \"3.000000001s\", and 3 seconds and 1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517776,"byte_end":7517846,"line_start":1443,"line_end":1443,"column_start":1,"column_end":71}},{"value":"/ microsecond should be expressed in JSON format as \"3.000001s\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517847,"byte_end":7517913,"line_start":1444,"line_end":1444,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517914,"byte_end":7517917,"line_start":1445,"line_end":1445,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517918,"byte_end":7517921,"line_start":1446,"line_end":1446,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518254,"byte_end":7518261,"line_start":1453,"line_end":1453,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Duration::seconds","value":"i64","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":" Signed seconds of the span of time. Must be from -315,576,000,000\n to +315,576,000,000 inclusive. Note: these bounds are computed from:\n 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years\n","sig":null,"attributes":[{"value":"/ Signed seconds of the span of time. Must be from -315,576,000,000","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7517994,"byte_end":7518063,"line_start":1449,"line_end":1449,"column_start":5,"column_end":74}},{"value":"/ to +315,576,000,000 inclusive. Note: these bounds are computed from:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518068,"byte_end":7518140,"line_start":1450,"line_end":1450,"column_start":5,"column_end":77}},{"value":"/ 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518145,"byte_end":7518216,"line_start":1451,"line_end":1451,"column_start":5,"column_end":76}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518221,"byte_end":7518245,"line_start":1452,"line_end":1452,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518720,"byte_end":7518725,"line_start":1461,"line_end":1461,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Duration::nanos","value":"i32","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":" Signed fractions of a second at nanosecond resolution of the span\n of time. Durations less than one second are represented with a 0\n `seconds` field and a positive or negative `nanos` field. For durations\n of one second or more, a non-zero value for the `nanos` field must be\n of the same sign as the `seconds` field. Must be from -999,999,999\n to +999,999,999 inclusive.\n","sig":null,"attributes":[{"value":"/ Signed fractions of a second at nanosecond resolution of the span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518272,"byte_end":7518341,"line_start":1454,"line_end":1454,"column_start":5,"column_end":74}},{"value":"/ of time. Durations less than one second are represented with a 0","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518346,"byte_end":7518414,"line_start":1455,"line_end":1455,"column_start":5,"column_end":73}},{"value":"/ `seconds` field and a positive or negative `nanos` field. For durations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518419,"byte_end":7518494,"line_start":1456,"line_end":1456,"column_start":5,"column_end":80}},{"value":"/ of one second or more, a non-zero value for the `nanos` field must be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518499,"byte_end":7518572,"line_start":1457,"line_end":1457,"column_start":5,"column_end":78}},{"value":"/ of the same sign as the `seconds` field. Must be from -999,999,999","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518577,"byte_end":7518647,"line_start":1458,"line_end":1458,"column_start":5,"column_end":75}},{"value":"/ to +999,999,999 inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518652,"byte_end":7518682,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518687,"byte_end":7518711,"line_start":1460,"line_end":1460,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525059,"byte_end":7525068,"line_start":1663,"line_end":1663,"column_start":12,"column_end":21},"name":"FieldMask","qualname":"::FieldMask","value":"FieldMask { paths }","parent":null,"children":[{"krate":0,"index":2664}],"decl_id":null,"docs":" `FieldMask` represents a set of symbolic field paths, for example:","sig":null,"attributes":[{"value":"/ `FieldMask` represents a set of symbolic field paths, for example:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518734,"byte_end":7518804,"line_start":1463,"line_end":1463,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518805,"byte_end":7518808,"line_start":1464,"line_end":1464,"column_start":1,"column_end":4}},{"value":"/     paths: \"f.a\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518809,"byte_end":7518829,"line_start":1465,"line_end":1465,"column_start":1,"column_end":21}},{"value":"/     paths: \"f.b.d\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518830,"byte_end":7518852,"line_start":1466,"line_end":1466,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518853,"byte_end":7518856,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ Here `f` represents a field in some root message, `a` and `b`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518857,"byte_end":7518922,"line_start":1468,"line_end":1468,"column_start":1,"column_end":66}},{"value":"/ fields in the message found in `f`, and `d` a field found in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518923,"byte_end":7518991,"line_start":1469,"line_end":1469,"column_start":1,"column_end":69}},{"value":"/ message in `f.b`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7518992,"byte_end":7519013,"line_start":1470,"line_end":1470,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519014,"byte_end":7519017,"line_start":1471,"line_end":1471,"column_start":1,"column_end":4}},{"value":"/ Field masks are used to specify a subset of fields that should be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519018,"byte_end":7519087,"line_start":1472,"line_end":1472,"column_start":1,"column_end":70}},{"value":"/ returned by a get operation or modified by an update operation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519088,"byte_end":7519155,"line_start":1473,"line_end":1473,"column_start":1,"column_end":68}},{"value":"/ Field masks also have a custom JSON encoding (see below).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519156,"byte_end":7519217,"line_start":1474,"line_end":1474,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519218,"byte_end":7519221,"line_start":1475,"line_end":1475,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Projections","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519222,"byte_end":7519254,"line_start":1476,"line_end":1476,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519255,"byte_end":7519258,"line_start":1477,"line_end":1477,"column_start":1,"column_end":4}},{"value":"/ When used in the context of a projection, a response message or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519259,"byte_end":7519326,"line_start":1478,"line_end":1478,"column_start":1,"column_end":68}},{"value":"/ sub-message is filtered by the API to only contain those fields as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519327,"byte_end":7519397,"line_start":1479,"line_end":1479,"column_start":1,"column_end":71}},{"value":"/ specified in the mask. For example, if the mask in the previous","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519398,"byte_end":7519465,"line_start":1480,"line_end":1480,"column_start":1,"column_end":68}},{"value":"/ example is applied to a response message as follows:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519466,"byte_end":7519522,"line_start":1481,"line_end":1481,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519523,"byte_end":7519526,"line_start":1482,"line_end":1482,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519527,"byte_end":7519538,"line_start":1483,"line_end":1483,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519539,"byte_end":7519555,"line_start":1484,"line_end":1484,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519556,"byte_end":7519569,"line_start":1485,"line_end":1485,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519570,"byte_end":7519587,"line_start":1486,"line_end":1486,"column_start":1,"column_end":18}},{"value":"/         x : 2","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519588,"byte_end":7519605,"line_start":1487,"line_end":1487,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519606,"byte_end":7519617,"line_start":1488,"line_end":1488,"column_start":1,"column_end":12}},{"value":"/       y : 13","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519618,"byte_end":7519634,"line_start":1489,"line_end":1489,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519635,"byte_end":7519644,"line_start":1490,"line_end":1490,"column_start":1,"column_end":10}},{"value":"/     z: 8","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519645,"byte_end":7519657,"line_start":1491,"line_end":1491,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519658,"byte_end":7519661,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ The result will not contain specific values for fields x,y and z","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519662,"byte_end":7519730,"line_start":1493,"line_end":1493,"column_start":1,"column_end":69}},{"value":"/ (their value will be set to the default, and omitted in proto text","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519731,"byte_end":7519801,"line_start":1494,"line_end":1494,"column_start":1,"column_end":71}},{"value":"/ output):","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519802,"byte_end":7519814,"line_start":1495,"line_end":1495,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519815,"byte_end":7519818,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519819,"byte_end":7519822,"line_start":1497,"line_end":1497,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519823,"byte_end":7519834,"line_start":1498,"line_end":1498,"column_start":1,"column_end":12}},{"value":"/       a : 22","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519835,"byte_end":7519851,"line_start":1499,"line_end":1499,"column_start":1,"column_end":17}},{"value":"/       b {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519852,"byte_end":7519865,"line_start":1500,"line_end":1500,"column_start":1,"column_end":14}},{"value":"/         d : 1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519866,"byte_end":7519883,"line_start":1501,"line_end":1501,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519884,"byte_end":7519895,"line_start":1502,"line_end":1502,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519896,"byte_end":7519905,"line_start":1503,"line_end":1503,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519906,"byte_end":7519909,"line_start":1504,"line_end":1504,"column_start":1,"column_end":4}},{"value":"/ A repeated field is not allowed except at the last position of a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519910,"byte_end":7519978,"line_start":1505,"line_end":1505,"column_start":1,"column_end":69}},{"value":"/ paths string.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519979,"byte_end":7519996,"line_start":1506,"line_end":1506,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7519997,"byte_end":7520000,"line_start":1507,"line_end":1507,"column_start":1,"column_end":4}},{"value":"/ If a FieldMask object is not present in a get operation, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520001,"byte_end":7520065,"line_start":1508,"line_end":1508,"column_start":1,"column_end":65}},{"value":"/ operation applies to all fields (as if a FieldMask of all fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520066,"byte_end":7520134,"line_start":1509,"line_end":1509,"column_start":1,"column_end":69}},{"value":"/ had been specified).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520135,"byte_end":7520159,"line_start":1510,"line_end":1510,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520160,"byte_end":7520163,"line_start":1511,"line_end":1511,"column_start":1,"column_end":4}},{"value":"/ Note that a field mask does not necessarily apply to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520164,"byte_end":7520224,"line_start":1512,"line_end":1512,"column_start":1,"column_end":61}},{"value":"/ top-level response message. In case of a REST get operation, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520225,"byte_end":7520293,"line_start":1513,"line_end":1513,"column_start":1,"column_end":69}},{"value":"/ field mask applies directly to the response, but in case of a REST","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520294,"byte_end":7520364,"line_start":1514,"line_end":1514,"column_start":1,"column_end":71}},{"value":"/ list operation, the mask instead applies to each individual message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520365,"byte_end":7520436,"line_start":1515,"line_end":1515,"column_start":1,"column_end":72}},{"value":"/ in the returned resource list. In case of a REST custom method,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520437,"byte_end":7520504,"line_start":1516,"line_end":1516,"column_start":1,"column_end":68}},{"value":"/ other definitions may be used. Where the mask applies will be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520505,"byte_end":7520570,"line_start":1517,"line_end":1517,"column_start":1,"column_end":66}},{"value":"/ clearly documented together with its declaration in the API.  In","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520571,"byte_end":7520639,"line_start":1518,"line_end":1518,"column_start":1,"column_end":69}},{"value":"/ any case, the effect on the returned resource/resources is required","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520640,"byte_end":7520711,"line_start":1519,"line_end":1519,"column_start":1,"column_end":72}},{"value":"/ behavior for APIs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520712,"byte_end":7520734,"line_start":1520,"line_end":1520,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520735,"byte_end":7520738,"line_start":1521,"line_end":1521,"column_start":1,"column_end":4}},{"value":"/ # Field Masks in Update Operations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520739,"byte_end":7520777,"line_start":1522,"line_end":1522,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520778,"byte_end":7520781,"line_start":1523,"line_end":1523,"column_start":1,"column_end":4}},{"value":"/ A field mask in update operations specifies which fields of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520782,"byte_end":7520849,"line_start":1524,"line_end":1524,"column_start":1,"column_end":68}},{"value":"/ targeted resource are going to be updated. The API is required","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520850,"byte_end":7520916,"line_start":1525,"line_end":1525,"column_start":1,"column_end":67}},{"value":"/ to only change the values of the fields as specified in the mask","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520917,"byte_end":7520985,"line_start":1526,"line_end":1526,"column_start":1,"column_end":69}},{"value":"/ and leave the others untouched. If a resource is passed in to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7520986,"byte_end":7521051,"line_start":1527,"line_end":1527,"column_start":1,"column_end":66}},{"value":"/ describe the updated values, the API ignores the values of all","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521052,"byte_end":7521118,"line_start":1528,"line_end":1528,"column_start":1,"column_end":67}},{"value":"/ fields not covered by the mask.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521119,"byte_end":7521154,"line_start":1529,"line_end":1529,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521155,"byte_end":7521158,"line_start":1530,"line_end":1530,"column_start":1,"column_end":4}},{"value":"/ If a repeated field is specified for an update operation, new values will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521159,"byte_end":7521236,"line_start":1531,"line_end":1531,"column_start":1,"column_end":78}},{"value":"/ be appended to the existing repeated field in the target resource. Note that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521237,"byte_end":7521317,"line_start":1532,"line_end":1532,"column_start":1,"column_end":81}},{"value":"/ a repeated field is only allowed in the last position of a `paths` string.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521318,"byte_end":7521396,"line_start":1533,"line_end":1533,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521397,"byte_end":7521400,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/ If a sub-message is specified in the last position of the field mask for an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521401,"byte_end":7521480,"line_start":1535,"line_end":1535,"column_start":1,"column_end":80}},{"value":"/ update operation, then new value will be merged into the existing sub-message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521481,"byte_end":7521562,"line_start":1536,"line_end":1536,"column_start":1,"column_end":82}},{"value":"/ in the target resource.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521563,"byte_end":7521590,"line_start":1537,"line_end":1537,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521591,"byte_end":7521594,"line_start":1538,"line_end":1538,"column_start":1,"column_end":4}},{"value":"/ For example, given the target message:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521595,"byte_end":7521637,"line_start":1539,"line_end":1539,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521638,"byte_end":7521641,"line_start":1540,"line_end":1540,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521642,"byte_end":7521653,"line_start":1541,"line_end":1541,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521654,"byte_end":7521667,"line_start":1542,"line_end":1542,"column_start":1,"column_end":14}},{"value":"/         d: 1","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521668,"byte_end":7521684,"line_start":1543,"line_end":1543,"column_start":1,"column_end":17}},{"value":"/         x: 2","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521685,"byte_end":7521701,"line_start":1544,"line_end":1544,"column_start":1,"column_end":17}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521702,"byte_end":7521713,"line_start":1545,"line_end":1545,"column_start":1,"column_end":12}},{"value":"/       c: \\[1\\]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521714,"byte_end":7521732,"line_start":1546,"line_end":1546,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521733,"byte_end":7521742,"line_start":1547,"line_end":1547,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521743,"byte_end":7521746,"line_start":1548,"line_end":1548,"column_start":1,"column_end":4}},{"value":"/ And an update message:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521747,"byte_end":7521773,"line_start":1549,"line_end":1549,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521774,"byte_end":7521777,"line_start":1550,"line_end":1550,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521778,"byte_end":7521789,"line_start":1551,"line_end":1551,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521790,"byte_end":7521803,"line_start":1552,"line_end":1552,"column_start":1,"column_end":14}},{"value":"/         d: 10","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521804,"byte_end":7521821,"line_start":1553,"line_end":1553,"column_start":1,"column_end":18}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521822,"byte_end":7521833,"line_start":1554,"line_end":1554,"column_start":1,"column_end":12}},{"value":"/       c: \\[2\\]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521834,"byte_end":7521852,"line_start":1555,"line_end":1555,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521853,"byte_end":7521862,"line_start":1556,"line_end":1556,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521863,"byte_end":7521866,"line_start":1557,"line_end":1557,"column_start":1,"column_end":4}},{"value":"/ then if the field mask is:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521867,"byte_end":7521897,"line_start":1558,"line_end":1558,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521898,"byte_end":7521901,"line_start":1559,"line_end":1559,"column_start":1,"column_end":4}},{"value":"/  paths: [\"f.b\", \"f.c\"]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521902,"byte_end":7521928,"line_start":1560,"line_end":1560,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521929,"byte_end":7521932,"line_start":1561,"line_end":1561,"column_start":1,"column_end":4}},{"value":"/ then the result will be:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521933,"byte_end":7521961,"line_start":1562,"line_end":1562,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521962,"byte_end":7521965,"line_start":1563,"line_end":1563,"column_start":1,"column_end":4}},{"value":"/     f {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521966,"byte_end":7521977,"line_start":1564,"line_end":1564,"column_start":1,"column_end":12}},{"value":"/       b {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521978,"byte_end":7521991,"line_start":1565,"line_end":1565,"column_start":1,"column_end":14}},{"value":"/         d: 10","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7521992,"byte_end":7522009,"line_start":1566,"line_end":1566,"column_start":1,"column_end":18}},{"value":"/         x: 2","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522010,"byte_end":7522026,"line_start":1567,"line_end":1567,"column_start":1,"column_end":17}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522027,"byte_end":7522038,"line_start":1568,"line_end":1568,"column_start":1,"column_end":12}},{"value":"/       c: [1, 2]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522039,"byte_end":7522058,"line_start":1569,"line_end":1569,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522059,"byte_end":7522068,"line_start":1570,"line_end":1570,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522069,"byte_end":7522072,"line_start":1571,"line_end":1571,"column_start":1,"column_end":4}},{"value":"/ An implementation may provide options to override this default behavior for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522073,"byte_end":7522152,"line_start":1572,"line_end":1572,"column_start":1,"column_end":80}},{"value":"/ repeated and message fields.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522153,"byte_end":7522185,"line_start":1573,"line_end":1573,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522186,"byte_end":7522189,"line_start":1574,"line_end":1574,"column_start":1,"column_end":4}},{"value":"/ In order to reset a field's value to the default, the field must","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522190,"byte_end":7522258,"line_start":1575,"line_end":1575,"column_start":1,"column_end":69}},{"value":"/ be in the mask and set to the default value in the provided resource.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522259,"byte_end":7522332,"line_start":1576,"line_end":1576,"column_start":1,"column_end":74}},{"value":"/ Hence, in order to reset all fields of a resource, provide a default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522333,"byte_end":7522405,"line_start":1577,"line_end":1577,"column_start":1,"column_end":73}},{"value":"/ instance of the resource and set all fields in the mask, or do","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522406,"byte_end":7522472,"line_start":1578,"line_end":1578,"column_start":1,"column_end":67}},{"value":"/ not provide a mask as described below.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522473,"byte_end":7522515,"line_start":1579,"line_end":1579,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522516,"byte_end":7522519,"line_start":1580,"line_end":1580,"column_start":1,"column_end":4}},{"value":"/ If a field mask is not present on update, the operation applies to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522520,"byte_end":7522590,"line_start":1581,"line_end":1581,"column_start":1,"column_end":71}},{"value":"/ all fields (as if a field mask of all fields has been specified).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522591,"byte_end":7522660,"line_start":1582,"line_end":1582,"column_start":1,"column_end":70}},{"value":"/ Note that in the presence of schema evolution, this may mean that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522661,"byte_end":7522730,"line_start":1583,"line_end":1583,"column_start":1,"column_end":70}},{"value":"/ fields the client does not know and has therefore not filled into","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522731,"byte_end":7522800,"line_start":1584,"line_end":1584,"column_start":1,"column_end":70}},{"value":"/ the request will be reset to their default. If this is unwanted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522801,"byte_end":7522868,"line_start":1585,"line_end":1585,"column_start":1,"column_end":68}},{"value":"/ behavior, a specific service may require a client to always specify","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522869,"byte_end":7522940,"line_start":1586,"line_end":1586,"column_start":1,"column_end":72}},{"value":"/ a field mask, producing an error if not.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522941,"byte_end":7522985,"line_start":1587,"line_end":1587,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522986,"byte_end":7522989,"line_start":1588,"line_end":1588,"column_start":1,"column_end":4}},{"value":"/ As with get operations, the location of the resource which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7522990,"byte_end":7523052,"line_start":1589,"line_end":1589,"column_start":1,"column_end":63}},{"value":"/ describes the updated values in the request message depends on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523053,"byte_end":7523123,"line_start":1590,"line_end":1590,"column_start":1,"column_end":71}},{"value":"/ operation kind. In any case, the effect of the field mask is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523124,"byte_end":7523188,"line_start":1591,"line_end":1591,"column_start":1,"column_end":65}},{"value":"/ required to be honored by the API.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523189,"byte_end":7523227,"line_start":1592,"line_end":1592,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523228,"byte_end":7523231,"line_start":1593,"line_end":1593,"column_start":1,"column_end":4}},{"value":"/ ## Considerations for HTTP REST","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523232,"byte_end":7523267,"line_start":1594,"line_end":1594,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523268,"byte_end":7523271,"line_start":1595,"line_end":1595,"column_start":1,"column_end":4}},{"value":"/ The HTTP kind of an update operation which uses a field mask must","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523272,"byte_end":7523341,"line_start":1596,"line_end":1596,"column_start":1,"column_end":70}},{"value":"/ be set to PATCH instead of PUT in order to satisfy HTTP semantics","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523342,"byte_end":7523411,"line_start":1597,"line_end":1597,"column_start":1,"column_end":70}},{"value":"/ (PUT must only be used for full updates).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523412,"byte_end":7523457,"line_start":1598,"line_end":1598,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523458,"byte_end":7523461,"line_start":1599,"line_end":1599,"column_start":1,"column_end":4}},{"value":"/ # JSON Encoding of Field Masks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523462,"byte_end":7523496,"line_start":1600,"line_end":1600,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523497,"byte_end":7523500,"line_start":1601,"line_end":1601,"column_start":1,"column_end":4}},{"value":"/ In JSON, a field mask is encoded as a single string where paths are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523501,"byte_end":7523572,"line_start":1602,"line_end":1602,"column_start":1,"column_end":72}},{"value":"/ separated by a comma. Fields name in each path are converted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523573,"byte_end":7523637,"line_start":1603,"line_end":1603,"column_start":1,"column_end":65}},{"value":"/ to/from lower-camel naming conventions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523638,"byte_end":7523681,"line_start":1604,"line_end":1604,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523682,"byte_end":7523685,"line_start":1605,"line_end":1605,"column_start":1,"column_end":4}},{"value":"/ As an example, consider the following message declarations:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523686,"byte_end":7523749,"line_start":1606,"line_end":1606,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523750,"byte_end":7523753,"line_start":1607,"line_end":1607,"column_start":1,"column_end":4}},{"value":"/     message Profile {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523754,"byte_end":7523779,"line_start":1608,"line_end":1608,"column_start":1,"column_end":26}},{"value":"/       User user = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523780,"byte_end":7523804,"line_start":1609,"line_end":1609,"column_start":1,"column_end":25}},{"value":"/       Photo photo = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523805,"byte_end":7523831,"line_start":1610,"line_end":1610,"column_start":1,"column_end":27}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523832,"byte_end":7523841,"line_start":1611,"line_end":1611,"column_start":1,"column_end":10}},{"value":"/     message User {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523842,"byte_end":7523864,"line_start":1612,"line_end":1612,"column_start":1,"column_end":23}},{"value":"/       string display_name = 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523865,"byte_end":7523899,"line_start":1613,"line_end":1613,"column_start":1,"column_end":35}},{"value":"/       string address = 2;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523900,"byte_end":7523929,"line_start":1614,"line_end":1614,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523930,"byte_end":7523939,"line_start":1615,"line_end":1615,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523940,"byte_end":7523943,"line_start":1616,"line_end":1616,"column_start":1,"column_end":4}},{"value":"/ In proto a field mask for `Profile` may look as such:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7523944,"byte_end":7524001,"line_start":1617,"line_end":1617,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524002,"byte_end":7524005,"line_start":1618,"line_end":1618,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524006,"byte_end":7524020,"line_start":1619,"line_end":1619,"column_start":1,"column_end":15}},{"value":"/       paths: \"user.display_name\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524021,"byte_end":7524057,"line_start":1620,"line_end":1620,"column_start":1,"column_end":37}},{"value":"/       paths: \"photo\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524058,"byte_end":7524082,"line_start":1621,"line_end":1621,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524083,"byte_end":7524092,"line_start":1622,"line_end":1622,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524093,"byte_end":7524096,"line_start":1623,"line_end":1623,"column_start":1,"column_end":4}},{"value":"/ In JSON, the same mask is represented as below:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524097,"byte_end":7524148,"line_start":1624,"line_end":1624,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524149,"byte_end":7524152,"line_start":1625,"line_end":1625,"column_start":1,"column_end":4}},{"value":"/     {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524153,"byte_end":7524162,"line_start":1626,"line_end":1626,"column_start":1,"column_end":10}},{"value":"/       mask: \"user.displayName,photo\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524163,"byte_end":7524203,"line_start":1627,"line_end":1627,"column_start":1,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524204,"byte_end":7524213,"line_start":1628,"line_end":1628,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524214,"byte_end":7524217,"line_start":1629,"line_end":1629,"column_start":1,"column_end":4}},{"value":"/ # Field Masks and Oneof Fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524218,"byte_end":7524252,"line_start":1630,"line_end":1630,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524253,"byte_end":7524256,"line_start":1631,"line_end":1631,"column_start":1,"column_end":4}},{"value":"/ Field masks treat fields in oneofs just as regular fields. Consider the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524257,"byte_end":7524332,"line_start":1632,"line_end":1632,"column_start":1,"column_end":76}},{"value":"/ following message:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524333,"byte_end":7524355,"line_start":1633,"line_end":1633,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524356,"byte_end":7524359,"line_start":1634,"line_end":1634,"column_start":1,"column_end":4}},{"value":"/     message SampleMessage {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524360,"byte_end":7524391,"line_start":1635,"line_end":1635,"column_start":1,"column_end":32}},{"value":"/       oneof test_oneof {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524392,"byte_end":7524420,"line_start":1636,"line_end":1636,"column_start":1,"column_end":29}},{"value":"/         string name = 4;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524421,"byte_end":7524449,"line_start":1637,"line_end":1637,"column_start":1,"column_end":29}},{"value":"/         SubMessage sub_message = 9;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524450,"byte_end":7524489,"line_start":1638,"line_end":1638,"column_start":1,"column_end":40}},{"value":"/       }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524490,"byte_end":7524501,"line_start":1639,"line_end":1639,"column_start":1,"column_end":12}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524502,"byte_end":7524511,"line_start":1640,"line_end":1640,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524512,"byte_end":7524515,"line_start":1641,"line_end":1641,"column_start":1,"column_end":4}},{"value":"/ The field mask can be:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524516,"byte_end":7524542,"line_start":1642,"line_end":1642,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524543,"byte_end":7524546,"line_start":1643,"line_end":1643,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524547,"byte_end":7524561,"line_start":1644,"line_end":1644,"column_start":1,"column_end":15}},{"value":"/       paths: \"name\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524562,"byte_end":7524585,"line_start":1645,"line_end":1645,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524586,"byte_end":7524595,"line_start":1646,"line_end":1646,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524596,"byte_end":7524599,"line_start":1647,"line_end":1647,"column_start":1,"column_end":4}},{"value":"/ Or:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524600,"byte_end":7524607,"line_start":1648,"line_end":1648,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524608,"byte_end":7524611,"line_start":1649,"line_end":1649,"column_start":1,"column_end":4}},{"value":"/     mask {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524612,"byte_end":7524626,"line_start":1650,"line_end":1650,"column_start":1,"column_end":15}},{"value":"/       paths: \"sub_message\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524627,"byte_end":7524657,"line_start":1651,"line_end":1651,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524658,"byte_end":7524667,"line_start":1652,"line_end":1652,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524668,"byte_end":7524671,"line_start":1653,"line_end":1653,"column_start":1,"column_end":4}},{"value":"/ Note that oneof type names (\"test_oneof\" in this case) cannot be used in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524672,"byte_end":7524748,"line_start":1654,"line_end":1654,"column_start":1,"column_end":77}},{"value":"/ paths.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524749,"byte_end":7524759,"line_start":1655,"line_end":1655,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524760,"byte_end":7524763,"line_start":1656,"line_end":1656,"column_start":1,"column_end":4}},{"value":"/ ## Field Mask Verification","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524764,"byte_end":7524794,"line_start":1657,"line_end":1657,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524795,"byte_end":7524798,"line_start":1658,"line_end":1658,"column_start":1,"column_end":4}},{"value":"/ The implementation of any API method which has a FieldMask type field in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524799,"byte_end":7524879,"line_start":1659,"line_end":1659,"column_start":1,"column_end":81}},{"value":"/ request should verify the included field paths, and return an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524880,"byte_end":7524945,"line_start":1660,"line_end":1660,"column_start":1,"column_end":66}},{"value":"/ `INVALID_ARGUMENT` error if any path is unmappable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7524946,"byte_end":7525001,"line_start":1661,"line_end":1661,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525156,"byte_end":7525161,"line_start":1666,"line_end":1666,"column_start":9,"column_end":14},"name":"paths","qualname":"::FieldMask::paths","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":2635},"children":[],"decl_id":null,"docs":" The set of field mask paths.\n","sig":null,"attributes":[{"value":"/ The set of field mask paths.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525075,"byte_end":7525107,"line_start":1664,"line_end":1664,"column_start":5,"column_end":37}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525112,"byte_end":7525147,"line_start":1665,"line_end":1665,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525726,"byte_end":7525732,"line_start":1677,"line_end":1677,"column_start":12,"column_end":18},"name":"Struct","qualname":"::Struct","value":"Struct { fields }","parent":null,"children":[{"krate":0,"index":2698}],"decl_id":null,"docs":" `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.","sig":null,"attributes":[{"value":"/ `Struct` represents a structured data value, consisting of fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525223,"byte_end":7525292,"line_start":1668,"line_end":1668,"column_start":1,"column_end":70}},{"value":"/ which map to dynamically typed values. In some languages, `Struct`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525293,"byte_end":7525363,"line_start":1669,"line_end":1669,"column_start":1,"column_end":71}},{"value":"/ might be supported by a native representation. For example, in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525364,"byte_end":7525430,"line_start":1670,"line_end":1670,"column_start":1,"column_end":67}},{"value":"/ scripting languages like JS a struct is represented as an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525431,"byte_end":7525492,"line_start":1671,"line_end":1671,"column_start":1,"column_end":62}},{"value":"/ object. The details of that representation are described together","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525493,"byte_end":7525562,"line_start":1672,"line_end":1672,"column_start":1,"column_end":70}},{"value":"/ with the proto support for the language.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525563,"byte_end":7525607,"line_start":1673,"line_end":1673,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525608,"byte_end":7525611,"line_start":1674,"line_end":1674,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Struct` is JSON object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525612,"byte_end":7525668,"line_start":1675,"line_end":1675,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525845,"byte_end":7525851,"line_start":1680,"line_end":1680,"column_start":9,"column_end":15},"name":"fields","qualname":"::Struct::fields","value":"prost::alloc::collections::BTreeMap<prost::alloc::string::String, Value>","parent":{"krate":0,"index":2665},"children":[],"decl_id":null,"docs":" Unordered map of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Unordered map of dynamically typed values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525739,"byte_end":7525785,"line_start":1678,"line_end":1678,"column_start":5,"column_end":51}},{"value":"prost(btree_map = \"string, message\", tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525790,"byte_end":7525836,"line_start":1679,"line_end":1679,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526318,"byte_end":7526323,"line_start":1689,"line_end":1689,"column_start":12,"column_end":17},"name":"Value","qualname":"::Value","value":"Value { kind }","parent":null,"children":[{"krate":0,"index":2719}],"decl_id":null,"docs":" `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of that\n variants, absence of any variant indicates an error.","sig":null,"attributes":[{"value":"/ `Value` represents a dynamically typed value which can be either","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7525933,"byte_end":7526001,"line_start":1682,"line_end":1682,"column_start":1,"column_end":69}},{"value":"/ null, a number, a string, a boolean, a recursive struct value, or a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526002,"byte_end":7526073,"line_start":1683,"line_end":1683,"column_start":1,"column_end":72}},{"value":"/ list of values. A producer of value is expected to set one of that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526074,"byte_end":7526144,"line_start":1684,"line_end":1684,"column_start":1,"column_end":71}},{"value":"/ variants, absence of any variant indicates an error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526145,"byte_end":7526201,"line_start":1685,"line_end":1685,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526202,"byte_end":7526205,"line_start":1686,"line_end":1686,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `Value` is JSON value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526206,"byte_end":7526260,"line_start":1687,"line_end":1687,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526420,"byte_end":7526424,"line_start":1692,"line_end":1692,"column_start":9,"column_end":13},"name":"kind","qualname":"::Value::kind","value":"core::option::Option<value::Kind>","parent":{"krate":0,"index":2699},"children":[],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526330,"byte_end":7526352,"line_start":1690,"line_end":1690,"column_start":5,"column_end":27}},{"value":"prost(oneof = \"value::Kind\", tags = \"1, 2, 3, 4, 5, 6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526357,"byte_end":7526411,"line_start":1691,"line_end":1691,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526519,"byte_end":7526524,"line_start":1695,"line_end":1695,"column_start":9,"column_end":14},"name":"value","qualname":"::value","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2727},{"krate":0,"index":2739}],"decl_id":null,"docs":" Nested message and enum types in `Value`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `Value`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526465,"byte_end":7526510,"line_start":1694,"line_end":1694,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526725,"byte_end":7526734,"line_start":1701,"line_end":1701,"column_start":9,"column_end":18},"name":"NullValue","qualname":"::value::Kind::NullValue","value":"Kind::NullValue(i32)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a null value.\n","sig":null,"attributes":[{"value":"/ Represents a null value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526630,"byte_end":7526658,"line_start":1699,"line_end":1699,"column_start":9,"column_end":37}},{"value":"prost(enumeration = \"super::NullValue\", tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526667,"byte_end":7526716,"line_start":1700,"line_end":1700,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526822,"byte_end":7526833,"line_start":1704,"line_end":1704,"column_start":9,"column_end":20},"name":"NumberValue","qualname":"::value::Kind::NumberValue","value":"Kind::NumberValue(f64)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a double value.\n","sig":null,"attributes":[{"value":"/ Represents a double value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526749,"byte_end":7526779,"line_start":1702,"line_end":1702,"column_start":9,"column_end":39}},{"value":"prost(double, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526788,"byte_end":7526813,"line_start":1703,"line_end":1703,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526921,"byte_end":7526932,"line_start":1707,"line_end":1707,"column_start":9,"column_end":20},"name":"StringValue","qualname":"::value::Kind::StringValue","value":"Kind::StringValue(::prost::alloc::string::String)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a string value.\n","sig":null,"attributes":[{"value":"/ Represents a string value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526848,"byte_end":7526878,"line_start":1705,"line_end":1705,"column_start":9,"column_end":39}},{"value":"prost(string, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526887,"byte_end":7526912,"line_start":1706,"line_end":1706,"column_start":9,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527046,"byte_end":7527055,"line_start":1710,"line_end":1710,"column_start":9,"column_end":18},"name":"BoolValue","qualname":"::value::Kind::BoolValue","value":"Kind::BoolValue(bool)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a boolean value.\n","sig":null,"attributes":[{"value":"/ Represents a boolean value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526974,"byte_end":7527005,"line_start":1708,"line_end":1708,"column_start":9,"column_end":40}},{"value":"prost(bool, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527014,"byte_end":7527037,"line_start":1709,"line_end":1709,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527149,"byte_end":7527160,"line_start":1713,"line_end":1713,"column_start":9,"column_end":20},"name":"StructValue","qualname":"::value::Kind::StructValue","value":"Kind::StructValue(super::Struct)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a structured value.\n","sig":null,"attributes":[{"value":"/ Represents a structured value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527071,"byte_end":7527105,"line_start":1711,"line_end":1711,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"5\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527114,"byte_end":7527140,"line_start":1712,"line_end":1712,"column_start":9,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527263,"byte_end":7527272,"line_start":1716,"line_end":1716,"column_start":9,"column_end":18},"name":"ListValue","qualname":"::value::Kind::ListValue","value":"Kind::ListValue(super::ListValue)","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Represents a repeated `Value`.\n","sig":null,"attributes":[{"value":"/ Represents a repeated `Value`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527185,"byte_end":7527219,"line_start":1714,"line_end":1714,"column_start":9,"column_end":43}},{"value":"prost(message, tag = \"6\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527228,"byte_end":7527254,"line_start":1715,"line_end":1715,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526615,"byte_end":7526619,"line_start":1698,"line_end":1698,"column_start":14,"column_end":18},"name":"Kind","qualname":"::value::Kind","value":"pub enum Kind {\n    NullValue(i32),\n    NumberValue(f64),\n    StringValue(::prost::alloc::string::String),\n    BoolValue(bool),\n    StructValue(super::Struct),\n    ListValue(super::ListValue),\n}","parent":null,"children":[{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2769}],"decl_id":null,"docs":" The kind of value.\n","sig":null,"attributes":[{"value":"/ The kind of value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7526531,"byte_end":7526553,"line_start":1696,"line_end":1696,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527484,"byte_end":7527493,"line_start":1723,"line_end":1723,"column_start":12,"column_end":21},"name":"ListValue","qualname":"::ListValue","value":"ListValue { values }","parent":null,"children":[{"krate":0,"index":2792}],"decl_id":null,"docs":" `ListValue` is a wrapper around a repeated field of values.","sig":null,"attributes":[{"value":"/ `ListValue` is a wrapper around a repeated field of values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527300,"byte_end":7527363,"line_start":1719,"line_end":1719,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527364,"byte_end":7527367,"line_start":1720,"line_end":1720,"column_start":1,"column_end":4}},{"value":"/ The JSON representation for `ListValue` is JSON array.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527368,"byte_end":7527426,"line_start":1721,"line_end":1721,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527597,"byte_end":7527603,"line_start":1726,"line_end":1726,"column_start":9,"column_end":15},"name":"values","qualname":"::ListValue::values","value":"prost::alloc::vec::Vec<Value>","parent":{"krate":0,"index":2772},"children":[],"decl_id":null,"docs":" Repeated field of dynamically typed values.\n","sig":null,"attributes":[{"value":"/ Repeated field of dynamically typed values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527500,"byte_end":7527547,"line_start":1724,"line_end":1724,"column_start":5,"column_end":52}},{"value":"prost(message, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527552,"byte_end":7527588,"line_start":1725,"line_end":1725,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2794},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527956,"byte_end":7527965,"line_start":1736,"line_end":1736,"column_start":5,"column_end":14},"name":"NullValue","qualname":"::NullValue::NullValue","value":"NullValue::NullValue","parent":{"krate":0,"index":2793},"children":[],"decl_id":null,"docs":" Null value.\n","sig":null,"attributes":[{"value":"/ Null value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527936,"byte_end":7527951,"line_start":1735,"line_end":1735,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527920,"byte_end":7527929,"line_start":1734,"line_end":1734,"column_start":10,"column_end":19},"name":"NullValue","qualname":"::NullValue","value":"pub enum NullValue { NullValue = , }","parent":null,"children":[{"krate":0,"index":2794}],"decl_id":null,"docs":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.","sig":null,"attributes":[{"value":"/ `NullValue` is a singleton enumeration to represent the null value for the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527640,"byte_end":7527718,"line_start":1728,"line_end":1728,"column_start":1,"column_end":79}},{"value":"/ `Value` type union.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527719,"byte_end":7527742,"line_start":1729,"line_end":1729,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527743,"byte_end":7527746,"line_start":1730,"line_end":1730,"column_start":1,"column_end":4}},{"value":"/  The JSON representation for `NullValue` is JSON `null`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527747,"byte_end":7527807,"line_start":1731,"line_end":1731,"column_start":1,"column_end":61}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527898,"byte_end":7527910,"line_start":1733,"line_end":1733,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532120,"byte_end":7532129,"line_start":1832,"line_end":1832,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::Timestamp","value":"Timestamp { seconds, nanos }","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848}],"decl_id":null,"docs":" A Timestamp represents a point in time independent of any time zone or local\n calendar, encoded as a count of seconds and fractions of seconds at\n nanosecond resolution. The count is relative to an epoch at UTC midnight on\n January 1, 1970, in the proleptic Gregorian calendar which extends the\n Gregorian calendar backwards to year one.","sig":null,"attributes":[{"value":"/ A Timestamp represents a point in time independent of any time zone or local","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7527973,"byte_end":7528053,"line_start":1738,"line_end":1738,"column_start":1,"column_end":81}},{"value":"/ calendar, encoded as a count of seconds and fractions of seconds at","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528054,"byte_end":7528125,"line_start":1739,"line_end":1739,"column_start":1,"column_end":72}},{"value":"/ nanosecond resolution. The count is relative to an epoch at UTC midnight on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528126,"byte_end":7528205,"line_start":1740,"line_end":1740,"column_start":1,"column_end":80}},{"value":"/ January 1, 1970, in the proleptic Gregorian calendar which extends the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528206,"byte_end":7528280,"line_start":1741,"line_end":1741,"column_start":1,"column_end":75}},{"value":"/ Gregorian calendar backwards to year one.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528281,"byte_end":7528326,"line_start":1742,"line_end":1742,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528327,"byte_end":7528330,"line_start":1743,"line_end":1743,"column_start":1,"column_end":4}},{"value":"/ All minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528331,"byte_end":7528410,"line_start":1744,"line_end":1744,"column_start":1,"column_end":80}},{"value":"/ second table is needed for interpretation, using a [24-hour linear","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528411,"byte_end":7528481,"line_start":1745,"line_end":1745,"column_start":1,"column_end":71}},{"value":"/ smear](<https://developers.google.com/time/smear>).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528482,"byte_end":7528537,"line_start":1746,"line_end":1746,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528538,"byte_end":7528541,"line_start":1747,"line_end":1747,"column_start":1,"column_end":4}},{"value":"/ The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528542,"byte_end":7528622,"line_start":1748,"line_end":1748,"column_start":1,"column_end":81}},{"value":"/ restricting to that range, we ensure that we can convert to and from [RFC","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528623,"byte_end":7528700,"line_start":1749,"line_end":1749,"column_start":1,"column_end":78}},{"value":"/ 3339](<https://www.ietf.org/rfc/rfc3339.txt>) date strings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528701,"byte_end":7528764,"line_start":1750,"line_end":1750,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528765,"byte_end":7528768,"line_start":1751,"line_end":1751,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528769,"byte_end":7528783,"line_start":1752,"line_end":1752,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528784,"byte_end":7528787,"line_start":1753,"line_end":1753,"column_start":1,"column_end":4}},{"value":"/ Example 1: Compute Timestamp from POSIX `time()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528788,"byte_end":7528841,"line_start":1754,"line_end":1754,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528842,"byte_end":7528845,"line_start":1755,"line_end":1755,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528846,"byte_end":7528874,"line_start":1756,"line_end":1756,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(time(NULL));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528875,"byte_end":7528917,"line_start":1757,"line_end":1757,"column_start":1,"column_end":43}},{"value":"/     timestamp.set_nanos(0);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528918,"byte_end":7528949,"line_start":1758,"line_end":1758,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528950,"byte_end":7528953,"line_start":1759,"line_end":1759,"column_start":1,"column_end":4}},{"value":"/ Example 2: Compute Timestamp from POSIX `gettimeofday()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7528954,"byte_end":7529015,"line_start":1760,"line_end":1760,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529016,"byte_end":7529019,"line_start":1761,"line_end":1761,"column_start":1,"column_end":4}},{"value":"/     struct timeval tv;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529020,"byte_end":7529046,"line_start":1762,"line_end":1762,"column_start":1,"column_end":27}},{"value":"/     gettimeofday(&tv, NULL);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529047,"byte_end":7529079,"line_start":1763,"line_end":1763,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529080,"byte_end":7529083,"line_start":1764,"line_end":1764,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529084,"byte_end":7529112,"line_start":1765,"line_end":1765,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds(tv.tv_sec);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529113,"byte_end":7529154,"line_start":1766,"line_end":1766,"column_start":1,"column_end":42}},{"value":"/     timestamp.set_nanos(tv.tv_usec * 1000);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529155,"byte_end":7529202,"line_start":1767,"line_end":1767,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529203,"byte_end":7529206,"line_start":1768,"line_end":1768,"column_start":1,"column_end":4}},{"value":"/ Example 3: Compute Timestamp from Win32 `GetSystemTimeAsFileTime()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529207,"byte_end":7529279,"line_start":1769,"line_end":1769,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529280,"byte_end":7529283,"line_start":1770,"line_end":1770,"column_start":1,"column_end":4}},{"value":"/     FILETIME ft;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529284,"byte_end":7529304,"line_start":1771,"line_end":1771,"column_start":1,"column_end":21}},{"value":"/     GetSystemTimeAsFileTime(&ft);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529305,"byte_end":7529342,"line_start":1772,"line_end":1772,"column_start":1,"column_end":38}},{"value":"/     UINT64 ticks = (((UINT64)ft.dwHighDateTime) << 32) | ft.dwLowDateTime;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529343,"byte_end":7529421,"line_start":1773,"line_end":1773,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529422,"byte_end":7529425,"line_start":1774,"line_end":1774,"column_start":1,"column_end":4}},{"value":"/     // A Windows tick is 100 nanoseconds. Windows epoch 1601-01-01T00:00:00Z","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529426,"byte_end":7529506,"line_start":1775,"line_end":1775,"column_start":1,"column_end":81}},{"value":"/     // is 11644473600 seconds before Unix epoch 1970-01-01T00:00:00Z.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529507,"byte_end":7529580,"line_start":1776,"line_end":1776,"column_start":1,"column_end":74}},{"value":"/     Timestamp timestamp;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529581,"byte_end":7529609,"line_start":1777,"line_end":1777,"column_start":1,"column_end":29}},{"value":"/     timestamp.set_seconds((INT64) ((ticks / 10000000) - 11644473600LL));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529610,"byte_end":7529686,"line_start":1778,"line_end":1778,"column_start":1,"column_end":77}},{"value":"/     timestamp.set_nanos((INT32) ((ticks % 10000000) * 100));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529687,"byte_end":7529751,"line_start":1779,"line_end":1779,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529752,"byte_end":7529755,"line_start":1780,"line_end":1780,"column_start":1,"column_end":4}},{"value":"/ Example 4: Compute Timestamp from Java `System.currentTimeMillis()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529756,"byte_end":7529828,"line_start":1781,"line_end":1781,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529829,"byte_end":7529832,"line_start":1782,"line_end":1782,"column_start":1,"column_end":4}},{"value":"/     long millis = System.currentTimeMillis();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529833,"byte_end":7529882,"line_start":1783,"line_end":1783,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529883,"byte_end":7529886,"line_start":1784,"line_end":1784,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp = Timestamp.newBuilder().setSeconds(millis / 1000)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529887,"byte_end":7529965,"line_start":1785,"line_end":1785,"column_start":1,"column_end":79}},{"value":"/         .setNanos((int) ((millis % 1000) * 1000000)).build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7529966,"byte_end":7530031,"line_start":1786,"line_end":1786,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530032,"byte_end":7530035,"line_start":1787,"line_end":1787,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530036,"byte_end":7530039,"line_start":1788,"line_end":1788,"column_start":1,"column_end":4}},{"value":"/ Example 5: Compute Timestamp from Java `Instant.now()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530040,"byte_end":7530099,"line_start":1789,"line_end":1789,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530100,"byte_end":7530103,"line_start":1790,"line_end":1790,"column_start":1,"column_end":4}},{"value":"/     Instant now = Instant.now();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530104,"byte_end":7530140,"line_start":1791,"line_end":1791,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530141,"byte_end":7530144,"line_start":1792,"line_end":1792,"column_start":1,"column_end":4}},{"value":"/     Timestamp timestamp =","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530145,"byte_end":7530174,"line_start":1793,"line_end":1793,"column_start":1,"column_end":30}},{"value":"/         Timestamp.newBuilder().setSeconds(now.getEpochSecond())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530175,"byte_end":7530242,"line_start":1794,"line_end":1794,"column_start":1,"column_end":68}},{"value":"/             .setNanos(now.getNano()).build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530243,"byte_end":7530292,"line_start":1795,"line_end":1795,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530293,"byte_end":7530296,"line_start":1796,"line_end":1796,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530297,"byte_end":7530300,"line_start":1797,"line_end":1797,"column_start":1,"column_end":4}},{"value":"/ Example 6: Compute Timestamp from current time in Python.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530301,"byte_end":7530362,"line_start":1798,"line_end":1798,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530363,"byte_end":7530366,"line_start":1799,"line_end":1799,"column_start":1,"column_end":4}},{"value":"/     timestamp = Timestamp()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530367,"byte_end":7530398,"line_start":1800,"line_end":1800,"column_start":1,"column_end":32}},{"value":"/     timestamp.GetCurrentTime()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530399,"byte_end":7530433,"line_start":1801,"line_end":1801,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530434,"byte_end":7530437,"line_start":1802,"line_end":1802,"column_start":1,"column_end":4}},{"value":"/ # JSON Mapping","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530438,"byte_end":7530456,"line_start":1803,"line_end":1803,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530457,"byte_end":7530460,"line_start":1804,"line_end":1804,"column_start":1,"column_end":4}},{"value":"/ In JSON format, the Timestamp type is encoded as a string in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530461,"byte_end":7530529,"line_start":1805,"line_end":1805,"column_start":1,"column_end":69}},{"value":"/ [RFC 3339](<https://www.ietf.org/rfc/rfc3339.txt>) format. That is, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530530,"byte_end":7530605,"line_start":1806,"line_end":1806,"column_start":1,"column_end":76}},{"value":"/ format is \"{year}-{month}-{day}T{hour}:{min}:{sec}\\[.{frac_sec}\\]Z\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530606,"byte_end":7530677,"line_start":1807,"line_end":1807,"column_start":1,"column_end":72}},{"value":"/ where {year} is always expressed using four digits while {month}, {day},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530678,"byte_end":7530754,"line_start":1808,"line_end":1808,"column_start":1,"column_end":77}},{"value":"/ {hour}, {min}, and {sec} are zero-padded to two digits each. The fractional","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530755,"byte_end":7530834,"line_start":1809,"line_end":1809,"column_start":1,"column_end":80}},{"value":"/ seconds, which can go up to 9 digits (i.e. up to 1 nanosecond resolution),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530835,"byte_end":7530913,"line_start":1810,"line_end":1810,"column_start":1,"column_end":79}},{"value":"/ are optional. The \"Z\" suffix indicates the timezone (\"UTC\"); the timezone","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530914,"byte_end":7530991,"line_start":1811,"line_end":1811,"column_start":1,"column_end":78}},{"value":"/ is required. A proto3 JSON serializer should always use UTC (as indicated by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7530992,"byte_end":7531072,"line_start":1812,"line_end":1812,"column_start":1,"column_end":81}},{"value":"/ \"Z\") when printing the Timestamp type and a proto3 JSON parser should be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531073,"byte_end":7531149,"line_start":1813,"line_end":1813,"column_start":1,"column_end":77}},{"value":"/ able to accept both UTC and other timezones (as indicated by an offset).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531150,"byte_end":7531226,"line_start":1814,"line_end":1814,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531227,"byte_end":7531230,"line_start":1815,"line_end":1815,"column_start":1,"column_end":4}},{"value":"/ For example, \"2017-01-15T01:30:15.01Z\" encodes 15.01 seconds past","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531231,"byte_end":7531300,"line_start":1816,"line_end":1816,"column_start":1,"column_end":70}},{"value":"/ 01:30 UTC on January 15, 2017.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531301,"byte_end":7531335,"line_start":1817,"line_end":1817,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531336,"byte_end":7531339,"line_start":1818,"line_end":1818,"column_start":1,"column_end":4}},{"value":"/ In JavaScript, one can convert a Date object to this format using the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531340,"byte_end":7531413,"line_start":1819,"line_end":1819,"column_start":1,"column_end":74}},{"value":"/ standard","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531414,"byte_end":7531426,"line_start":1820,"line_end":1820,"column_start":1,"column_end":13}},{"value":"/ \\[toISOString()\\](<https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531427,"byte_end":7531549,"line_start":1821,"line_end":1821,"column_start":1,"column_end":123}},{"value":"/ method. In Python, a standard `datetime.datetime` object can be converted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531550,"byte_end":7531627,"line_start":1822,"line_end":1822,"column_start":1,"column_end":78}},{"value":"/ to this format using","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531628,"byte_end":7531652,"line_start":1823,"line_end":1823,"column_start":1,"column_end":25}},{"value":"/ \\[`strftime`\\](<https://docs.python.org/2/library/time.html#time.strftime>) with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531653,"byte_end":7531737,"line_start":1824,"line_end":1824,"column_start":1,"column_end":85}},{"value":"/ the time format spec '%Y-%m-%dT%H:%M:%S.%fZ'. Likewise, in Java, one can use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531738,"byte_end":7531818,"line_start":1825,"line_end":1825,"column_start":1,"column_end":81}},{"value":"/ the Joda Time's \\[`ISODateTimeFormat.dateTime()`\\](","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531819,"byte_end":7531874,"line_start":1826,"line_end":1826,"column_start":1,"column_end":56}},{"value":"/ <http://www.joda.org/joda-time/apidocs/org/joda/time/format/ISODateTimeFormat.html#dateTime%2D%2D>","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531875,"byte_end":7531977,"line_start":1827,"line_end":1827,"column_start":1,"column_end":103}},{"value":"/ ) to obtain a formatter capable of generating timestamps in this format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7531978,"byte_end":7532054,"line_start":1828,"line_end":1828,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532055,"byte_end":7532058,"line_start":1829,"line_end":1829,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532059,"byte_end":7532062,"line_start":1830,"line_end":1830,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532332,"byte_end":7532339,"line_start":1837,"line_end":1837,"column_start":9,"column_end":16},"name":"seconds","qualname":"::Timestamp::seconds","value":"i64","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" Represents seconds of UTC time since Unix epoch\n 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n 9999-12-31T23:59:59Z inclusive.\n","sig":null,"attributes":[{"value":"/ Represents seconds of UTC time since Unix epoch","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532136,"byte_end":7532187,"line_start":1833,"line_end":1833,"column_start":5,"column_end":56}},{"value":"/ 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532192,"byte_end":7532254,"line_start":1834,"line_end":1834,"column_start":5,"column_end":67}},{"value":"/ 9999-12-31T23:59:59Z inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532259,"byte_end":7532294,"line_start":1835,"line_end":1835,"column_start":5,"column_end":40}},{"value":"prost(int64, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532299,"byte_end":7532323,"line_start":1836,"line_end":1836,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532625,"byte_end":7532630,"line_start":1843,"line_end":1843,"column_start":9,"column_end":14},"name":"nanos","qualname":"::Timestamp::nanos","value":"i32","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" Non-negative fractions of a second at nanosecond resolution. Negative\n second values with fractions must still have non-negative nanos values\n that count forward in time. Must be from 0 to 999,999,999\n inclusive.\n","sig":null,"attributes":[{"value":"/ Non-negative fractions of a second at nanosecond resolution. Negative","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532350,"byte_end":7532423,"line_start":1838,"line_end":1838,"column_start":5,"column_end":78}},{"value":"/ second values with fractions must still have non-negative nanos values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532428,"byte_end":7532502,"line_start":1839,"line_end":1839,"column_start":5,"column_end":79}},{"value":"/ that count forward in time. Must be from 0 to 999,999,999","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532507,"byte_end":7532568,"line_start":1840,"line_end":1840,"column_start":5,"column_end":66}},{"value":"/ inclusive.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532573,"byte_end":7532587,"line_start":1841,"line_end":1841,"column_start":5,"column_end":19}},{"value":"prost(int32, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/protobuf.rs","byte_start":7532592,"byte_end":7532616,"line_start":1842,"line_end":1842,"column_start":5,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":16},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":585,"byte_end":593,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"name":"compiler","qualname":"::compiler","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2857},{"krate":0,"index":2873},{"krate":0,"index":2875},{"krate":0,"index":2913},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2943},{"krate":0,"index":2945},{"krate":0,"index":2965},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2975},{"krate":0,"index":2978},{"krate":0,"index":2991},{"krate":0,"index":2993},{"krate":0,"index":3013},{"krate":0,"index":2849}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967556,"byte_end":8967563,"line_start":3,"line_end":3,"column_start":12,"column_end":19},"name":"Version","qualname":"::compiler::Version","value":"Version { major, minor, patch, suffix }","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921}],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967454,"byte_end":8967498,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967613,"byte_end":8967618,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"::compiler::Version::major","value":"core::option::Option<i32>","parent":{"krate":0,"index":2850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967570,"byte_end":8967604,"line_start":4,"line_end":4,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967696,"byte_end":8967701,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"::compiler::Version::minor","value":"core::option::Option<i32>","parent":{"krate":0,"index":2850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967653,"byte_end":8967687,"line_start":6,"line_end":6,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967779,"byte_end":8967784,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"::compiler::Version::patch","value":"core::option::Option<i32>","parent":{"krate":0,"index":2850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(int32, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967736,"byte_end":8967770,"line_start":8,"line_end":8,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967992,"byte_end":8967998,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"::compiler::Version::suffix","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2850},"children":[],"decl_id":null,"docs":" A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should\n be empty for mainline stable releases.\n","sig":null,"attributes":[{"value":"/ A suffix for alpha, beta or rc release, e.g., \"alpha-1\", \"rc2\". It should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967819,"byte_end":8967896,"line_start":10,"line_end":10,"column_start":5,"column_end":82}},{"value":"/ be empty for mainline stable releases.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967901,"byte_end":8967943,"line_start":11,"line_end":11,"column_start":5,"column_end":47}},{"value":"prost(string, optional, tag = \"4\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967948,"byte_end":8967983,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967613,"byte_end":8967618,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"major","qualname":"<Version>::major","value":"pub fn major(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `major`, or the default value if `major` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967696,"byte_end":8967701,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"minor","qualname":"<Version>::minor","value":"pub fn minor(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `minor`, or the default value if `minor` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967779,"byte_end":8967784,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"patch","qualname":"<Version>::patch","value":"pub fn patch(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `patch`, or the default value if `patch` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8967992,"byte_end":8967998,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"suffix","qualname":"<Version>::suffix","value":"pub fn suffix(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `suffix`, or the default value if `suffix` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968185,"byte_end":8968205,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"CodeGeneratorRequest","qualname":"::compiler::CodeGeneratorRequest","value":"CodeGeneratorRequest { file_to_generate, parameter, proto_file, compiler_version }","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970}],"decl_id":null,"docs":" An encoded CodeGeneratorRequest is written to the plugin's stdin.\n","sig":null,"attributes":[{"value":"/ An encoded CodeGeneratorRequest is written to the plugin's stdin.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968058,"byte_end":8968127,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968472,"byte_end":8968488,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"name":"file_to_generate","qualname":"::compiler::CodeGeneratorRequest::file_to_generate","value":"prost::alloc::vec::Vec<prost::alloc::string::String>","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The .proto files that were explicitly listed on the command-line.  The\n code generator should generate code only for these files.  Each file's\n descriptor will be included in proto_file, below.\n","sig":null,"attributes":[{"value":"/ The .proto files that were explicitly listed on the command-line.  The","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968212,"byte_end":8968286,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ code generator should generate code only for these files.  Each file's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968291,"byte_end":8968365,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ descriptor will be included in proto_file, below.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968370,"byte_end":8968423,"line_start":20,"line_end":20,"column_start":5,"column_end":58}},{"value":"prost(string, repeated, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968428,"byte_end":8968463,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968656,"byte_end":8968665,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"::compiler::CodeGeneratorRequest::parameter","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The generator parameter passed on the command-line.\n","sig":null,"attributes":[{"value":"/ The generator parameter passed on the command-line.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968552,"byte_end":8968607,"line_start":23,"line_end":23,"column_start":5,"column_end":60}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968612,"byte_end":8968647,"line_start":24,"line_end":24,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2969},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969632,"byte_end":8969642,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"name":"proto_file","qualname":"::compiler::CodeGeneratorRequest::proto_file","value":"prost::alloc::vec::Vec<FileDescriptorProto>","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" FileDescriptorProtos for all files in files_to_generate and everything\n they import.  The files will appear in topological order, so each file\n appears before any file that imports it.","sig":null,"attributes":[{"value":"/ FileDescriptorProtos for all files in files_to_generate and everything","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968727,"byte_end":8968801,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ they import.  The files will appear in topological order, so each file","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968806,"byte_end":8968880,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ appears before any file that imports it.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968885,"byte_end":8968929,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968934,"byte_end":8968937,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ protoc guarantees that all proto_files will be written after","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968942,"byte_end":8969006,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/ the fields above, even though this is not technically guaranteed by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969011,"byte_end":8969086,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ protobuf wire format.  This theoretically could allow a plugin to stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969091,"byte_end":8969167,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ in the FileDescriptorProtos and handle them one by one rather than read","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969172,"byte_end":8969247,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ the entire set into memory at once.  However, as of this writing, this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969252,"byte_end":8969326,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ is not similarly optimized on protoc's end -- it will store all fields in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969331,"byte_end":8969408,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ memory at once before sending them to the plugin.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969413,"byte_end":8969466,"line_start":36,"line_end":36,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969471,"byte_end":8969474,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Type names of fields and extensions in the FileDescriptorProto are always","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969479,"byte_end":8969556,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ fully qualified.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969561,"byte_end":8969581,"line_start":39,"line_end":39,"column_start":5,"column_end":25}},{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969586,"byte_end":8969623,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969796,"byte_end":8969812,"line_start":44,"line_end":44,"column_start":9,"column_end":25},"name":"compiler_version","qualname":"::compiler::CodeGeneratorRequest::compiler_version","value":"core::option::Option<compiler::Version>","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The version number of protocol compiler.\n","sig":null,"attributes":[{"value":"/ The version number of protocol compiler.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969702,"byte_end":8969746,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"prost(message, optional, tag = \"3\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969751,"byte_end":8969787,"line_start":43,"line_end":43,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8968656,"byte_end":8968665,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"parameter","qualname":"<CodeGeneratorRequest>::parameter","value":"pub fn parameter(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `parameter`, or the default value if `parameter` is unset.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2971},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969972,"byte_end":8969993,"line_start":48,"line_end":48,"column_start":12,"column_end":33},"name":"CodeGeneratorResponse","qualname":"::compiler::CodeGeneratorResponse","value":"CodeGeneratorResponse { error, supported_features, file }","parent":null,"children":[{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018}],"decl_id":null,"docs":" The plugin writes an encoded CodeGeneratorResponse to stdout.\n","sig":null,"attributes":[{"value":"/ The plugin writes an encoded CodeGeneratorResponse to stdout.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8969849,"byte_end":8969914,"line_start":46,"line_end":46,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970579,"byte_end":8970584,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"::compiler::CodeGeneratorResponse::error","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":" Error message.  If non-empty, code generation failed.  The plugin process\n should exit with status code zero even if it reports an error in this way.","sig":null,"attributes":[{"value":"/ Error message.  If non-empty, code generation failed.  The plugin process","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970000,"byte_end":8970077,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ should exit with status code zero even if it reports an error in this way.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970082,"byte_end":8970160,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970165,"byte_end":8970168,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This should be used to indicate errors in .proto files which prevent the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970173,"byte_end":8970249,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ code generator from generating correct code.  Errors which indicate a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970254,"byte_end":8970327,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ problem in protoc itself -- such as the input CodeGeneratorRequest being","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970332,"byte_end":8970408,"line_start":54,"line_end":54,"column_start":5,"column_end":81}},{"value":"/ unparseable -- should be reported by writing a message to stderr and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970413,"byte_end":8970485,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ exiting with a non-zero status code.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970490,"byte_end":8970530,"line_start":56,"line_end":56,"column_start":5,"column_end":45}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970535,"byte_end":8970570,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970828,"byte_end":8970846,"line_start":62,"line_end":62,"column_start":9,"column_end":27},"name":"supported_features","qualname":"::compiler::CodeGeneratorResponse::supported_features","value":"core::option::Option<u64>","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":" A bitmask of supported features that the code generator supports.\n This is a bitwise \"or\" of values from the Feature enum.\n","sig":null,"attributes":[{"value":"/ A bitmask of supported features that the code generator supports.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970646,"byte_end":8970715,"line_start":59,"line_end":59,"column_start":5,"column_end":74}},{"value":"/ This is a bitwise \"or\" of values from the Feature enum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970720,"byte_end":8970779,"line_start":60,"line_end":60,"column_start":5,"column_end":64}},{"value":"prost(uint64, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970784,"byte_end":8970819,"line_start":61,"line_end":61,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970927,"byte_end":8970931,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"file","qualname":"::compiler::CodeGeneratorResponse::file","value":"prost::alloc::vec::Vec<compiler::code_generator_response::File>","parent":{"krate":0,"index":2971},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"prost(message, repeated, tag = \"15\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970881,"byte_end":8970918,"line_start":63,"line_end":63,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970579,"byte_end":8970584,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"error","qualname":"<CodeGeneratorResponse>::error","value":"pub fn error(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `error`, or the default value if `error` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970828,"byte_end":8970846,"line_start":62,"line_end":62,"column_start":9,"column_end":27},"name":"supported_features","qualname":"<CodeGeneratorResponse>::supported_features","value":"pub fn supported_features(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `supported_features`, or the default value if `supported_features` is unset.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971062,"byte_end":8971085,"line_start":67,"line_end":67,"column_start":9,"column_end":32},"name":"code_generator_response","qualname":"::compiler::code_generator_response","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3026},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3073},{"krate":0,"index":3081},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3104},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3111}],"decl_id":null,"docs":" Nested message and enum types in `CodeGeneratorResponse`.\n","sig":null,"attributes":[{"value":"/ Nested message and enum types in `CodeGeneratorResponse`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8970992,"byte_end":8971053,"line_start":66,"line_end":66,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971197,"byte_end":8971201,"line_start":70,"line_end":70,"column_start":16,"column_end":20},"name":"File","qualname":"::compiler::code_generator_response::File","value":"File { name, insertion_point, content, generated_code_info }","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080}],"decl_id":null,"docs":" Represents a single generated file.\n","sig":null,"attributes":[{"value":"/ Represents a single generated file.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971092,"byte_end":8971131,"line_start":68,"line_end":68,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972050,"byte_end":8972054,"line_start":83,"line_end":83,"column_start":13,"column_end":17},"name":"name","qualname":"::compiler::code_generator_response::File::name","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" The file name, relative to the output directory.  The name must not\n contain \".\" or \"..\" components and must be relative, not be absolute (so,\n the file cannot lie outside the output directory).  \"/\" must be used as\n the path separator, not \"\\\".","sig":null,"attributes":[{"value":"/ The file name, relative to the output directory.  The name must not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971212,"byte_end":8971283,"line_start":71,"line_end":71,"column_start":9,"column_end":80}},{"value":"/ contain \".\" or \"..\" components and must be relative, not be absolute (so,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971292,"byte_end":8971369,"line_start":72,"line_end":72,"column_start":9,"column_end":86}},{"value":"/ the file cannot lie outside the output directory).  \"/\" must be used as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971378,"byte_end":8971453,"line_start":73,"line_end":73,"column_start":9,"column_end":84}},{"value":"/ the path separator, not \"\\\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971462,"byte_end":8971494,"line_start":74,"line_end":74,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971503,"byte_end":8971506,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"/ If the name is omitted, the content will be appended to the previous","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971515,"byte_end":8971587,"line_start":76,"line_end":76,"column_start":9,"column_end":81}},{"value":"/ file.  This allows the generator to break large files into small chunks,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971596,"byte_end":8971672,"line_start":77,"line_end":77,"column_start":9,"column_end":85}},{"value":"/ and allows the generated text to be streamed back to protoc so that large","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971681,"byte_end":8971758,"line_start":78,"line_end":78,"column_start":9,"column_end":86}},{"value":"/ files need not reside completely in memory at one time.  Note that as of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971767,"byte_end":8971843,"line_start":79,"line_end":79,"column_start":9,"column_end":85}},{"value":"/ this writing protoc does not optimize for this -- it will read the entire","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971852,"byte_end":8971929,"line_start":80,"line_end":80,"column_start":9,"column_end":86}},{"value":"/ CodeGeneratorResponse before writing files to disk.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8971938,"byte_end":8971993,"line_start":81,"line_end":81,"column_start":9,"column_end":64}},{"value":"prost(string, optional, tag = \"1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972002,"byte_end":8972037,"line_start":82,"line_end":82,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974652,"byte_end":8974667,"line_start":122,"line_end":122,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"::compiler::code_generator_response::File::insertion_point","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" If non-empty, indicates that the named file should already exist, and the\n content here is to be inserted into that file at a defined insertion\n point.  This feature allows a code generator to extend the output\n produced by another code generator.  The original generator may provide\n insertion points by placing special annotations in the file that look\n like:\n   @@protoc_insertion_point(NAME)\n The annotation can have arbitrary text before and after it on the line,\n which allows it to be placed in a comment.  NAME should be replaced with\n an identifier naming the point -- this is what other generators will use\n as the insertion_point.  Code inserted at this point will be placed\n immediately above the line containing the insertion point (thus multiple\n insertions to the same point will come out in the order they were added).\n The double-@ is intended to make it unlikely that the generated code\n could contain things that look like insertion points by accident.","sig":null,"attributes":[{"value":"/ If non-empty, indicates that the named file should already exist, and the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972120,"byte_end":8972197,"line_start":84,"line_end":84,"column_start":9,"column_end":86}},{"value":"/ content here is to be inserted into that file at a defined insertion","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972206,"byte_end":8972278,"line_start":85,"line_end":85,"column_start":9,"column_end":81}},{"value":"/ point.  This feature allows a code generator to extend the output","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972287,"byte_end":8972356,"line_start":86,"line_end":86,"column_start":9,"column_end":78}},{"value":"/ produced by another code generator.  The original generator may provide","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972365,"byte_end":8972440,"line_start":87,"line_end":87,"column_start":9,"column_end":84}},{"value":"/ insertion points by placing special annotations in the file that look","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972449,"byte_end":8972522,"line_start":88,"line_end":88,"column_start":9,"column_end":82}},{"value":"/ like:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972531,"byte_end":8972540,"line_start":89,"line_end":89,"column_start":9,"column_end":18}},{"value":"/   @@protoc_insertion_point(NAME)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972549,"byte_end":8972585,"line_start":90,"line_end":90,"column_start":9,"column_end":45}},{"value":"/ The annotation can have arbitrary text before and after it on the line,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972594,"byte_end":8972669,"line_start":91,"line_end":91,"column_start":9,"column_end":84}},{"value":"/ which allows it to be placed in a comment.  NAME should be replaced with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972678,"byte_end":8972754,"line_start":92,"line_end":92,"column_start":9,"column_end":85}},{"value":"/ an identifier naming the point -- this is what other generators will use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972763,"byte_end":8972839,"line_start":93,"line_end":93,"column_start":9,"column_end":85}},{"value":"/ as the insertion_point.  Code inserted at this point will be placed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972848,"byte_end":8972919,"line_start":94,"line_end":94,"column_start":9,"column_end":80}},{"value":"/ immediately above the line containing the insertion point (thus multiple","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972928,"byte_end":8973004,"line_start":95,"line_end":95,"column_start":9,"column_end":85}},{"value":"/ insertions to the same point will come out in the order they were added).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973013,"byte_end":8973090,"line_start":96,"line_end":96,"column_start":9,"column_end":86}},{"value":"/ The double-@ is intended to make it unlikely that the generated code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973099,"byte_end":8973171,"line_start":97,"line_end":97,"column_start":9,"column_end":81}},{"value":"/ could contain things that look like insertion points by accident.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973180,"byte_end":8973249,"line_start":98,"line_end":98,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973258,"byte_end":8973261,"line_start":99,"line_end":99,"column_start":9,"column_end":12}},{"value":"/ For example, the C++ code generator places the following line in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973270,"byte_end":8973342,"line_start":100,"line_end":100,"column_start":9,"column_end":81}},{"value":"/ .pb.h files that it generates:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973351,"byte_end":8973385,"line_start":101,"line_end":101,"column_start":9,"column_end":43}},{"value":"/   // @@protoc_insertion_point(namespace_scope)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973394,"byte_end":8973444,"line_start":102,"line_end":102,"column_start":9,"column_end":59}},{"value":"/ This line appears within the scope of the file's package namespace, but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973453,"byte_end":8973528,"line_start":103,"line_end":103,"column_start":9,"column_end":84}},{"value":"/ outside of any particular class.  Another plugin can then specify the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973537,"byte_end":8973610,"line_start":104,"line_end":104,"column_start":9,"column_end":82}},{"value":"/ insertion_point \"namespace_scope\" to generate additional classes or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973619,"byte_end":8973690,"line_start":105,"line_end":105,"column_start":9,"column_end":80}},{"value":"/ other declarations that should be placed in this scope.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973699,"byte_end":8973758,"line_start":106,"line_end":106,"column_start":9,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973767,"byte_end":8973770,"line_start":107,"line_end":107,"column_start":9,"column_end":12}},{"value":"/ Note that if the line containing the insertion point begins with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973779,"byte_end":8973847,"line_start":108,"line_end":108,"column_start":9,"column_end":77}},{"value":"/ whitespace, the same whitespace will be added to every line of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973856,"byte_end":8973926,"line_start":109,"line_end":109,"column_start":9,"column_end":79}},{"value":"/ inserted text.  This is useful for languages like Python, where","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8973935,"byte_end":8974002,"line_start":110,"line_end":110,"column_start":9,"column_end":76}},{"value":"/ indentation matters.  In these languages, the insertion point comment","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974011,"byte_end":8974084,"line_start":111,"line_end":111,"column_start":9,"column_end":82}},{"value":"/ should be indented the same amount as any inserted code will need to be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974093,"byte_end":8974168,"line_start":112,"line_end":112,"column_start":9,"column_end":84}},{"value":"/ in order to work correctly in that context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974177,"byte_end":8974224,"line_start":113,"line_end":113,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974233,"byte_end":8974236,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"/ The code generator that generates the initial file and the one which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974245,"byte_end":8974317,"line_start":115,"line_end":115,"column_start":9,"column_end":81}},{"value":"/ inserts into it must both run as part of a single invocation of protoc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974326,"byte_end":8974401,"line_start":116,"line_end":116,"column_start":9,"column_end":84}},{"value":"/ Code generators are executed in the order in which they appear on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974410,"byte_end":8974483,"line_start":117,"line_end":117,"column_start":9,"column_end":82}},{"value":"/ command line.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974492,"byte_end":8974509,"line_start":118,"line_end":118,"column_start":9,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974518,"byte_end":8974521,"line_start":119,"line_end":119,"column_start":9,"column_end":12}},{"value":"/ If |insertion_point| is present, |name| must also be present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974530,"byte_end":8974595,"line_start":120,"line_end":120,"column_start":9,"column_end":74}},{"value":"prost(string, optional, tag = \"2\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974604,"byte_end":8974639,"line_start":121,"line_end":121,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974813,"byte_end":8974820,"line_start":125,"line_end":125,"column_start":13,"column_end":20},"name":"content","qualname":"::compiler::code_generator_response::File::content","value":"core::option::Option<prost::alloc::string::String>","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" The file contents.\n","sig":null,"attributes":[{"value":"/ The file contents.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974733,"byte_end":8974755,"line_start":123,"line_end":123,"column_start":9,"column_end":31}},{"value":"prost(string, optional, tag = \"15\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974764,"byte_end":8974800,"line_start":124,"line_end":124,"column_start":9,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975177,"byte_end":8975196,"line_start":130,"line_end":130,"column_start":13,"column_end":32},"name":"generated_code_info","qualname":"::compiler::code_generator_response::File::generated_code_info","value":"core::option::Option<GeneratedCodeInfo>","parent":{"krate":0,"index":3019},"children":[],"decl_id":null,"docs":" Information describing the file content being inserted. If an insertion\n point is used, this information will be appropriately offset and inserted\n into the code generation metadata for the generated files.\n","sig":null,"attributes":[{"value":"/ Information describing the file content being inserted. If an insertion","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974886,"byte_end":8974961,"line_start":126,"line_end":126,"column_start":9,"column_end":84}},{"value":"/ point is used, this information will be appropriately offset and inserted","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974970,"byte_end":8975047,"line_start":127,"line_end":127,"column_start":9,"column_end":86}},{"value":"/ into the code generation metadata for the generated files.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975056,"byte_end":8975118,"line_start":128,"line_end":128,"column_start":9,"column_end":71}},{"value":"prost(message, optional, tag = \"16\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975127,"byte_end":8975164,"line_start":129,"line_end":129,"column_start":9,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8972050,"byte_end":8972054,"line_start":83,"line_end":83,"column_start":13,"column_end":17},"name":"name","qualname":"<File>::name","value":"pub fn name(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `name`, or the default value if `name` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974652,"byte_end":8974667,"line_start":122,"line_end":122,"column_start":13,"column_end":28},"name":"insertion_point","qualname":"<File>::insertion_point","value":"pub fn insertion_point(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `insertion_point`, or the default value if `insertion_point` is unset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8974813,"byte_end":8974820,"line_start":125,"line_end":125,"column_start":13,"column_end":20},"name":"content","qualname":"<File>::content","value":"pub fn content(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"Returns the value of `content`, or the default value if `content` is unset.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975439,"byte_end":8975443,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"name":"None","qualname":"::compiler::code_generator_response::Feature::None","value":"Feature::None","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975457,"byte_end":8975471,"line_start":137,"line_end":137,"column_start":9,"column_end":23},"name":"Proto3Optional","qualname":"::compiler::code_generator_response::Feature::Proto3Optional","value":"Feature::Proto3Optional","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975421,"byte_end":8975428,"line_start":135,"line_end":135,"column_start":14,"column_end":21},"name":"Feature","qualname":"::compiler::code_generator_response::Feature","value":"pub enum Feature { None = , Proto3Optional = , }","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3085}],"decl_id":null,"docs":" Sync with code_generator.h.\n","sig":null,"attributes":[{"value":"/ Sync with code_generator.h.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975265,"byte_end":8975296,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"repr(i32)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/compiler.rs","byte_start":8975395,"byte_end":8975407,"line_start":134,"line_end":134,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":1216,"byte_end":1225,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Duration>::normalize","value":"pub fn normalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes the duration to a canonical format.","sig":null,"attributes":[{"value":"/ Normalizes the duration to a canonical format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":973,"byte_end":1023,"line_start":32,"line_end":32,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":1028,"byte_end":1031,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Based on [`google::protobuf::util::CreateNormalized`][1].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":1036,"byte_end":1097,"line_start":34,"line_end":34,"column_start":5,"column_end":66}},{"value":"/ [1]: https://github.com/google/protobuf/blob/v3.3.2/src/google/protobuf/util/time_util.cc#L79-L100","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":1102,"byte_end":1204,"line_start":35,"line_end":35,"column_start":5,"column_end":107}}]}],"impls":[{"id":195,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":958,"byte_end":966,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":3155,"byte_end":3163,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":3702,"byte_end":3710,"line_start":103,"line_end":103,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":4328,"byte_end":4337,"line_start":124,"line_end":124,"column_start":6,"column_end":15},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":958,"byte_end":966,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":3155,"byte_end":3163,"line_start":83,"line_end":83,"column_start":31,"column_end":39},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2608},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":3702,"byte_end":3710,"line_start":103,"line_end":103,"column_start":34,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":1,"index":42444},"to":{"krate":1,"index":2970}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-types-0.9.0/src/lib.rs","byte_start":4328,"byte_end":4337,"line_start":124,"line_end":124,"column_start":6,"column_end":15},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2822},"to":{"krate":4294967295,"index":4294967295}}]}