{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","tarpc","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde-transport\"","--cfg","feature=\"serde-transport-bincode\"","--cfg","feature=\"serde-transport-json\"","--cfg","feature=\"serde1\"","--cfg","feature=\"tcp\"","--cfg","feature=\"tokio-serde\"","--cfg","feature=\"tokio1\"","-C","metadata=bb6eeb41d9489aa4","-C","extra-filename=-bb6eeb41d9489aa4","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","anyhow=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libanyhow-959bf71d246a2c58.rmeta","--extern","fnv=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfnv-3e8d938b80d00687.rmeta","--extern","futures=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfutures-f3324b5b4b5c9b4d.rmeta","--extern","humantime=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libhumantime-8e972df522170286.rmeta","--extern","opentelemetry=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libopentelemetry-9db7de60b664a4d5.rmeta","--extern","pin_project=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libpin_project-3c1d3caf9f40b2e4.rmeta","--extern","rand=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/librand-57d37ab1f3a74d65.rmeta","--extern","serde=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libserde-49a35833bb7d4cd9.rmeta","--extern","static_assertions=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libstatic_assertions-a472f598373b3fb3.rmeta","--extern","tarpc_plugins=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtarpc_plugins-ecb34e296982b7e4.dylib","--extern","thiserror=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libthiserror-c7ecac8e3ed05fc3.rmeta","--extern","tokio=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtokio-ab0c170bd08d986a.rmeta","--extern","tokio_serde=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtokio_serde-f6bbaedac28f270d.rmeta","--extern","tokio_util=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtokio_util-853f289989120dc7.rmeta","--extern","tracing=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtracing-196313e39643b452.rmeta","--extern","tracing_opentelemetry=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtracing_opentelemetry-50993b12e59e4578.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtarpc-bb6eeb41d9489aa4.rmeta"},"prelude":{"crate_id":{"name":"tarpc","disambiguator":[5572722126526363835,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[5863477056816838465,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[14935701922505342062,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":22,"id":{"name":"tokio_serde","disambiguator":[6625326041717082611,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":23,"id":{"name":"bytes","disambiguator":[1173452260237162938,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":24,"id":{"name":"futures_core","disambiguator":[4012493577413133877,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":25,"id":{"name":"futures_sink","disambiguator":[1625511151146650609,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":26,"id":{"name":"pin_project","disambiguator":[2871727040521499454,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":27,"id":{"name":"pin_project_internal","disambiguator":[16225396094756153947,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":28,"id":{"name":"educe","disambiguator":[4476539503884643311,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":29,"id":{"name":"bincode","disambiguator":[13327686578603316637,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":30,"id":{"name":"serde_json","disambiguator":[14041457762554805686,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":31,"id":{"name":"itoa","disambiguator":[887862156189091988,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":32,"id":{"name":"ryu","disambiguator":[7921103640808690109,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":33,"id":{"name":"futures","disambiguator":[4664541987206414317,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":34,"id":{"name":"futures_util","disambiguator":[8554587919257822248,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":35,"id":{"name":"pin_utils","disambiguator":[1249738907960169761,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":36,"id":{"name":"futures_macro","disambiguator":[17747157522268669736,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":37,"id":{"name":"futures_task","disambiguator":[665949121450103632,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":38,"id":{"name":"pin_project_lite","disambiguator":[10811595795888566755,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":39,"id":{"name":"futures_channel","disambiguator":[17804652917457386499,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":40,"id":{"name":"slab","disambiguator":[16586258314723481731,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":41,"id":{"name":"futures_io","disambiguator":[6452517159031921328,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":42,"id":{"name":"futures","disambiguator":[10251878124443451294,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":43,"id":{"name":"memchr","disambiguator":[13028180200298329348,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":44,"id":{"name":"futures_executor","disambiguator":[7037060880203300709,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":45,"id":{"name":"num_cpus","disambiguator":[1020557586879873658,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":46,"id":{"name":"libc","disambiguator":[4746252012921055962,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":47,"id":{"name":"tokio","disambiguator":[3680146692382752510,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":48,"id":{"name":"parking_lot","disambiguator":[5007731362612173479,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":49,"id":{"name":"instant","disambiguator":[15723746951671031144,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":50,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":51,"id":{"name":"lock_api","disambiguator":[12015075101561171174,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":52,"id":{"name":"scopeguard","disambiguator":[3001932468802176528,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":53,"id":{"name":"parking_lot_core","disambiguator":[931216837901866193,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":54,"id":{"name":"smallvec","disambiguator":[6636852960227244077,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":55,"id":{"name":"mio","disambiguator":[946356350541395615,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":56,"id":{"name":"log","disambiguator":[4656748892604770465,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":57,"id":{"name":"once_cell","disambiguator":[16438231570947150907,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":58,"id":{"name":"tokio_macros","disambiguator":[15978592266059792097,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":59,"id":{"name":"signal_hook_registry","disambiguator":[7306478639986397422,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","num":60,"id":{"name":"tokio_util","disambiguator":[11993278102582373148,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":61,"id":{"name":"opentelemetry","disambiguator":[12058143999304955168,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":62,"id":{"name":"async_trait","disambiguator":[16476123487015358150,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":63,"id":{"name":"percent_encoding","disambiguator":[1262089757298347482,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":64,"id":{"name":"rand","disambiguator":[11137246826035999640,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":65,"id":{"name":"rand_core","disambiguator":[4677866172908563295,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":66,"id":{"name":"getrandom","disambiguator":[17932864278009191628,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":67,"id":{"name":"rand_chacha","disambiguator":[12133928698714370424,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":68,"id":{"name":"ppv_lite86","disambiguator":[5856322367314168531,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","num":69,"id":{"name":"thiserror","disambiguator":[4152554040384203565,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":70,"id":{"name":"thiserror_impl","disambiguator":[11709532727904576165,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":71,"id":{"name":"lazy_static","disambiguator":[16187706137944756306,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":72,"id":{"name":"crossbeam_channel","disambiguator":[9663112012901306814,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":73,"id":{"name":"crossbeam_utils","disambiguator":[12022175608593352832,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":74,"id":{"name":"tracing_opentelemetry","disambiguator":[9282045773678675768,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":75,"id":{"name":"tracing_core","disambiguator":[606415515090563619,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":76,"id":{"name":"tracing_subscriber","disambiguator":[1276970580100714833,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":77,"id":{"name":"sharded_slab","disambiguator":[4288643825650803547,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":78,"id":{"name":"thread_local","disambiguator":[13309133646617292722,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","num":79,"id":{"name":"tracing","disambiguator":[1532921516066044995,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","num":80,"id":{"name":"tracing_attributes","disambiguator":[10310073681641115920,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":81,"id":{"name":"tarpc_plugins","disambiguator":[15918902883651719745,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","num":82,"id":{"name":"fnv","disambiguator":[18039494520473463035,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","num":83,"id":{"name":"static_assertions","disambiguator":[18196514925109496739,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","num":84,"id":{"name":"anyhow","disambiguator":[10302905789715319066,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","num":85,"id":{"name":"humantime","disambiguator":[6149540437266015464,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":182,"byte_end":15712,"line_start":6,"line_end":421,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8971,"byte_end":8976,"line_start":209,"line_end":209,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9023,"byte_end":9034,"line_start":212,"line_end":212,"column_start":9,"column_end":20},"alias_span":null,"name":"tokio_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":81,"index":127},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9224,"byte_end":9236,"line_start":221,"line_end":221,"column_start":24,"column_end":36},"alias_span":null,"name":"derive_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":81,"index":128},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9979,"byte_end":9986,"line_start":245,"line_end":245,"column_start":24,"column_end":31},"alias_span":null,"name":"service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":81,"index":141},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11664,"byte_end":11670,"line_start":301,"line_end":301,"column_start":24,"column_end":30},"alias_span":null,"name":"server","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1131},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11797,"byte_end":11806,"line_start":309,"line_end":309,"column_start":35,"column_end":44},"alias_span":null,"name":"Transport","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":182,"byte_end":15712,"line_start":6,"line_end":421,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":184},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":500},{"krate":0,"index":540},{"krate":0,"index":1063},{"krate":0,"index":1141},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":3651},{"krate":0,"index":3658},{"krate":0,"index":3665},{"krate":0,"index":3648},{"krate":0,"index":3754},{"krate":0,"index":3759},{"krate":0,"index":3766},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3835},{"krate":0,"index":3839},{"krate":0,"index":3846},{"krate":0,"index":3814},{"krate":0,"index":3817},{"krate":0,"index":3820},{"krate":0,"index":3822},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3831},{"krate":0,"index":3916},{"krate":0,"index":3918},{"krate":0,"index":3932},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3913},{"krate":0,"index":1215},{"krate":0,"index":1218},{"krate":0,"index":1225}],"decl_id":null,"docs":" *Disclaimer*: This is not an official Google product.","sig":null,"attributes":[{"value":"/ *Disclaimer*: This is not an official Google product.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":182,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":240,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ tarpc is an RPC framework for rust with a focus on ease of use. Defining a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":244,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ service can be done in just a few lines of code, and most of the boilerplate of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":323,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ writing a server is taken care of for you.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":407,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":454,"byte_end":457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Documentation](https://docs.rs/crate/tarpc/)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":458,"byte_end":507,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":508,"byte_end":511,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## What is an RPC framework?","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":512,"byte_end":544,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/ \"RPC\" stands for \"Remote Procedure Call,\" a function call where the work of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":545,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ producing the return value is being done somewhere else. When an rpc function is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":625,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ invoked, behind the scenes the function contacts some other process somewhere","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":710,"byte_end":791,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ and asks them to evaluate the function instead. The original function then","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":792,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ returns the value produced by the other process.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":871,"byte_end":923,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":924,"byte_end":927,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ RPC frameworks are a fundamental building block of most microservices-oriented","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":928,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ architectures. Two well-known ones are [gRPC](http://www.grpc.io) and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1011,"byte_end":1084,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ [Cap'n Proto](https://capnproto.org/).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1085,"byte_end":1127,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1128,"byte_end":1131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ tarpc differentiates itself from other RPC frameworks by defining the schema in code,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1132,"byte_end":1221,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ rather than in a separate language such as .proto. This means there's no separate compilation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1222,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ process, and no context switching between different languages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1320,"byte_end":1386,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some other features of tarpc:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1391,"byte_end":1424,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ - Pluggable transport: any type impling `Stream<Item = Request> + Sink<Response>` can be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1425,"byte_end":1517,"line_start":30,"line_end":30,"column_start":1,"column_end":93}},{"value":"/   used as a transport to connect the client and server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1518,"byte_end":1577,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ - `Send + 'static` optional: if the transport doesn't require it, neither does tarpc!","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1578,"byte_end":1667,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ - Cascading cancellation: dropping a request will send a cancellation message to the server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1668,"byte_end":1764,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/   The server will cease any unfinished work on the request, subsequently cancelling any of its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1765,"byte_end":1863,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/   own requests, repeating for the entire chain of transitive dependencies.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1864,"byte_end":1942,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ - Configurable deadlines and deadline propagation: request deadlines default to 10s if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":1943,"byte_end":2033,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/   unspecified. The server will automatically cease work when the deadline has passed. Any","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2034,"byte_end":2127,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/   requests sent by the server that use the request context will propagate the request deadline.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2128,"byte_end":2227,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/   For example, if a server is handling a request with a 10s deadline, does 2s of work, then","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2228,"byte_end":2323,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/   sends a request to another server, that server will see an 8s deadline.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2324,"byte_end":2401,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ - Distributed tracing: tarpc is instrumented with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2402,"byte_end":2455,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/   [tracing](https://github.com/tokio-rs/tracing) primitives extended with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2456,"byte_end":2533,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   [OpenTelemetry](https://opentelemetry.io/) traces. Using a compatible tracing subscriber like","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2534,"byte_end":2633,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/   [Jaeger](https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-jaeger),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2634,"byte_end":2734,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/   each RPC can be traced through the client, server, amd other dependencies downstream of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2735,"byte_end":2832,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/   server. Even for applications not connected to a distributed tracing collector, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2833,"byte_end":2922,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/   instrumentation can also be ingested by regular loggers like","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2923,"byte_end":2989,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/   [env_logger](https://github.com/env-logger-rs/env_logger/).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":2990,"byte_end":3055,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ - Serde serialization: enabling the `serde1` Cargo feature will make service requests and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3056,"byte_end":3149,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/   responses `Serialize + Deserialize`. It's entirely optional, though: in-memory transports can","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3150,"byte_end":3249,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/   be used, as well, so the price of serialization doesn't have to be paid when it's not needed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3250,"byte_end":3349,"line_start":51,"line_end":51,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3350,"byte_end":3353,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3354,"byte_end":3366,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/ Add to your `Cargo.toml` dependencies:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3367,"byte_end":3409,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3410,"byte_end":3413,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3414,"byte_end":3425,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ tarpc = \"0.27\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3426,"byte_end":3444,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3445,"byte_end":3452,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3453,"byte_end":3456,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The `tarpc::service` attribute expands to a collection of items that form an rpc service.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3457,"byte_end":3550,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ These generated types make it easy and ergonomic to write servers with less boilerplate.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3551,"byte_end":3643,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/ Simply implement the generated service trait, and you're off to the races!","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3644,"byte_end":3722,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3723,"byte_end":3726,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3727,"byte_end":3741,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3742,"byte_end":3745,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This example uses [tokio](https://tokio.rs), so add the following dependencies to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3746,"byte_end":3831,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ your `Cargo.toml`:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3832,"byte_end":3854,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3855,"byte_end":3858,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3859,"byte_end":3870,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ anyhow = \"1.0\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3871,"byte_end":3889,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ futures = \"0.3\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3890,"byte_end":3909,"line_start":71,"line_end":71,"column_start":1,"column_end":20}},{"value":"/ tarpc = { version = \"0.27\", features = [\"tokio1\"] }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3910,"byte_end":3965,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ tokio = { version = \"1.0\", features = [\"macros\"] }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":3966,"byte_end":4020,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4021,"byte_end":4028,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4029,"byte_end":4032,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ In the following example, we use an in-process channel for communication between","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4033,"byte_end":4117,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/ client and server. In real code, you will likely communicate over the network.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4118,"byte_end":4200,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ For a more real-world example, see [example-service](example-service).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4201,"byte_end":4275,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4276,"byte_end":4279,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ First, let's set up the dependencies and service definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4280,"byte_end":4344,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4345,"byte_end":4348,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4349,"byte_end":4360,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4361,"byte_end":4388,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4389,"byte_end":4392,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ use futures::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4393,"byte_end":4411,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/     future::{self, Ready},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4412,"byte_end":4442,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/     prelude::*,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4443,"byte_end":4462,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4463,"byte_end":4469,"line_start":88,"line_end":88,"column_start":1,"column_end":7}},{"value":"/ use tarpc::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4470,"byte_end":4486,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/     client, context,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4487,"byte_end":4511,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     server::{self, incoming::Incoming},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4512,"byte_end":4555,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4556,"byte_end":4562,"line_start":92,"line_end":92,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4563,"byte_end":4566,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4567,"byte_end":4645,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4646,"byte_end":4728,"line_start":95,"line_end":95,"column_start":1,"column_end":83}},{"value":"/ #[tarpc::service]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4729,"byte_end":4750,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ trait World {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4751,"byte_end":4768,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/     /// Returns a greeting for name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4769,"byte_end":4809,"line_start":98,"line_end":98,"column_start":1,"column_end":41}},{"value":"/     async fn hello(name: String) -> String;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4810,"byte_end":4857,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4858,"byte_end":4863,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4864,"byte_end":4871,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4872,"byte_end":4875,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This service definition generates a trait called `World`. Next we need to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4876,"byte_end":4953,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ implement it for our Server struct.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4954,"byte_end":4993,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4994,"byte_end":4997,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":4998,"byte_end":5009,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5010,"byte_end":5037,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5038,"byte_end":5058,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5059,"byte_end":5091,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5092,"byte_end":5113,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5114,"byte_end":5122,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5123,"byte_end":5141,"line_start":112,"line_end":112,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5142,"byte_end":5168,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, incoming::Incoming},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5169,"byte_end":5214,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/ # };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5215,"byte_end":5223,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5224,"byte_end":5304,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5305,"byte_end":5389,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5390,"byte_end":5413,"line_start":118,"line_end":118,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5414,"byte_end":5433,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5434,"byte_end":5476,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5477,"byte_end":5526,"line_start":121,"line_end":121,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5527,"byte_end":5534,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5535,"byte_end":5626,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"/ // and is used to start the server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5627,"byte_end":5666,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5667,"byte_end":5687,"line_start":125,"line_end":125,"column_start":1,"column_end":21}},{"value":"/ struct HelloServer;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5688,"byte_end":5711,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5712,"byte_end":5715,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ impl World for HelloServer {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5716,"byte_end":5748,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5749,"byte_end":5840,"line_start":129,"line_end":129,"column_start":1,"column_end":92}},{"value":"/     // an associated type representing the future output by the fn.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5841,"byte_end":5912,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5913,"byte_end":5916,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     type HelloFut = Ready<String>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5917,"byte_end":5955,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5956,"byte_end":5959,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":5960,"byte_end":6037,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6038,"byte_end":6092,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6093,"byte_end":6102,"line_start":136,"line_end":136,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6103,"byte_end":6108,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6109,"byte_end":6116,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6117,"byte_end":6120,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Lastly let's write our `main` that will start the server. While this example uses an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6121,"byte_end":6209,"line_start":140,"line_end":140,"column_start":1,"column_end":89}},{"value":"/ [in-process channel](transport::channel), tarpc also ships a generic [`serde_transport`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6210,"byte_end":6302,"line_start":141,"line_end":141,"column_start":1,"column_end":93}},{"value":"/ behind the `serde-transport` feature, with additional [TCP](serde_transport::tcp) functionality","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6303,"byte_end":6402,"line_start":142,"line_end":142,"column_start":1,"column_end":100}},{"value":"/ available behind the `tcp` feature.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6403,"byte_end":6442,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6443,"byte_end":6446,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6447,"byte_end":6458,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6459,"byte_end":6486,"line_start":146,"line_end":146,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6487,"byte_end":6507,"line_start":147,"line_end":147,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6508,"byte_end":6540,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6541,"byte_end":6562,"line_start":149,"line_end":149,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6563,"byte_end":6571,"line_start":150,"line_end":150,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6572,"byte_end":6590,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6591,"byte_end":6617,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Channel},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6618,"byte_end":6652,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6653,"byte_end":6661,"line_start":154,"line_end":154,"column_start":1,"column_end":9}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6662,"byte_end":6742,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6743,"byte_end":6827,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6828,"byte_end":6851,"line_start":157,"line_end":157,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6852,"byte_end":6871,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6872,"byte_end":6914,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6915,"byte_end":6964,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6965,"byte_end":6972,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ # // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":6973,"byte_end":7066,"line_start":162,"line_end":162,"column_start":1,"column_end":94}},{"value":"/ # // and is used to start the server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7067,"byte_end":7108,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7109,"byte_end":7131,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/ # struct HelloServer;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7132,"byte_end":7157,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/ # impl World for HelloServer {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7158,"byte_end":7192,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"/ #     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7193,"byte_end":7286,"line_start":167,"line_end":167,"column_start":1,"column_end":94}},{"value":"/ #     // an associated type representing the future output by the fn.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7287,"byte_end":7360,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ #     type HelloFut = Ready<String>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7361,"byte_end":7401,"line_start":169,"line_end":169,"column_start":1,"column_end":41}},{"value":"/ #     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7402,"byte_end":7481,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ #         future::ready(format!(\"Hello, {}!\", name))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7482,"byte_end":7538,"line_start":171,"line_end":171,"column_start":1,"column_end":57}},{"value":"/ #     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7539,"byte_end":7550,"line_start":172,"line_end":172,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7551,"byte_end":7558,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"tokio1\"))]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7559,"byte_end":7596,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7597,"byte_end":7615,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(feature = \"tokio1\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7616,"byte_end":7648,"line_start":176,"line_end":176,"column_start":1,"column_end":33}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7649,"byte_end":7667,"line_start":177,"line_end":177,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> anyhow::Result<()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7668,"byte_end":7711,"line_start":178,"line_end":178,"column_start":1,"column_end":44}},{"value":"/     let (client_transport, server_transport) = tarpc::transport::channel::unbounded();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7712,"byte_end":7802,"line_start":179,"line_end":179,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7803,"byte_end":7806,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     let server = server::BaseChannel::with_defaults(server_transport);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7807,"byte_end":7881,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/     tokio::spawn(server.execute(HelloServer.serve()));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7882,"byte_end":7940,"line_start":182,"line_end":182,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7941,"byte_end":7944,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/     // WorldClient is generated by the #[tarpc::service] attribute. It has a constructor `new`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":7945,"byte_end":8043,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     // that takes a config and any Transport as input.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8044,"byte_end":8102,"line_start":185,"line_end":185,"column_start":1,"column_end":59}},{"value":"/     let mut client = WorldClient::new(client::Config::default(), client_transport).spawn();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8103,"byte_end":8198,"line_start":186,"line_end":186,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8199,"byte_end":8202,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/     // The client has an RPC method for each RPC defined in the annotated trait. It takes the same","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8203,"byte_end":8305,"line_start":188,"line_end":188,"column_start":1,"column_end":103}},{"value":"/     // args as defined, with the addition of a Context, which is always the first arg. The Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8306,"byte_end":8408,"line_start":189,"line_end":189,"column_start":1,"column_end":103}},{"value":"/     // specifies a deadline and trace information which can be helpful in debugging requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8409,"byte_end":8506,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/     let hello = client.hello(context::current(), \"Stim\".to_string()).await?;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8507,"byte_end":8587,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8588,"byte_end":8591,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", hello);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8592,"byte_end":8622,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8623,"byte_end":8626,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8627,"byte_end":8641,"line_start":195,"line_end":195,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8642,"byte_end":8647,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8648,"byte_end":8655,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8656,"byte_end":8659,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Service Documentation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8660,"byte_end":8688,"line_start":199,"line_end":199,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8689,"byte_end":8692,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Use `cargo doc` as you normally would to see the documentation created for all","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8693,"byte_end":8775,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ items expanded by a `service!` invocation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8776,"byte_end":8822,"line_start":202,"line_end":202,"column_start":1,"column_end":47}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8823,"byte_end":8845,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":8846,"byte_end":8880,"line_start":204,"line_end":204,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_transport","qualname":"::serde_transport","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":1301},{"krate":0,"index":1237},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":68},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":96}],"decl_id":null,"docs":" A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"serde-transport\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9037,"byte_end":9072,"line_start":214,"line_end":214,"column_start":1,"column_end":36}},{"value":"/ A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":15897,"byte_end":16050,"line_start":7,"line_end":7,"column_start":1,"column_end":154}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16052,"byte_end":16074,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16477,"byte_end":16486,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Transport","qualname":"::serde_transport::Transport","value":"Transport {  }","parent":null,"children":[{"krate":0,"index":1306}],"decl_id":null,"docs":" A transport that serializes to, and deserializes from, a byte stream.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16451,"byte_end":16465,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16477,"byte_end":16486,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"__Transport","qualname":"::serde_transport::_::__Transport","value":"__Transport {  }","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1274}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16451,"byte_end":16465,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16768,"byte_end":16775,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Transport<S, Item, SinkItem, Codec>>::get_ref","value":"pub fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16682,"byte_end":16756,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":18882,"byte_end":18885,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"new","qualname":"::serde_transport::new","value":"pub fn new<S, Item, SinkItem, Codec>(Framed<S, LengthDelimitedCodec>, Codec)\n-> Transport<S, Item, SinkItem, Codec> where S: AsyncWrite + AsyncRead,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new transport from a framed transport and a serialization codec.\n","sig":null,"attributes":[{"value":"/ Constructs a new transport from a framed transport and a serialization codec.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":18793,"byte_end":18874,"line_start":92,"line_end":92,"column_start":1,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":19745,"byte_end":19748,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"tcp","qualname":"::serde_transport::tcp","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":129},{"krate":0,"index":1377},{"krate":0,"index":1307},{"krate":0,"index":135},{"krate":0,"index":144},{"krate":0,"index":151},{"krate":0,"index":159},{"krate":0,"index":1463},{"krate":0,"index":1392},{"krate":0,"index":1386},{"krate":0,"index":168},{"krate":0,"index":176}],"decl_id":null,"docs":" TCP support for generic transport using Tokio.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":19615,"byte_end":19638,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ TCP support for generic transport using Tokio.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":19686,"byte_end":19736,"line_start":122,"line_end":122,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20300,"byte_end":20309,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"peer_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the peer address of the underlying TcpStream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20227,"byte_end":20284,"line_start":141,"line_end":141,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20492,"byte_end":20502,"line_start":146,"line_end":146,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the local address of the underlying TcpStream.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20418,"byte_end":20476,"line_start":145,"line_end":145,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20728,"byte_end":20735,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"name":"Connect","qualname":"::serde_transport::tcp::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384}],"decl_id":null,"docs":" A connection Future that also exposes the length-delimited framing config.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20698,"byte_end":20712,"line_start":152,"line_end":152,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20728,"byte_end":20735,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"name":"__Connect","qualname":"::serde_transport::tcp::_::__Connect","value":"__Connect {  }","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20698,"byte_end":20712,"line_start":152,"line_end":152,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21756,"byte_end":21762,"line_start":179,"line_end":179,"column_start":16,"column_end":22},"name":"config","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21666,"byte_end":21740,"line_start":178,"line_end":178,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21933,"byte_end":21943,"line_start":184,"line_end":184,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21846,"byte_end":21917,"line_start":183,"line_end":183,"column_start":9,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":22120,"byte_end":22127,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"connect","qualname":"::serde_transport::tcp::connect","value":"pub fn connect<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> Connect</*impl Trait*/, Item, SinkItem, CodecFn> where A: ToSocketAddrs,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Connects to `addr`, wrapping the connection in a TCP transport.\n","sig":null,"attributes":[{"value":"/ Connects to `addr`, wrapping the connection in a TCP transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":22041,"byte_end":22108,"line_start":189,"line_end":189,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":22777,"byte_end":22783,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"listen","qualname":"::serde_transport::tcp::listen","value":"pub async fn listen<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> /*impl Trait*/ where A: ToSocketAddrs, Item: for<'de> Deserialize,\nCodec: Serializer<SinkItem> + Deserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Listens on `addr`, wrapping accepted connections in TCP transports.\n","sig":null,"attributes":[{"value":"/ Listens on `addr`, wrapping accepted connections in TCP transports.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":22688,"byte_end":22759,"line_start":209,"line_end":209,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23528,"byte_end":23536,"line_start":234,"line_end":234,"column_start":16,"column_end":24},"name":"Incoming","qualname":"::serde_transport::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"decl_id":null,"docs":" A [`TcpListener`] that wraps connections in [transports](Transport).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23477,"byte_end":23491,"line_start":232,"line_end":232,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23528,"byte_end":23536,"line_start":234,"line_end":234,"column_start":16,"column_end":24},"name":"__Incoming","qualname":"::serde_transport::tcp::_::__Incoming","value":"__Incoming {  }","parent":null,"children":[{"krate":0,"index":1436}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23477,"byte_end":23491,"line_start":232,"line_end":232,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23926,"byte_end":23936,"line_start":244,"line_end":244,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::local_addr","value":"pub fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address being listened on.\n","sig":null,"attributes":[{"value":"/ Returns the address being listened on.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23868,"byte_end":23910,"line_start":243,"line_end":243,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24097,"byte_end":24103,"line_start":249,"line_end":249,"column_start":16,"column_end":22},"name":"config","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config","value":"pub fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24007,"byte_end":24081,"line_start":248,"line_end":248,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24274,"byte_end":24284,"line_start":254,"line_end":254,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config_mut","value":"pub fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24187,"byte_end":24258,"line_start":253,"line_end":253,"column_start":9,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::trace","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":1490},{"krate":0,"index":1494},{"krate":0,"index":1500},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1576},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1621},{"krate":0,"index":1624},{"krate":0,"index":1630},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1663},{"krate":0,"index":1668},{"krate":0,"index":1674},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" Provides building blocks for tracing distributed programs.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29005,"byte_end":29058,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Provides building blocks for tracing distributed programs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29060,"byte_end":29122,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29123,"byte_end":29126,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A trace is logically a tree of causally-related events called spans. Traces are tracked via a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29127,"byte_end":29224,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ [context](Context) that identifies the current trace, span, and parent of the current span.  In","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29225,"byte_end":29324,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ distributed systems, a context can be sent from client to server to connect events occurring on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29325,"byte_end":29424,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ either side.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29425,"byte_end":29441,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29442,"byte_end":29445,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate's design is based on [opencensus","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29446,"byte_end":29493,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ tracing](https://opencensus.io/core-concepts/tracing/).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29494,"byte_end":29553,"line_start":17,"line_end":17,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30186,"byte_end":30193,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Context","qualname":"::trace::Context","value":"Context { trace_id, span_id, sampling_decision }","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"decl_id":null,"docs":" A context for tracing the execution of processes, distributed or otherwise.","sig":null,"attributes":[{"value":"/ A context for tracing the execution of processes, distributed or otherwise.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29763,"byte_end":29842,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29843,"byte_end":29846,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Consists of a span identifying an event, an optional parent span identifying a causal event","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29847,"byte_end":29942,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ that triggered the current span, and a trace with which all related spans are associated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":29943,"byte_end":30036,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30375,"byte_end":30383,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"trace_id","qualname":"::trace::Context::trace_id","value":"trace::TraceId","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":" An identifier of the trace associated with the current context. A trace ID is typically\n created at a root span and passed along through all causal events.\n","sig":null,"attributes":[{"value":"/ An identifier of the trace associated with the current context. A trace ID is typically","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30200,"byte_end":30291,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"/ created at a root span and passed along through all causal events.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30296,"byte_end":30366,"line_start":36,"line_end":36,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30674,"byte_end":30681,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"span_id","qualname":"::trace::Context::span_id","value":"trace::SpanId","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":" An identifier of the current span. In typical RPC usage, a span is created by a client\n before making an RPC, and the span ID is sent to the server. The server is free to create\n its own spans, for which it sets the client's span as the parent span.\n","sig":null,"attributes":[{"value":"/ An identifier of the current span. In typical RPC usage, a span is created by a client","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30398,"byte_end":30488,"line_start":38,"line_end":38,"column_start":5,"column_end":95}},{"value":"/ before making an RPC, and the span ID is sent to the server. The server is free to create","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30493,"byte_end":30586,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ its own spans, for which it sets the client's span as the parent span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30591,"byte_end":30665,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31355,"byte_end":31372,"line_start":49,"line_end":49,"column_start":9,"column_end":26},"name":"sampling_decision","qualname":"::trace::Context::sampling_decision","value":"trace::SamplingDecision","parent":{"krate":0,"index":1490},"children":[],"decl_id":null,"docs":" Indicates whether a sampler has already decided whether or not to sample the trace\n associated with the Context. If `sampling_decision` is None, then a decision has not yet\n been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,\n an upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace,\n then the downstream samplers are expected to respect that decision and also sample the\n trace. Otherwise, the full trace would not be able to be reconstructed.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has already decided whether or not to sample the trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30695,"byte_end":30781,"line_start":42,"line_end":42,"column_start":5,"column_end":91}},{"value":"/ associated with the Context. If `sampling_decision` is None, then a decision has not yet","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30786,"byte_end":30878,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"/ been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30883,"byte_end":30977,"line_start":44,"line_end":44,"column_start":5,"column_end":99}},{"value":"/ an upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":30982,"byte_end":31074,"line_start":45,"line_end":45,"column_start":5,"column_end":97}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31079,"byte_end":31171,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ then the downstream samplers are expected to respect that decision and also sample the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31176,"byte_end":31266,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ trace. Otherwise, the full trace would not be able to be reconstructed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31271,"byte_end":31346,"line_start":48,"line_end":48,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31652,"byte_end":31659,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"TraceId","qualname":"::trace::TraceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit UUID identifying a trace. All spans caused by the same originating span share the\n same trace ID.\n","sig":null,"attributes":[{"value":"/ A 128-bit UUID identifying a trace. All spans caused by the same originating span share the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31395,"byte_end":31490,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ same trace ID.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31491,"byte_end":31509,"line_start":53,"line_end":53,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31970,"byte_end":31976,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"SpanId","qualname":"::trace::SpanId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.\n","sig":null,"attributes":[{"value":"/ A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31728,"byte_end":31827,"line_start":58,"line_end":58,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32810,"byte_end":32817,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::trace::SamplingDecision::Sampled","value":"SamplingDecision::Sampled","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" The associated span was sampled by its creating process. Child spans must also be sampled.\n","sig":null,"attributes":[{"value":"/ The associated span was sampled by its creating process. Child spans must also be sampled.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32711,"byte_end":32805,"line_start":73,"line_end":73,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32892,"byte_end":32901,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"name":"Unsampled","qualname":"::trace::SamplingDecision::Unsampled","value":"SamplingDecision::Unsampled","parent":{"krate":0,"index":1663},"children":[],"decl_id":null,"docs":" The associated span was not sampled by its creating process.\n","sig":null,"attributes":[{"value":"/ The associated span was not sampled by its creating process.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32823,"byte_end":32887,"line_start":75,"line_end":75,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32688,"byte_end":32704,"line_start":72,"line_end":72,"column_start":10,"column_end":26},"name":"SamplingDecision","qualname":"::trace::SamplingDecision","value":"pub enum SamplingDecision { Sampled, Unsampled, }","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1666}],"decl_id":null,"docs":" Indicates whether a sampler has decided whether or not to sample the trace associated with the\n Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an\n upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace, then\n the downstream samplers are expected to respect that decision and also sample the trace.\n Otherwise, the full trace would not be able to be reconstructed reliably.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has decided whether or not to sample the trace associated with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":31984,"byte_end":32082,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32083,"byte_end":32178,"line_start":64,"line_end":64,"column_start":1,"column_end":96}},{"value":"/ upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32179,"byte_end":32268,"line_start":65,"line_end":65,"column_start":1,"column_end":90}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace, then","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32269,"byte_end":32366,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ the downstream samplers are expected to respect that decision and also sample the trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32367,"byte_end":32459,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/ Otherwise, the full trace would not be able to be reconstructed reliably.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32460,"byte_end":32537,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"repr(u8)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32667,"byte_end":32678,"line_start":71,"line_end":71,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33408,"byte_end":33414,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"random","qualname":"<TraceId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random trace ID that can be assumed to be globally unique if `rng` generates\n actually-random numbers.\n","sig":null,"attributes":[{"value":"/ Returns a random trace ID that can be assumed to be globally unique if `rng` generates","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33273,"byte_end":33363,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ actually-random numbers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33368,"byte_end":33396,"line_start":92,"line_end":92,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33556,"byte_end":33563,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_none","qualname":"<TraceId>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the trace ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the trace ID is 0.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33505,"byte_end":33544,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33724,"byte_end":33730,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"random","qualname":"<SpanId>::random","value":"pub fn random<R: Rng>(&mut R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a random span ID that can be assumed to be unique within a single trace.\n","sig":null,"attributes":[{"value":"/ Returns a random span ID that can be assumed to be unique within a single trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33628,"byte_end":33712,"line_start":104,"line_end":104,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33869,"byte_end":33876,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"is_none","qualname":"<SpanId>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the span ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the span ID is 0.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33819,"byte_end":33857,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36454,"byte_end":36466,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"NoActiveSpan","qualname":"::trace::NoActiveSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).\n","sig":null,"attributes":[{"value":"/ Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36340,"byte_end":36425,"line_start":212,"line_end":212,"column_start":1,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":272},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":1879},{"krate":0,"index":1885},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":2039},{"krate":0,"index":1976},{"krate":0,"index":1971},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":450},{"krate":0,"index":486},{"krate":0,"index":2304},{"krate":0,"index":2312},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" Provides a client that connects to a server and sends multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a client that connects to a server and sends multiplexed requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":37760,"byte_end":37839,"line_start":7,"line_end":7,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70964,"byte_end":70985,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"DeadlineExceededError","qualname":"::client::in_flight_requests::DeadlineExceededError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The request exceeded its deadline.\n","sig":null,"attributes":[{"value":"/ The request exceeded its deadline.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70815,"byte_end":70853,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70889,"byte_end":70906,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"error(\"the request exceeded its deadline\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70907,"byte_end":70952,"line_start":34,"line_end":34,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38423,"byte_end":38429,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Config","qualname":"::client::Config","value":"Config { max_in_flight_requests, pending_request_buffer }","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842}],"decl_id":null,"docs":" Settings that control the behavior of the client.\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of the client.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38316,"byte_end":38369,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38394,"byte_end":38411,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38621,"byte_end":38643,"line_start":35,"line_end":35,"column_start":9,"column_end":31},"name":"max_in_flight_requests","qualname":"::client::Config::max_in_flight_requests","value":"usize","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" The number of requests that can be in flight at once.\n `max_in_flight_requests` controls the size of the map used by the client\n for storing pending requests.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be in flight at once.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38436,"byte_end":38493,"line_start":32,"line_end":32,"column_start":5,"column_end":62}},{"value":"/ `max_in_flight_requests` controls the size of the map used by the client","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38498,"byte_end":38574,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ for storing pending requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38579,"byte_end":38612,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38877,"byte_end":38899,"line_start":39,"line_end":39,"column_start":9,"column_end":31},"name":"pending_request_buffer","qualname":"::client::Config::pending_request_buffer","value":"usize","parent":{"krate":0,"index":1840},"children":[],"decl_id":null,"docs":" The number of requests that can be buffered client-side before being sent.\n `pending_requests_buffer` controls the size of the channel clients use\n to communicate with the request dispatch task.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be buffered client-side before being sent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38656,"byte_end":38734,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ `pending_requests_buffer` controls the size of the channel clients use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38739,"byte_end":38813,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ to communicate with the request dispatch task.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38818,"byte_end":38868,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39234,"byte_end":39243,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"NewClient","qualname":"::client::NewClient","value":"NewClient { client, dispatch }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A channel and dispatch pair. The dispatch drives the sending and receiving of requests\n and must be polled continuously or spawned.\n","sig":null,"attributes":[{"value":"/ A channel and dispatch pair. The dispatch drives the sending and receiving of requests","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39084,"byte_end":39174,"line_start":51,"line_end":51,"column_start":1,"column_end":91}},{"value":"/ and must be polled continuously or spawned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39175,"byte_end":39222,"line_start":52,"line_end":52,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39284,"byte_end":39290,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"client","qualname":"::client::NewClient::client","value":"C","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The new client.\n","sig":null,"attributes":[{"value":"/ The new client.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39256,"byte_end":39275,"line_start":54,"line_end":54,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39334,"byte_end":39342,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"dispatch","qualname":"::client::NewClient::dispatch","value":"D","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The client's dispatch.\n","sig":null,"attributes":[{"value":"/ The client's dispatch.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39299,"byte_end":39325,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39659,"byte_end":39664,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"spawn","qualname":"<NewClient<C, D>>::spawn","value":"pub fn spawn(Self) -> C","parent":null,"children":[],"decl_id":null,"docs":" Helper method to spawn the dispatch on the default executor.\n","sig":null,"attributes":[{"value":"/ Helper method to spawn the dispatch on the default executor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39498,"byte_end":39562,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39567,"byte_end":39593,"line_start":66,"line_end":66,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":40436,"byte_end":40443,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"Channel","qualname":"::client::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"decl_id":null,"docs":" Handles communication from the client to request dispatch.\n","sig":null,"attributes":[{"value":"/ Handles communication from the client to request dispatch.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":40345,"byte_end":40407,"line_start":93,"line_end":93,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":41417,"byte_end":41421,"line_start":124,"line_end":124,"column_start":18,"column_end":22},"name":"call","qualname":"<Channel<Req, Resp>>::call","value":"pub async fn call<'_, '_>(&'_ Self, context::Context, &'_ str, Req)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a request to the dispatch task to forward to the server, returning a [`Future`] that\n resolves to the response.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43573,"byte_end":43585,"line_start":179,"line_end":179,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::client::RpcError::Disconnected","value":"RpcError::Disconnected","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" The client disconnected from the server.\n","sig":null,"attributes":[{"value":"/ The client disconnected from the server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43468,"byte_end":43512,"line_start":177,"line_end":177,"column_start":5,"column_end":49}},{"value":"error(\"the client disconnected from the server\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43517,"byte_end":43568,"line_start":178,"line_end":178,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43684,"byte_end":43700,"line_start":182,"line_end":182,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::client::RpcError::DeadlineExceeded","value":"RpcError::DeadlineExceeded","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" The request exceeded its deadline.\n","sig":null,"attributes":[{"value":"/ The request exceeded its deadline.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43591,"byte_end":43629,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"error(\"the request exceeded its deadline\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43634,"byte_end":43679,"line_start":181,"line_end":181,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43807,"byte_end":43813,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"Server","qualname":"::client::RpcError::Server","value":"RpcError::Server(ServerError)","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" The server aborted request processing.\n","sig":null,"attributes":[{"value":"/ The server aborted request processing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43706,"byte_end":43748,"line_start":183,"line_end":183,"column_start":5,"column_end":47}},{"value":"error(\"the server aborted request processing\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43753,"byte_end":43802,"line_start":184,"line_end":184,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43453,"byte_end":43461,"line_start":176,"line_end":176,"column_start":10,"column_end":18},"name":"RpcError","qualname":"::client::RpcError","value":"pub enum RpcError { Disconnected, DeadlineExceeded, Server(ServerError), }","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1968}],"decl_id":null,"docs":" An error that can occur in the processing of an RPC. This is not request-specific errors but\n rather cross-cutting errors that can always occur.\n","sig":null,"attributes":[{"value":"/ An error that can occur in the processing of an RPC. This is not request-specific errors but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43257,"byte_end":43353,"line_start":173,"line_end":173,"column_start":1,"column_end":97}},{"value":"/ rather cross-cutting errors that can always occur.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43354,"byte_end":43408,"line_start":174,"line_end":174,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":45837,"byte_end":45840,"line_start":231,"line_end":231,"column_start":8,"column_end":11},"name":"new","qualname":"::client::new","value":"pub fn new<Req, Resp, C>(Config, C)\n-> NewClient<Channel<Req, Resp>, RequestDispatch<Req, Resp, C>> where\nC: Transport<ClientMessage<Req>, Response<Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel and dispatcher that manages the lifecycle of requests initiated by the\n channel.\n","sig":null,"attributes":[{"value":"/ Returns a channel and dispatcher that manages the lifecycle of requests initiated by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":45724,"byte_end":45816,"line_start":229,"line_end":229,"column_start":1,"column_end":93}},{"value":"/ channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":45817,"byte_end":45829,"line_start":230,"line_end":230,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":46816,"byte_end":46831,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"RequestDispatch","qualname":"::client::RequestDispatch","value":"RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046}],"decl_id":null,"docs":" Handles the lifecycle of requests, writing requests to the wire, managing cancellations,\n and dispatching responses to the appropriate channel.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":46773,"byte_end":46787,"line_start":260,"line_end":260,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":46816,"byte_end":46831,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"__RequestDispatch","qualname":"::client::_::__RequestDispatch","value":"__RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":46773,"byte_end":46787,"line_start":260,"line_end":260,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47627,"byte_end":47631,"line_start":284,"line_end":284,"column_start":5,"column_end":9},"name":"Read","qualname":"::client::ChannelError::Read","value":"ChannelError::Read(E)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not read from the transport.\n","sig":null,"attributes":[{"value":"/ Could not read from the transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47534,"byte_end":47572,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"error(\"could not read from the transport\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47577,"byte_end":47622,"line_start":283,"line_end":283,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47757,"byte_end":47762,"line_start":287,"line_end":287,"column_start":5,"column_end":10},"name":"Ready","qualname":"::client::ChannelError::Ready","value":"ChannelError::Ready(E)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not ready the transport for writes.\n","sig":null,"attributes":[{"value":"/ Could not ready the transport for writes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47650,"byte_end":47695,"line_start":285,"line_end":285,"column_start":5,"column_end":50}},{"value":"error(\"could not ready the transport for writes\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47700,"byte_end":47752,"line_start":286,"line_end":286,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47872,"byte_end":47877,"line_start":290,"line_end":290,"column_start":5,"column_end":10},"name":"Write","qualname":"::client::ChannelError::Write","value":"ChannelError::Write(E)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not write to the transport.\n","sig":null,"attributes":[{"value":"/ Could not write to the transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47781,"byte_end":47818,"line_start":288,"line_end":288,"column_start":5,"column_end":42}},{"value":"error(\"could not write to the transport\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47823,"byte_end":47867,"line_start":289,"line_end":289,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47981,"byte_end":47986,"line_start":293,"line_end":293,"column_start":5,"column_end":10},"name":"Flush","qualname":"::client::ChannelError::Flush","value":"ChannelError::Flush(E)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not flush the transport.\n","sig":null,"attributes":[{"value":"/ Could not flush the transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47896,"byte_end":47930,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"error(\"could not flush the transport\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47935,"byte_end":47976,"line_start":292,"line_end":292,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48124,"byte_end":48129,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Close","qualname":"::client::ChannelError::Close","value":"ChannelError::Close(E)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not close the write end of the transport.\n","sig":null,"attributes":[{"value":"/ Could not close the write end of the transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48005,"byte_end":48056,"line_start":294,"line_end":294,"column_start":5,"column_end":56}},{"value":"error(\"could not close the write end of the transport\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48061,"byte_end":48119,"line_start":295,"line_end":295,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48237,"byte_end":48242,"line_start":299,"line_end":299,"column_start":5,"column_end":10},"name":"Timer","qualname":"::client::ChannelError::Timer","value":"ChannelError::Timer(tokio::time::error::Error)","parent":{"krate":0,"index":2048},"children":[],"decl_id":null,"docs":" Could not poll expired requests.\n","sig":null,"attributes":[{"value":"/ Could not poll expired requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48148,"byte_end":48184,"line_start":297,"line_end":297,"column_start":5,"column_end":41}},{"value":"error(\"could not poll expired requests\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48189,"byte_end":48232,"line_start":298,"line_end":298,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47468,"byte_end":47480,"line_start":278,"line_end":278,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::client::ChannelError","value":"pub enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Read(E),\n    Ready(E),\n    Write(E),\n    Flush(E),\n    Close(E),\n    Timer(tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2077}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":47364,"byte_end":47423,"line_start":276,"line_end":276,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":500},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"context","qualname":"::context","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2341},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2385},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":536},{"krate":0,"index":538}],"decl_id":null,"docs":" Provides a request context that carries a deadline and trace context. This context is sent from\n client to server and is used by the server to enforce response deadlines.\n","sig":null,"attributes":[{"value":"/ Provides a request context that carries a deadline and trace context. This context is sent from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":74943,"byte_end":75042,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75043,"byte_end":75120,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75838,"byte_end":75845,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { deadline, trace_context }","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2334}],"decl_id":null,"docs":" A request context that carries request-scoped information like deadlines and trace information.\n It is sent from client to server and is used by the server to enforce response deadlines.","sig":null,"attributes":[{"value":"/ A request context that carries request-scoped information like deadlines and trace information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75360,"byte_end":75459,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ It is sent from client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75460,"byte_end":75553,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75554,"byte_end":75557,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The context should not be stored directly in a server implementation, because the context will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75558,"byte_end":75656,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ be different for each request in scope.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75657,"byte_end":75700,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75731,"byte_end":75748,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76077,"byte_end":76085,"line_start":31,"line_end":31,"column_start":9,"column_end":17},"name":"deadline","qualname":"::context::Context::deadline","value":"std::time::SystemTime","parent":{"krate":0,"index":2333},"children":[],"decl_id":null,"docs":" When the client expects the request to be complete by. The server should cancel the request\n if it is not complete by this time.\n","sig":null,"attributes":[{"value":"/ When the client expects the request to be complete by. The server should cancel the request","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75852,"byte_end":75947,"line_start":28,"line_end":28,"column_start":5,"column_end":100}},{"value":"/ if it is not complete by this time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":75952,"byte_end":75991,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"serde(default = \"ten_seconds_from_now\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76027,"byte_end":76066,"line_start":30,"line_end":30,"column_start":36,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76425,"byte_end":76438,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"trace_context","qualname":"::context::Context::trace_context","value":"trace::Context","parent":{"krate":0,"index":2333},"children":[],"decl_id":null,"docs":" Uniquely identifies requests originating from the same source.\n When a service handles a request by making requests itself, those requests should\n include the same `trace_id` as that included on the original request. This way,\n users can trace related actions across a distributed system.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies requests originating from the same source.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76103,"byte_end":76169,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ When a service handles a request by making requests itself, those requests should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76174,"byte_end":76259,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ include the same `trace_id` as that included on the original request. This way,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76264,"byte_end":76347,"line_start":34,"line_end":34,"column_start":5,"column_end":88}},{"value":"/ users can trace related actions across a distributed system.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76352,"byte_end":76416,"line_start":35,"line_end":35,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":529},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76694,"byte_end":76701,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"current","qualname":"::context::current","value":"pub fn current() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76592,"byte_end":76686,"line_start":45,"line_end":45,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":77016,"byte_end":77023,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"current","qualname":"<Context>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76910,"byte_end":77004,"line_start":60,"line_end":60,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":77471,"byte_end":77479,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"trace_id","qualname":"<Context>::trace_id","value":"pub fn trace_id(&Self) -> &TraceId","parent":null,"children":[],"decl_id":null,"docs":" Returns the ID of the request-scoped trace.\n","sig":null,"attributes":[{"value":"/ Returns the ID of the request-scoped trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":77412,"byte_end":77459,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":540},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":671},{"krate":0,"index":862},{"krate":0,"index":900},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":960},{"krate":0,"index":966},{"krate":0,"index":3116},{"krate":0,"index":3055},{"krate":0,"index":974},{"krate":0,"index":988},{"krate":0,"index":3245},{"krate":0,"index":3250},{"krate":0,"index":993},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3261},{"krate":0,"index":3271},{"krate":0,"index":1004},{"krate":0,"index":1011},{"krate":0,"index":1020},{"krate":0,"index":1025},{"krate":0,"index":3458},{"krate":0,"index":3417},{"krate":0,"index":1035},{"krate":0,"index":1047},{"krate":0,"index":3463},{"krate":0,"index":3468},{"krate":0,"index":1050},{"krate":0,"index":1059}],"decl_id":null,"docs":" Provides a server that concurrently handles many connections sending multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a server that concurrently handles many connections sending multiplexed requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":78704,"byte_end":78798,"line_start":7,"line_end":7,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":671},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"limits","qualname":"::server::limits","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":796}],"decl_id":null,"docs":" Provides functionality to apply server limits.\n","sig":null,"attributes":[{"value":"/ Provides functionality to apply server limits.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79328,"byte_end":79378,"line_start":30,"line_end":30,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":672},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channels_per_key","qualname":"::server::limits::channels_per_key","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":2545},{"krate":0,"index":2480},{"krate":0,"index":2475},{"krate":0,"index":2607},{"krate":0,"index":2559},{"krate":0,"index":2555},{"krate":0,"index":2612},{"krate":0,"index":2616},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":746},{"krate":0,"index":755},{"krate":0,"index":759},{"krate":0,"index":768},{"krate":0,"index":774},{"krate":0,"index":779},{"krate":0,"index":790}],"decl_id":null,"docs":" Provides functionality to limit the number of active channels.\n","sig":null,"attributes":[{"value":"/ Provides functionality to limit the number of active channels.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","byte_start":121017,"byte_end":121083,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122102,"byte_end":122119,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"MaxChannelsPerKey","qualname":"::server::limits::channels_per_key::MaxChannelsPerKey","value":"MaxChannelsPerKey {  }","parent":null,"children":[{"krate":0,"index":2554},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"decl_id":null,"docs":" An [`Incoming`](crate::server::incoming::Incoming) stream that drops new channels based on\n per-key limits.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122059,"byte_end":122073,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122102,"byte_end":122119,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"__MaxChannelsPerKey","qualname":"::server::limits::channels_per_key::_::__MaxChannelsPerKey","value":"__MaxChannelsPerKey {  }","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122059,"byte_end":122073,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122477,"byte_end":122491,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"TrackedChannel","qualname":"::server::limits::channels_per_key::TrackedChannel","value":"TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2610}],"decl_id":null,"docs":" A channel that is tracked by [`MaxChannelsPerKey`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122434,"byte_end":122448,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122477,"byte_end":122491,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"__TrackedChannel","qualname":"::server::limits::channels_per_key::_::__TrackedChannel","value":"__TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122434,"byte_end":122448,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124360,"byte_end":124367,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrackedChannel<C, K>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124318,"byte_end":124348,"line_start":125,"line_end":125,"column_start":5,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":796},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"requests_per_channel","qualname":"::server::limits::requests_per_channel","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":2789},{"krate":0,"index":2750},{"krate":0,"index":2747},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":2867},{"krate":0,"index":2828},{"krate":0,"index":2825},{"krate":0,"index":855},{"krate":0,"index":858}],"decl_id":null,"docs":" Provides a [channel](crate::server::Channel) that limits the number of in-flight requests.\n","sig":null,"attributes":[{"value":"/ Provides a [channel](crate::server::Channel) that limits the number of in-flight requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","byte_start":121111,"byte_end":121205,"line_start":4,"line_end":4,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136092,"byte_end":136103,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"MaxRequests","qualname":"::server::limits::requests_per_channel::MaxRequests","value":"MaxRequests {  }","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792}],"decl_id":null,"docs":" A [`Channel`] that limits the number of concurrent requests by throttling.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136049,"byte_end":136063,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136092,"byte_end":136103,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"__MaxRequests","qualname":"::server::limits::requests_per_channel::_::__MaxRequests","value":"__MaxRequests {  }","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136049,"byte_end":136063,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136243,"byte_end":136250,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MaxRequests<C>>::get_ref","value":"pub fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136201,"byte_end":136231,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136486,"byte_end":136489,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<MaxRequests<C>>::new","value":"pub fn new(C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MaxRequests` that wraps the given channel and limits concurrent requests to\n `max_in_flight_requests`.\n","sig":null,"attributes":[{"value":"/ Returns a new `MaxRequests` that wraps the given channel and limits concurrent requests to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136346,"byte_end":136440,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `max_in_flight_requests`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136445,"byte_end":136474,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139265,"byte_end":139286,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"MaxRequestsPerChannel","qualname":"::server::limits::requests_per_channel::MaxRequestsPerChannel","value":"MaxRequestsPerChannel {  }","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2869}],"decl_id":null,"docs":" An [`Incoming`](crate::server::incoming::Incoming) stream of channels that enforce limits on\n the number of in-flight requests.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139222,"byte_end":139236,"line_start":138,"line_end":138,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139265,"byte_end":139286,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"__MaxRequestsPerChannel","qualname":"::server::limits::requests_per_channel::_::__MaxRequestsPerChannel","value":"__MaxRequestsPerChannel {  }","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2852}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139222,"byte_end":139236,"line_start":138,"line_end":138,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":862},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"incoming","qualname":"::server::incoming","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":897}],"decl_id":null,"docs":" Provides helper methods for streams of Channels.\n","sig":null,"attributes":[{"value":"/ Provides helper methods for streams of Channels.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79396,"byte_end":79448,"line_start":33,"line_end":33,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":889},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":145820,"byte_end":145828,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"Incoming","qualname":"::server::incoming::Incoming","value":"Incoming<C>","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":895}],"decl_id":null,"docs":" An extension trait for [streams](futures::prelude::Stream) of [`Channels`](Channel).\n","sig":null,"attributes":[{"value":"/ An extension trait for [streams](futures::prelude::Stream) of [`Channels`](Channel).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":145721,"byte_end":145809,"line_start":11,"line_end":11,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":145940,"byte_end":145960,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"max_channels_per_key","qualname":"::server::incoming::Incoming::max_channels_per_key","value":"pub fn max_channels_per_key<K, KF>(Self, u32, KF)\n-> MaxChannelsPerKey<Self, K, KF> where K: fmt::Display + Eq + Hash + Clone +\nUnpin, KF: Fn(&C) -> K","parent":{"krate":0,"index":889},"children":[],"decl_id":null,"docs":" Enforces channel per-key limits.\n","sig":null,"attributes":[{"value":"/ Enforces channel per-key limits.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":145896,"byte_end":145932,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146248,"byte_end":146283,"line_start":27,"line_end":27,"column_start":8,"column_end":43},"name":"max_concurrent_requests_per_channel","qualname":"::server::incoming::Incoming::max_concurrent_requests_per_channel","value":"pub fn max_concurrent_requests_per_channel(Self, usize)\n-> MaxRequestsPerChannel<Self>","parent":{"krate":0,"index":889},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests per channel.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests per channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146185,"byte_end":146240,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146705,"byte_end":146712,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::incoming::Incoming::execute","value":"pub fn execute<S>(Self, S) -> TokioServerExecutor<Self, S> where\nS: Serve<C::Req, Resp = C::Resp>","parent":{"krate":0,"index":889},"children":[],"decl_id":null,"docs":" [Executes](Channel::execute) each incoming channel. Each channel will be handled\n concurrently by spawning on tokio's default executor, and each request will be also\n be spawned on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ [Executes](Channel::execute) each incoming channel. Each channel will be handled","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146388,"byte_end":146472,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ concurrently by spawning on tokio's default executor, and each request will be also","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146477,"byte_end":146564,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ be spawned on tokio's default executor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146569,"byte_end":146612,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146617,"byte_end":146643,"line_start":34,"line_end":34,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":900},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tokio","qualname":"::server::tokio","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","parent":null,"children":[{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":2923},{"krate":0,"index":2875},{"krate":0,"index":2871},{"krate":0,"index":923},{"krate":0,"index":2980},{"krate":0,"index":2932},{"krate":0,"index":2928},{"krate":0,"index":927},{"krate":0,"index":932},{"krate":0,"index":937},{"krate":0,"index":941},{"krate":0,"index":947}],"decl_id":null,"docs":" Provides convenience functionality for tokio-enabled applications.\n","sig":null,"attributes":[{"value":"/ Provides convenience functionality for tokio-enabled applications.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79468,"byte_end":79538,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79539,"byte_end":79565,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147363,"byte_end":147382,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"TokioServerExecutor","qualname":"::server::tokio::TokioServerExecutor","value":"TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2926}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) a [`TokioChannelExecutor`](TokioChannelExecutor)\n for each new channel. Returned by\n [`Incoming::execute`](crate::server::incoming::Incoming::execute).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147320,"byte_end":147334,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2899},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147363,"byte_end":147382,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"__TokioServerExecutor","qualname":"::server::tokio::_::__TokioServerExecutor","value":"__TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147320,"byte_end":147334,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147831,"byte_end":147851,"line_start":28,"line_end":28,"column_start":12,"column_end":32},"name":"TokioChannelExecutor","qualname":"::server::tokio::TokioChannelExecutor","value":"TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":2984},{"krate":0,"index":2983}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) each [response\n handler](super::InFlightRequest::execute) on tokio's default executor. Returned by\n [`Channel::execute`](crate::server::Channel::execute).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147788,"byte_end":147802,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147831,"byte_end":147851,"line_start":28,"line_end":28,"column_start":12,"column_end":32},"name":"__TokioChannelExecutor","qualname":"::server::tokio::_::__TokioChannelExecutor","value":"__TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147788,"byte_end":147802,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148560,"byte_end":148567,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"execute","qualname":"<Requests<C>>::execute","value":"pub fn execute<S>(Self, S) -> TokioChannelExecutor<Self, S> where\nS: Serve<C::Req, Resp = C::Resp> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes all requests using the given service function. Requests are handled concurrently\n by [spawning](::tokio::spawn) each handler on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ Executes all requests using the given service function. Requests are handled concurrently","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148375,"byte_end":148468,"line_start":54,"line_end":54,"column_start":5,"column_end":98}},{"value":"/ by [spawning](::tokio::spawn) each handler on tokio's default executor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148473,"byte_end":148548,"line_start":55,"line_end":55,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79730,"byte_end":79736,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Config","qualname":"::server::Config","value":"Config { pending_response_buffer }","parent":null,"children":[{"krate":0,"index":3050}],"decl_id":null,"docs":" Settings that control the behavior of [channels](Channel).\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of [channels](Channel).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79632,"byte_end":79694,"line_start":41,"line_end":41,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80011,"byte_end":80034,"line_start":47,"line_end":47,"column_start":9,"column_end":32},"name":"pending_response_buffer","qualname":"::server::Config::pending_response_buffer","value":"usize","parent":{"krate":0,"index":3049},"children":[],"decl_id":null,"docs":" Controls the buffer size of the in-process channel over which a server's handlers send\n responses to the [`Channel`]. In other words, this is the number of responses that can sit\n in the outbound queue before request handlers begin blocking.\n","sig":null,"attributes":[{"value":"/ Controls the buffer size of the in-process channel over which a server's handlers send","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79743,"byte_end":79833,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ responses to the [`Channel`]. In other words, this is the number of responses that can sit","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79838,"byte_end":79932,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/ in the outbound queue before request handlers begin blocking.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79937,"byte_end":80002,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80278,"byte_end":80285,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"channel","qualname":"<Config>::channel","value":"pub fn channel<Req, Resp, T>(Self, T) -> BaseChannel<Req, Resp, T> where\nT: Transport<Response<Resp>, ClientMessage<Req>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel backed by `transport` and configured with `self`.\n","sig":null,"attributes":[{"value":"/ Returns a channel backed by `transport` and configured with `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80195,"byte_end":80266,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":960},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80549,"byte_end":80554,"line_start":69,"line_end":69,"column_start":11,"column_end":16},"name":"Serve","qualname":"::server::Serve","value":"Serve<Req>","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965}],"decl_id":null,"docs":" Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.\n","sig":null,"attributes":[{"value":"/ Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80474,"byte_end":80538,"line_start":68,"line_end":68,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":962},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80597,"byte_end":80601,"line_start":71,"line_end":71,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Serve::Resp","value":"type Resp;","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" Type of response.\n","sig":null,"attributes":[{"value":"/ Type of response.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80566,"byte_end":80587,"line_start":70,"line_end":70,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":963},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80646,"byte_end":80649,"line_start":74,"line_end":74,"column_start":10,"column_end":13},"name":"Fut","qualname":"::server::Serve::Fut","value":"type Fut: Future<Output = Self::Resp>;","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" Type of response future.\n","sig":null,"attributes":[{"value":"/ Type of response future.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80608,"byte_end":80636,"line_start":73,"line_end":73,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80737,"byte_end":80743,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"method","qualname":"::server::Serve::method","value":"pub fn method(&Self, &Req) -> Option<&'static str>","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" Extracts a method name from the request.\n","sig":null,"attributes":[{"value":"/ Extracts a method name from the request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80685,"byte_end":80729,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80858,"byte_end":80863,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"serve","qualname":"::server::Serve::serve","value":"pub fn serve(Self, context::Context, Req) -> Self::Fut","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" Responds to a single request.\n","sig":null,"attributes":[{"value":"/ Responds to a single request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80817,"byte_end":80850,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":81864,"byte_end":81875,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"BaseChannel","qualname":"::server::BaseChannel","value":"BaseChannel {  }","parent":null,"children":[{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3121},{"krate":0,"index":3122}],"decl_id":null,"docs":" BaseChannel is the standard implementation of a [`Channel`].","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":81838,"byte_end":81852,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":81864,"byte_end":81875,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"__BaseChannel","qualname":"::server::_::__BaseChannel","value":"__BaseChannel {  }","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":81838,"byte_end":81852,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82400,"byte_end":82403,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<BaseChannel<Req, Resp, T>>::new","value":"pub fn new(Config, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with `config`.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with `config`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82311,"byte_end":82388,"line_start":124,"line_end":124,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82734,"byte_end":82747,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"with_defaults","qualname":"<BaseChannel<Req, Resp, T>>::with_defaults","value":"pub fn with_defaults(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with the defaults.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with the defaults.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82641,"byte_end":82722,"line_start":134,"line_end":134,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82917,"byte_end":82924,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82831,"byte_end":82905,"line_start":139,"line_end":139,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":83070,"byte_end":83081,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"get_pin_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_pin_ref","value":"pub fn get_pin_ref(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82984,"byte_end":83058,"line_start":144,"line_end":144,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85077,"byte_end":85091,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"TrackedRequest","qualname":"::server::TrackedRequest","value":"TrackedRequest { request, abort_registration, span }","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249}],"decl_id":null,"docs":" A request tracked by a [`Channel`].\n","sig":null,"attributes":[{"value":"/ A request tracked by a [`Channel`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85009,"byte_end":85048,"line_start":205,"line_end":205,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85147,"byte_end":85154,"line_start":209,"line_end":209,"column_start":9,"column_end":16},"name":"request","qualname":"::server::TrackedRequest::request","value":"Request<Req>","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" The request sent by the client.\n","sig":null,"attributes":[{"value":"/ The request sent by the client.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85103,"byte_end":85138,"line_start":208,"line_end":208,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85294,"byte_end":85312,"line_start":212,"line_end":212,"column_start":9,"column_end":27},"name":"abort_registration","qualname":"::server::TrackedRequest::abort_registration","value":"futures::future::AbortRegistration","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" A registration to abort a future when the [`Channel`] that produced this request stops\n tracking it.\n","sig":null,"attributes":[{"value":"/ A registration to abort a future when the [`Channel`] that produced this request stops","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85174,"byte_end":85264,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ tracking it.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85269,"byte_end":85285,"line_start":211,"line_end":211,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85408,"byte_end":85412,"line_start":214,"line_end":214,"column_start":9,"column_end":13},"name":"span","qualname":"::server::TrackedRequest::span","value":"tracing::Span","parent":{"krate":0,"index":3245},"children":[],"decl_id":null,"docs":" A span representing the server processing of this request.\n","sig":null,"attributes":[{"value":"/ A span representing the server processing of this request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85337,"byte_end":85399,"line_start":213,"line_end":213,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":993},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87420,"byte_end":87427,"line_start":240,"line_end":240,"column_start":11,"column_end":18},"name":"Channel","qualname":"::server::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002}],"decl_id":null,"docs":" The server end of an open connection with a client, receiving requests from, and sending\n responses to, the client. `Channel` is a [`Transport`] with request lifecycle management.","sig":null,"attributes":[{"value":"/ The server end of an open connection with a client, receiving requests from, and sending","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85423,"byte_end":85515,"line_start":217,"line_end":217,"column_start":1,"column_end":93}},{"value":"/ responses to, the client. `Channel` is a [`Transport`] with request lifecycle management.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85516,"byte_end":85609,"line_start":218,"line_end":218,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85610,"byte_end":85613,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The ways to use a Channel, in order of simplest to most complex, is:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85614,"byte_end":85686,"line_start":220,"line_end":220,"column_start":1,"column_end":73}},{"value":"/ 1. [`Channel::execute`] - Requires the `tokio1` feature. This method is best for those who","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85687,"byte_end":85781,"line_start":221,"line_end":221,"column_start":1,"column_end":95}},{"value":"/    do not have specific scheduling needs and whose services are `Send + 'static`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85782,"byte_end":85867,"line_start":222,"line_end":222,"column_start":1,"column_end":86}},{"value":"/ 2. [`Channel::requests`] - This method is best for those who need direct access to individual","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85868,"byte_end":85965,"line_start":223,"line_end":223,"column_start":1,"column_end":98}},{"value":"/    requests, or are not using `tokio`, or want control over [futures](Future) scheduling.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":85966,"byte_end":86059,"line_start":224,"line_end":224,"column_start":1,"column_end":94}},{"value":"/    [`Requests`] is a stream of [`InFlightRequests`](InFlightRequest), each which has an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86060,"byte_end":86151,"line_start":225,"line_end":225,"column_start":1,"column_end":92}},{"value":"/    [`execute`](InFlightRequest::execute) method. If using `execute`, request processing will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86152,"byte_end":86248,"line_start":226,"line_end":226,"column_start":1,"column_end":97}},{"value":"/    automatically cease when either the request deadline is reached or when a corresponding","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86249,"byte_end":86343,"line_start":227,"line_end":227,"column_start":1,"column_end":95}},{"value":"/    cancellation message is received by the Channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86344,"byte_end":86399,"line_start":228,"line_end":228,"column_start":1,"column_end":56}},{"value":"/ 3. [`Stream::next`](futures::stream::StreamExt::next) /","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86400,"byte_end":86459,"line_start":229,"line_end":229,"column_start":1,"column_end":60}},{"value":"/    [`Sink::send`](futures::sink::SinkExt::send) - A user is free to manually read requests","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86460,"byte_end":86554,"line_start":230,"line_end":230,"column_start":1,"column_end":95}},{"value":"/    from, and send responses into, a Channel in lieu of the previous methods. Channels stream","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86555,"byte_end":86651,"line_start":231,"line_end":231,"column_start":1,"column_end":97}},{"value":"/    [`TrackedRequests`](TrackedRequest), which, in addition to the request itself, contains the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86652,"byte_end":86750,"line_start":232,"line_end":232,"column_start":1,"column_end":99}},{"value":"/    server [`Span`] and request lifetime [`AbortRegistration`]. Wrapping response","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86751,"byte_end":86835,"line_start":233,"line_end":233,"column_start":1,"column_end":85}},{"value":"/    logic in an [`Abortable`] future using the abort registration will ensure that the response","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86836,"byte_end":86934,"line_start":234,"line_end":234,"column_start":1,"column_end":99}},{"value":"/    does not execute longer than the request deadline. The `Channel` itself will clean up","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":86935,"byte_end":87027,"line_start":235,"line_end":235,"column_start":1,"column_end":93}},{"value":"/    request state once either the deadline expires, or a cancellation message is received, or a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87028,"byte_end":87126,"line_start":236,"line_end":236,"column_start":1,"column_end":99}},{"value":"/    response is sent. Because there is no guarantee that a cancellation message will ever be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87127,"byte_end":87222,"line_start":237,"line_end":237,"column_start":1,"column_end":96}},{"value":"/    received for a request, or that requests come with reasonably short deadlines, services","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87223,"byte_end":87317,"line_start":238,"line_end":238,"column_start":1,"column_end":95}},{"value":"/    should strive to clean up Channel resources by sending a response for every request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87318,"byte_end":87409,"line_start":239,"line_end":239,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":994},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87571,"byte_end":87574,"line_start":245,"line_end":245,"column_start":10,"column_end":13},"name":"Req","qualname":"::server::Channel::Req","value":"type Req;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Type of request item.\n","sig":null,"attributes":[{"value":"/ Type of request item.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87536,"byte_end":87561,"line_start":244,"line_end":244,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":995},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87622,"byte_end":87626,"line_start":248,"line_end":248,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Channel::Resp","value":"type Resp;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Type of response sink item.\n","sig":null,"attributes":[{"value":"/ Type of response sink item.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87581,"byte_end":87612,"line_start":247,"line_end":247,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":996},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87669,"byte_end":87678,"line_start":251,"line_end":251,"column_start":10,"column_end":19},"name":"Transport","qualname":"::server::Channel::Transport","value":"type Transport;","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" The wrapped transport.\n","sig":null,"attributes":[{"value":"/ The wrapped transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87633,"byte_end":87659,"line_start":250,"line_end":250,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87726,"byte_end":87732,"line_start":254,"line_end":254,"column_start":8,"column_end":14},"name":"config","qualname":"::server::Channel::config","value":"pub fn config(&Self) -> &Config","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Configuration of the channel.\n","sig":null,"attributes":[{"value":"/ Configuration of the channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87685,"byte_end":87718,"line_start":253,"line_end":253,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87828,"byte_end":87846,"line_start":257,"line_end":257,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"::server::Channel::in_flight_requests","value":"pub fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Returns the number of in-flight requests over this channel.\n","sig":null,"attributes":[{"value":"/ Returns the number of in-flight requests over this channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87757,"byte_end":87820,"line_start":256,"line_end":256,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87926,"byte_end":87935,"line_start":260,"line_end":260,"column_start":8,"column_end":17},"name":"transport","qualname":"::server::Channel::transport","value":"pub fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Returns the transport underlying the channel.\n","sig":null,"attributes":[{"value":"/ Returns the transport underlying the channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87869,"byte_end":87918,"line_start":259,"line_end":259,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88360,"byte_end":88383,"line_start":269,"line_end":269,"column_start":8,"column_end":31},"name":"max_concurrent_requests","qualname":"::server::Channel::max_concurrent_requests","value":"pub fn max_concurrent_requests(Self, usize)\n-> limits::requests_per_channel::MaxRequests<Self> where Self: Sized","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests to `limit`. An error will be returned for requests\n over the concurrency limit.","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests to `limit`. An error will be returned for requests","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":87969,"byte_end":88062,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ over the concurrency limit.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88067,"byte_end":88098,"line_start":263,"line_end":263,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88103,"byte_end":88106,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Note that this is a very","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88111,"byte_end":88139,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/ simplistic throttling heuristic. It is easy to set a number that is too low for the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88144,"byte_end":88231,"line_start":266,"line_end":266,"column_start":5,"column_end":92}},{"value":"/ resources available to the server. For production use cases, a more advanced throttler is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88236,"byte_end":88329,"line_start":267,"line_end":267,"column_start":5,"column_end":98}},{"value":"/ likely needed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88334,"byte_end":88352,"line_start":268,"line_end":268,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88932,"byte_end":88940,"line_start":285,"line_end":285,"column_start":8,"column_end":16},"name":"requests","qualname":"::server::Channel::requests","value":"pub fn requests(Self) -> Requests<Self> where Self: Sized","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Returns a stream of requests that automatically handle request cancellation and response\n routing.","sig":null,"attributes":[{"value":"/ Returns a stream of requests that automatically handle request cancellation and response","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88594,"byte_end":88686,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ routing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88691,"byte_end":88703,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88708,"byte_end":88711,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This is a terminal operation. After calling `requests`, the channel cannot be retrieved,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88716,"byte_end":88808,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/ and the only way to complete requests is via [`Requests::execute`] or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88813,"byte_end":88886,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ [`InFlightRequest::execute`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":88891,"byte_end":88924,"line_start":284,"line_end":284,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89535,"byte_end":89542,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::Channel::execute","value":"pub fn execute<S>(Self, S)\n-> self::tokio::TokioChannelExecutor<Requests<Self>, S> where Self: Sized,\nS: Serve<Self::Req, Resp = Self::Resp> + Send + 'static, S::Fut: Send,\nSelf::Req: Send + 'static, Self::Resp: Send + 'static","parent":{"krate":0,"index":993},"children":[],"decl_id":null,"docs":" Runs the channel until completion by executing all requests using the given service\n function. Request handlers are run concurrently by [spawning](::tokio::spawn) on tokio's\n default executor.\n","sig":null,"attributes":[{"value":"/ Runs the channel until completion by executing all requests using the given service","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89232,"byte_end":89319,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/ function. Request handlers are run concurrently by [spawning](::tokio::spawn) on tokio's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89324,"byte_end":89416,"line_start":299,"line_end":299,"column_start":5,"column_end":97}},{"value":"/ default executor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89421,"byte_end":89442,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89447,"byte_end":89473,"line_start":301,"line_end":301,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90157,"byte_end":90166,"line_start":323,"line_end":323,"column_start":5,"column_end":14},"name":"Transport","qualname":"::server::ChannelError::Transport","value":"ChannelError::Transport(E)","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" An error occurred reading from, or writing to, the transport.\n","sig":null,"attributes":[{"value":"/ An error occurred reading from, or writing to, the transport.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90031,"byte_end":90096,"line_start":321,"line_end":321,"column_start":5,"column_end":70}},{"value":"error(\"an error occurred in the transport: {0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90101,"byte_end":90152,"line_start":322,"line_end":322,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90313,"byte_end":90318,"line_start":326,"line_end":326,"column_start":5,"column_end":10},"name":"Timer","qualname":"::server::ChannelError::Timer","value":"ChannelError::Timer(::tokio::time::error::Error)","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":" An error occurred while polling expired requests.\n","sig":null,"attributes":[{"value":"/ An error occurred while polling expired requests.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90185,"byte_end":90238,"line_start":324,"line_end":324,"column_start":5,"column_end":58}},{"value":"error(\"an error occurred while polling expired requests: {0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90243,"byte_end":90308,"line_start":325,"line_end":325,"column_start":5,"column_end":70}}]},{"kind":"Enum","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89965,"byte_end":89977,"line_start":317,"line_end":317,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::server::ChannelError","value":"pub enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Transport(E),\n    Timer(::tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":3277}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":89861,"byte_end":89920,"line_start":315,"line_end":315,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95648,"byte_end":95656,"line_start":485,"line_end":485,"column_start":12,"column_end":20},"name":"Requests","qualname":"::server::Requests","value":"Requests {  }","parent":null,"children":[{"krate":0,"index":3462},{"krate":0,"index":3460},{"krate":0,"index":3461}],"decl_id":null,"docs":" A stream of requests coming over a channel. `Requests` also drives the sending of responses, so\n it must be continually polled to ensure progress.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95622,"byte_end":95636,"line_start":484,"line_end":484,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95648,"byte_end":95656,"line_start":485,"line_end":485,"column_start":12,"column_end":20},"name":"__Requests","qualname":"::server::_::__Requests","value":"__Requests {  }","parent":null,"children":[{"krate":0,"index":3442},{"krate":0,"index":3443}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95622,"byte_end":95636,"line_start":484,"line_end":484,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":96068,"byte_end":96083,"line_start":502,"line_end":502,"column_start":12,"column_end":27},"name":"channel_pin_mut","qualname":"<Requests<C>>::channel_pin_mut","value":"pub fn channel_pin_mut<'a>(&'a mut Pin<&mut Self>) -> Pin<&'a mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95984,"byte_end":96056,"line_start":501,"line_end":501,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":96273,"byte_end":96294,"line_start":507,"line_end":507,"column_start":12,"column_end":33},"name":"pending_responses_mut","qualname":"<Requests<C>>::pending_responses_mut","value":"pub fn pending_responses_mut<'a>(&'a mut Pin<&mut Self>)\n-> &'a mut mpsc::Receiver<Response<C::Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":96189,"byte_end":96261,"line_start":506,"line_end":506,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99754,"byte_end":99769,"line_start":601,"line_end":601,"column_start":12,"column_end":27},"name":"InFlightRequest","qualname":"::server::InFlightRequest","value":"InFlightRequest {  }","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" A request produced by [Channel::requests].\n","sig":null,"attributes":[{"value":"/ A request produced by [Channel::requests].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99679,"byte_end":99725,"line_start":599,"line_end":599,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99963,"byte_end":99966,"line_start":608,"line_end":608,"column_start":12,"column_end":15},"name":"get","qualname":"<InFlightRequest<Req, Res>>::get","value":"pub fn get(&Self) -> &Request<Req>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the request.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99912,"byte_end":99951,"line_start":607,"line_end":607,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100719,"byte_end":100726,"line_start":623,"line_end":623,"column_start":18,"column_end":25},"name":"execute","qualname":"<InFlightRequest<Req, Res>>::execute","value":"pub async fn execute<S>(Self, S) -> /*impl Trait*/ where S: Serve<Req, Resp =\nRes>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [future](Future) that executes the request using the given [service\n function](Serve). The service function's output is automatically sent back to the [Channel]\n that yielded this request. The request will be executed in the scope of this request's\n context.","sig":null,"attributes":[{"value":"/ Returns a [future](Future) that executes the request using the given [service","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100034,"byte_end":100115,"line_start":612,"line_end":612,"column_start":5,"column_end":86}},{"value":"/ function](Serve). The service function's output is automatically sent back to the [Channel]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100120,"byte_end":100215,"line_start":613,"line_end":613,"column_start":5,"column_end":100}},{"value":"/ that yielded this request. The request will be executed in the scope of this request's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100220,"byte_end":100310,"line_start":614,"line_end":614,"column_start":5,"column_end":95}},{"value":"/ context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100315,"byte_end":100327,"line_start":615,"line_end":615,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100332,"byte_end":100335,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ The returned future will stop executing when the first of the following conditions is met:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100340,"byte_end":100434,"line_start":617,"line_end":617,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100439,"byte_end":100442,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ 1. The channel that yielded this request receives a [cancellation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100447,"byte_end":100516,"line_start":619,"line_end":619,"column_start":5,"column_end":74}},{"value":"/    message](ClientMessage::Cancel) for this request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100521,"byte_end":100577,"line_start":620,"line_end":620,"column_start":5,"column_end":61}},{"value":"/ 2. The request [deadline](crate::context::Context::deadline) is reached.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100582,"byte_end":100658,"line_start":621,"line_end":621,"column_start":5,"column_end":81}},{"value":"/ 3. The service function completes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":100663,"byte_end":100701,"line_start":622,"line_end":622,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1126}],"decl_id":null,"docs":" Provides a [`Transport`](sealed::Transport) trait as well as implementations.","sig":null,"attributes":[{"value":"/ Provides a [`Transport`](sealed::Transport) trait as well as implementations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150430,"byte_end":150511,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150512,"byte_end":150515,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The rpc crate is transport- and protocol-agnostic. Any transport that impls [`Transport`](sealed::Transport)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150516,"byte_end":150628,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ can be plugged in, using whatever protocol it wants.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150629,"byte_end":150685,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":1086},{"krate":0,"index":3581},{"krate":0,"index":3586},{"krate":0,"index":1089},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1105},{"krate":0,"index":3643},{"krate":0,"index":3594},{"krate":0,"index":3590},{"krate":0,"index":1108},{"krate":0,"index":1114}],"decl_id":null,"docs":" Transports backed by in-memory channels.\n","sig":null,"attributes":[{"value":"/ Transports backed by in-memory channels.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":151862,"byte_end":151906,"line_start":7,"line_end":7,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152287,"byte_end":152291,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Send","qualname":"::transport::channel::ChannelError::Send","value":"ChannelError::Send(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":" An error occurred sending over the channel.\n","sig":null,"attributes":[{"value":"/ An error occurred sending over the channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152176,"byte_end":152223,"line_start":17,"line_end":17,"column_start":5,"column_end":52}},{"value":"error(\"an error occurred sending over the channel\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152228,"byte_end":152282,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152157,"byte_end":152169,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::transport::channel::ChannelError","value":"pub enum ChannelError { Send(Box<dyn Error + Send + Sync + 'static>), }","parent":null,"children":[{"krate":0,"index":3578}],"decl_id":null,"docs":" Errors that occur in the sending or receiving of messages over a channel.\n","sig":null,"attributes":[{"value":"/ Errors that occur in the sending or receiving of messages over a channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152035,"byte_end":152112,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152462,"byte_end":152471,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::transport::channel::unbounded","value":"pub fn unbounded<SinkItem, Item>()\n-> (UnboundedChannel<SinkItem, Item>, UnboundedChannel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's\n [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152346,"byte_end":152440,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ [`Sink`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152441,"byte_end":152454,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152949,"byte_end":152965,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"UnboundedChannel","qualname":"::transport::channel::UnboundedChannel","value":"UnboundedChannel {  }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":" A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)\n and [`UnboundedReceiver`](mpsc::UnboundedReceiver).\n","sig":null,"attributes":[{"value":"/ A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152780,"byte_end":152864,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/ and [`UnboundedReceiver`](mpsc::UnboundedReceiver).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":152865,"byte_end":152920,"line_start":37,"line_end":37,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":154539,"byte_end":154546,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"bounded","qualname":"::transport::channel::bounded","value":"pub fn bounded<SinkItem, Item>(usize)\n-> (Channel<SinkItem, Item>, Channel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent\n through the other's [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":154401,"byte_end":154497,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ through the other's [`Sink`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":154498,"byte_end":154531,"line_start":86,"line_end":86,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155022,"byte_end":155029,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":3646},{"krate":0,"index":3647}],"decl_id":null,"docs":" A bi-directional channel backed by a [`Sender`](futures::channel::mpsc::Sender)\n and [`Receiver`](futures::channel::mpsc::Receiver).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":154979,"byte_end":154993,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3618},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155022,"byte_end":155029,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"__Channel","qualname":"::transport::channel::_::__Channel","value":"__Channel {  }","parent":null,"children":[{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":154979,"byte_end":154993,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150868,"byte_end":150877,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"name":"Transport","qualname":"::transport::sealed::Transport","value":"Transport<SinkItem, Item>","parent":null,"children":[{"krate":0,"index":1134}],"decl_id":null,"docs":" A bidirectional stream ([`Sink`] + [`Stream`]) of messages.\n","sig":null,"attributes":[{"value":"/ A bidirectional stream ([`Sink`] + [`Stream`]) of messages.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150790,"byte_end":150853,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151355,"byte_end":151369,"line_start":28,"line_end":28,"column_start":14,"column_end":28},"name":"TransportError","qualname":"::transport::sealed::Transport::TransportError","value":"type TransportError: Error + Send + Sync + 'static;","parent":{"krate":0,"index":1131},"children":[],"decl_id":null,"docs":" Associated type where clauses are not elaborated; this associated type allows users\n bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their\n bounds.\n","sig":null,"attributes":[{"value":"/ Associated type where clauses are not elaborated; this associated type allows users","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151133,"byte_end":151220,"line_start":25,"line_end":25,"column_start":9,"column_end":96}},{"value":"/ bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151229,"byte_end":151321,"line_start":26,"line_end":26,"column_start":9,"column_end":101}},{"value":"/ bounds.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151330,"byte_end":151341,"line_start":27,"line_end":27,"column_start":9,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3653},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12338,"byte_end":12345,"line_start":323,"line_end":323,"column_start":5,"column_end":12},"name":"Request","qualname":"::ClientMessage::Request","value":"ClientMessage::Request(Request<T>)","parent":{"krate":0,"index":3651},"children":[],"decl_id":null,"docs":" A request initiated by a user. The server responds to a request by invoking a\n service-provided request handler.  The handler completes with a [`response`](Response), which\n the server sends back to the client.\n","sig":null,"attributes":[{"value":"/ A request initiated by a user. The server responds to a request by invoking a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12105,"byte_end":12186,"line_start":320,"line_end":320,"column_start":5,"column_end":86}},{"value":"/ service-provided request handler.  The handler completes with a [`response`](Response), which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12191,"byte_end":12288,"line_start":321,"line_end":321,"column_start":5,"column_end":102}},{"value":"/ the server sends back to the client.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12293,"byte_end":12333,"line_start":322,"line_end":322,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12780,"byte_end":12786,"line_start":331,"line_end":331,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::ClientMessage::Cancel","value":"ClientMessage::Cancel { trace_context, request_id }","parent":{"krate":0,"index":3651},"children":[],"decl_id":null,"docs":" A command to cancel an in-flight request, automatically sent by the client when a response\n future is dropped.","sig":null,"attributes":[{"value":"/ A command to cancel an in-flight request, automatically sent by the client when a response","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12363,"byte_end":12457,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/ future is dropped.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12462,"byte_end":12484,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12489,"byte_end":12492,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ When received, the server will immediately cancel the main task (top-level future) of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12497,"byte_end":12590,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ request handler for the associated request. Any tasks spawned by the request handler will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12595,"byte_end":12688,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ not be canceled, because the framework layer does not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12693,"byte_end":12750,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/ know about them.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12755,"byte_end":12775,"line_start":330,"line_end":330,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":3651},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12082,"byte_end":12095,"line_start":319,"line_end":319,"column_start":10,"column_end":23},"name":"ClientMessage","qualname":"::ClientMessage","value":"pub enum ClientMessage<T> {\n    Request(Request<T>),\n    Cancel {\n            trace_context: trace::Context,\n            request_id: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":3653},{"krate":0,"index":3656}],"decl_id":null,"docs":" A message from a client to a server.\n","sig":null,"attributes":[{"value":"/ A message from a client to a server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11919,"byte_end":11959,"line_start":315,"line_end":315,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":12055,"byte_end":12072,"line_start":318,"line_end":318,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13313,"byte_end":13320,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"Request","qualname":"::Request","value":"Request { context, id, message }","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758}],"decl_id":null,"docs":" A request from a client to a server.\n","sig":null,"attributes":[{"value":"/ A request from a client to a server.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13135,"byte_end":13175,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13206,"byte_end":13223,"line_start":343,"line_end":343,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13401,"byte_end":13408,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"context","qualname":"::Request::context","value":"context::Context","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Trace context, deadline, and other cross-cutting concerns.\n","sig":null,"attributes":[{"value":"/ Trace context, deadline, and other cross-cutting concerns.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13330,"byte_end":13392,"line_start":346,"line_end":346,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13524,"byte_end":13526,"line_start":349,"line_end":349,"column_start":9,"column_end":11},"name":"id","qualname":"::Request::id","value":"u64","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Uniquely identifies the request across all requests sent over a single channel.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies the request across all requests sent over a single channel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13432,"byte_end":13515,"line_start":348,"line_end":348,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13567,"byte_end":13574,"line_start":351,"line_end":351,"column_start":9,"column_end":16},"name":"message","qualname":"::Request::message","value":"T","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" The request body.\n","sig":null,"attributes":[{"value":"/ The request body.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13537,"byte_end":13558,"line_start":350,"line_end":350,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3835},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13776,"byte_end":13784,"line_start":358,"line_end":358,"column_start":12,"column_end":20},"name":"Response","qualname":"::Response","value":"Response { request_id, message }","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3838}],"decl_id":null,"docs":" A response from a server to a client.\n","sig":null,"attributes":[{"value":"/ A response from a server to a client.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13582,"byte_end":13623,"line_start":354,"line_end":354,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13669,"byte_end":13686,"line_start":356,"line_end":356,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3837},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13848,"byte_end":13858,"line_start":360,"line_end":360,"column_start":9,"column_end":19},"name":"request_id","qualname":"::Response::request_id","value":"u64","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":" The ID of the request being responded to.\n","sig":null,"attributes":[{"value":"/ The ID of the request being responded to.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13794,"byte_end":13839,"line_start":359,"line_end":359,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13935,"byte_end":13942,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"name":"message","qualname":"::Response::message","value":"std::result::Result<T, ServerError>","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":" The response body, or an error if the request failed.\n","sig":null,"attributes":[{"value":"/ The response body, or an error if the request failed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13869,"byte_end":13926,"line_start":361,"line_end":361,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14267,"byte_end":14278,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"ServerError","qualname":"::ServerError","value":"ServerError { kind, detail }","parent":null,"children":[{"krate":0,"index":3994},{"krate":0,"index":3917}],"decl_id":null,"docs":" An error indicating the server aborted the request early, e.g., due to request throttling.\n","sig":null,"attributes":[{"value":"/ An error indicating the server aborted the request early, e.g., due to request throttling.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":13971,"byte_end":14065,"line_start":365,"line_end":365,"column_start":1,"column_end":95}},{"value":"error(\"{kind:?}: {detail}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14129,"byte_end":14159,"line_start":367,"line_end":367,"column_start":1,"column_end":31}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14160,"byte_end":14177,"line_start":368,"line_end":368,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3994},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14614,"byte_end":14618,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"name":"kind","qualname":"::ServerError::kind","value":"std::io::ErrorKind","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":" The type of error that occurred to fail the request.\n","sig":null,"attributes":[{"value":"serde(serialize_with = \"util::serde::serialize_io_error_kind_as_u32\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14333,"byte_end":14402,"line_start":373,"line_end":373,"column_start":9,"column_end":78}},{"value":"serde(deserialize_with = \"util::serde::deserialize_io_error_kind_from_u32\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14462,"byte_end":14537,"line_start":377,"line_end":377,"column_start":9,"column_end":84}},{"value":"/ The type of error that occurred to fail the request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14549,"byte_end":14605,"line_start":379,"line_end":379,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14715,"byte_end":14721,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"name":"detail","qualname":"::ServerError::detail","value":"std::string::String","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":" A message describing more detail about the error that occurred.\n","sig":null,"attributes":[{"value":"/ A message describing more detail about the error that occurred.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14639,"byte_end":14706,"line_start":381,"line_end":381,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14813,"byte_end":14821,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Request<T>>::deadline","value":"pub fn deadline(&Self) -> &SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline for this request.\n","sig":null,"attributes":[{"value":"/ Returns the deadline for this request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14759,"byte_end":14801,"line_start":386,"line_end":386,"column_start":5,"column_end":47}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16640,"byte_end":16649,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16893,"byte_end":16902,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":17558,"byte_end":17567,"line_start":52,"line_end":52,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":19303,"byte_end":19312,"line_start":108,"line_end":108,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20087,"byte_end":20096,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20173,"byte_end":20182,"line_start":140,"line_end":140,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20989,"byte_end":20996,"line_start":161,"line_end":161,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21620,"byte_end":21627,"line_start":177,"line_end":177,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23817,"byte_end":23825,"line_start":242,"line_end":242,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24430,"byte_end":24438,"line_start":259,"line_end":259,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32911,"byte_end":32918,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33259,"byte_end":33266,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33615,"byte_end":33621,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34042,"byte_end":34049,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34235,"byte_end":34241,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34356,"byte_end":34363,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34522,"byte_end":34529,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34667,"byte_end":34673,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34827,"byte_end":34833,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34951,"byte_end":34958,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":35298,"byte_end":35305,"line_start":176,"line_end":176,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":35681,"byte_end":35691,"line_start":187,"line_end":187,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36010,"byte_end":36026,"line_start":196,"line_end":196,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36261,"byte_end":36277,"line_start":206,"line_end":206,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36491,"byte_end":36498,"line_start":216,"line_end":216,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36648,"byte_end":36655,"line_start":223,"line_end":223,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36807,"byte_end":36813,"line_start":230,"line_end":230,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36963,"byte_end":36969,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70640,"byte_end":70656,"line_start":22,"line_end":22,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":71432,"byte_end":71448,"line_start":51,"line_end":51,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38928,"byte_end":38934,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39364,"byte_end":39373,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39941,"byte_end":39950,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":40736,"byte_end":40743,"line_start":103,"line_end":103,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":41000,"byte_end":41007,"line_start":113,"line_end":113,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43876,"byte_end":43884,"line_start":188,"line_end":188,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43990,"byte_end":44003,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":44719,"byte_end":44732,"line_start":212,"line_end":212,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48303,"byte_end":48318,"line_start":302,"line_end":302,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":57757,"byte_end":57772,"line_start":563,"line_end":563,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60142,"byte_end":60161,"line_start":627,"line_end":627,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60309,"byte_end":60325,"line_start":634,"line_end":634,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60455,"byte_end":60471,"line_start":640,"line_end":640,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76807,"byte_end":76815,"line_start":53,"line_end":53,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76896,"byte_end":76903,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":77854,"byte_end":77858,"line_start":88,"line_end":88,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/in_flight_requests.rs","byte_start":114502,"byte_end":114518,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/in_flight_requests.rs","byte_start":117620,"byte_end":117636,"line_start":122,"line_end":122,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122679,"byte_end":122686,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122864,"byte_end":122878,"line_start":63,"line_end":63,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123115,"byte_end":123129,"line_start":74,"line_end":74,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123793,"byte_end":123807,"line_start":97,"line_end":97,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123897,"byte_end":123911,"line_start":103,"line_end":103,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124291,"byte_end":124305,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124588,"byte_end":124605,"line_start":136,"line_end":136,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":125150,"byte_end":125167,"line_start":156,"line_end":156,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":128348,"byte_end":128365,"line_start":248,"line_end":248,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136180,"byte_end":136191,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136303,"byte_end":136314,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136656,"byte_end":136667,"line_start":49,"line_end":49,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":137879,"byte_end":137890,"line_start":83,"line_end":83,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":138584,"byte_end":138595,"line_start":109,"line_end":109,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":138679,"byte_end":138690,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139363,"byte_end":139384,"line_start":146,"line_end":146,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139626,"byte_end":139647,"line_start":159,"line_end":159,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146904,"byte_end":146905,"line_start":44,"line_end":44,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147444,"byte_end":147463,"line_start":17,"line_end":17,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147913,"byte_end":147932,"line_start":34,"line_end":34,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148074,"byte_end":148094,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148278,"byte_end":148286,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148783,"byte_end":148802,"line_start":64,"line_end":64,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":149379,"byte_end":149399,"line_start":84,"line_end":84,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80063,"byte_end":80069,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80182,"byte_end":80188,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80959,"byte_end":80960,"line_start":85,"line_end":85,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82219,"byte_end":82230,"line_start":120,"line_end":120,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":84876,"byte_end":84887,"line_start":199,"line_end":199,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90392,"byte_end":90403,"line_start":329,"line_end":329,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":93431,"byte_end":93442,"line_start":406,"line_end":406,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":94954,"byte_end":94965,"line_start":455,"line_end":455,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95084,"byte_end":95095,"line_start":461,"line_end":461,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95944,"byte_end":95952,"line_start":497,"line_end":497,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99537,"byte_end":99545,"line_start":590,"line_end":590,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99880,"byte_end":99895,"line_start":606,"line_end":606,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":101903,"byte_end":101911,"line_start":662,"line_end":662,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":153099,"byte_end":153115,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":153516,"byte_end":153532,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155203,"byte_end":155210,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155522,"byte_end":155529,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151470,"byte_end":151471,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/util.rs","byte_start":158895,"byte_end":158905,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/util.rs","byte_start":159279,"byte_end":159286,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14742,"byte_end":14749,"line_start":385,"line_end":385,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":15232,"byte_end":15236,"line_start":403,"line_end":403,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9140,"byte_end":9155,"line_start":216,"line_end":216,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":9166,"byte_end":9171,"line_start":218,"line_end":218,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11681,"byte_end":11687,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":272}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11697,"byte_end":11704,"line_start":304,"line_end":304,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":500}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11714,"byte_end":11720,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":540}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79387,"byte_end":79393,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":671}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","byte_start":121092,"byte_end":121108,"line_start":2,"line_end":2,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":672}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits.rs","byte_start":121214,"byte_end":121234,"line_start":5,"line_end":5,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":796}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79457,"byte_end":79465,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":862}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":79624,"byte_end":79629,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":900}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":11730,"byte_end":11739,"line_start":306,"line_end":306,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1063}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":150695,"byte_end":150702,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1064}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16640,"byte_end":16649,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":16893,"byte_end":16902,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1301},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":17558,"byte_end":17567,"line_start":52,"line_end":52,"column_start":63,"column_end":72},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1301},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":19303,"byte_end":19312,"line_start":108,"line_end":108,"column_start":53,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1301},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20087,"byte_end":20096,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1301},"to":{"krate":0,"index":124}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20173,"byte_end":20182,"line_start":140,"line_end":140,"column_start":33,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":20989,"byte_end":20996,"line_start":161,"line_end":161,"column_start":56,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":21620,"byte_end":21627,"line_start":177,"line_end":177,"column_start":38,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":23817,"byte_end":23825,"line_start":242,"line_end":242,"column_start":42,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/serde_transport.rs","byte_start":24430,"byte_end":24438,"line_start":259,"line_end":259,"column_start":53,"column_end":61},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1463},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":32911,"byte_end":32918,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33259,"byte_end":33266,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":33615,"byte_end":33621,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34042,"byte_end":34049,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34235,"byte_end":34241,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1621},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34356,"byte_end":34363,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34522,"byte_end":34529,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":61,"index":2915},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34667,"byte_end":34673,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1621},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34827,"byte_end":34833,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":61,"index":2933},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":34951,"byte_end":34958,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1490},"to":{"krate":2,"index":2970}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":35298,"byte_end":35305,"line_start":176,"line_end":176,"column_start":50,"column_end":57},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1490},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":35681,"byte_end":35691,"line_start":187,"line_end":187,"column_start":55,"column_end":65},"kind":{"Impl":{"id":46}},"from":{"krate":61,"index":2895},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36010,"byte_end":36026,"line_start":196,"line_end":196,"column_start":51,"column_end":67},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36261,"byte_end":36277,"line_start":206,"line_end":206,"column_start":18,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36491,"byte_end":36498,"line_start":216,"line_end":216,"column_start":23,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36648,"byte_end":36655,"line_start":223,"line_end":223,"column_start":21,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36807,"byte_end":36813,"line_start":230,"line_end":230,"column_start":23,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1621},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/trace.rs","byte_start":36963,"byte_end":36969,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1621},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":70640,"byte_end":70656,"line_start":22,"line_end":22,"column_start":24,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1717},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client/in_flight_requests.rs","byte_start":71432,"byte_end":71448,"line_start":51,"line_end":51,"column_start":12,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":38928,"byte_end":38934,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1840},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39364,"byte_end":39373,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":39941,"byte_end":39950,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":40736,"byte_end":40743,"line_start":103,"line_end":103,"column_start":27,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1879},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":41000,"byte_end":41007,"line_start":113,"line_end":113,"column_start":17,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43876,"byte_end":43884,"line_start":188,"line_end":188,"column_start":38,"column_end":46},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":43990,"byte_end":44003,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":44719,"byte_end":44732,"line_start":212,"line_end":212,"column_start":21,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":48303,"byte_end":48318,"line_start":302,"line_end":302,"column_start":20,"column_end":35},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":57757,"byte_end":57772,"line_start":563,"line_end":563,"column_start":31,"column_end":46},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2039},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60142,"byte_end":60161,"line_start":627,"line_end":627,"column_start":6,"column_end":25},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60309,"byte_end":60325,"line_start":634,"line_end":634,"column_start":6,"column_end":22},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/client.rs","byte_start":60455,"byte_end":60471,"line_start":640,"line_end":640,"column_start":17,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2323},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76807,"byte_end":76815,"line_start":53,"line_end":53,"column_start":18,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2389},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":76896,"byte_end":76903,"line_start":59,"line_end":59,"column_start":6,"column_end":13},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/context.rs","byte_start":77854,"byte_end":77858,"line_start":88,"line_end":88,"column_start":27,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":79,"index":503},"to":{"krate":0,"index":536}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/in_flight_requests.rs","byte_start":114502,"byte_end":114518,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/in_flight_requests.rs","byte_start":117620,"byte_end":117636,"line_start":122,"line_end":122,"column_start":15,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2394},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122679,"byte_end":122686,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2612},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":122864,"byte_end":122878,"line_start":63,"line_end":63,"column_start":23,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2607},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123115,"byte_end":123129,"line_start":74,"line_end":74,"column_start":27,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2607},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123793,"byte_end":123807,"line_start":97,"line_end":97,"column_start":25,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2607},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":123897,"byte_end":123911,"line_start":103,"line_end":103,"column_start":24,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2607},"to":{"krate":0,"index":993}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124291,"byte_end":124305,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":124588,"byte_end":124605,"line_start":136,"line_end":136,"column_start":15,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":125150,"byte_end":125167,"line_start":156,"line_end":156,"column_start":15,"column_end":32},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2545},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/channels_per_key.rs","byte_start":128348,"byte_end":128365,"line_start":248,"line_end":248,"column_start":26,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2545},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136180,"byte_end":136191,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136303,"byte_end":136314,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":136656,"byte_end":136667,"line_start":49,"line_end":49,"column_start":20,"column_end":31},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2789},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":137879,"byte_end":137890,"line_start":83,"line_end":83,"column_start":50,"column_end":61},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2789},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":138584,"byte_end":138595,"line_start":109,"line_end":109,"column_start":22,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2789},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":138679,"byte_end":138690,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2789},"to":{"krate":0,"index":993}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139363,"byte_end":139384,"line_start":146,"line_end":146,"column_start":9,"column_end":30},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/limits/requests_per_channel.rs","byte_start":139626,"byte_end":139647,"line_start":159,"line_end":159,"column_start":20,"column_end":41},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2867},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/incoming.rs","byte_start":146904,"byte_end":146905,"line_start":44,"line_end":44,"column_start":28,"column_end":29},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":898},"to":{"krate":0,"index":889}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147444,"byte_end":147463,"line_start":17,"line_end":17,"column_start":12,"column_end":31},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":147913,"byte_end":147932,"line_start":34,"line_end":34,"column_start":12,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148074,"byte_end":148094,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148278,"byte_end":148286,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":148783,"byte_end":148802,"line_start":64,"line_end":64,"column_start":28,"column_end":47},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2923},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server/tokio.rs","byte_start":149379,"byte_end":149399,"line_start":84,"line_end":84,"column_start":23,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2980},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80063,"byte_end":80069,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3049},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80182,"byte_end":80188,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":80959,"byte_end":80960,"line_start":85,"line_end":85,"column_start":40,"column_end":41},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":970},"to":{"krate":0,"index":960}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":82219,"byte_end":82230,"line_start":120,"line_end":120,"column_start":20,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":84876,"byte_end":84887,"line_start":199,"line_end":199,"column_start":35,"column_end":46},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":90392,"byte_end":90403,"line_start":329,"line_end":329,"column_start":31,"column_end":42},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3116},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":93431,"byte_end":93442,"line_start":406,"line_end":406,"column_start":45,"column_end":56},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3116},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":94954,"byte_end":94965,"line_start":455,"line_end":455,"column_start":33,"column_end":44},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":2954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95084,"byte_end":95095,"line_start":461,"line_end":461,"column_start":32,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3116},"to":{"krate":0,"index":993}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":95944,"byte_end":95952,"line_start":497,"line_end":497,"column_start":9,"column_end":17},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99537,"byte_end":99545,"line_start":590,"line_end":590,"column_start":24,"column_end":32},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3458},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":99880,"byte_end":99895,"line_start":606,"line_end":606,"column_start":16,"column_end":31},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/server.rs","byte_start":101903,"byte_end":101911,"line_start":662,"line_end":662,"column_start":20,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3458},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":153099,"byte_end":153115,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3581},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":153516,"byte_end":153532,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3581},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155203,"byte_end":155210,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3643},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport/channel.rs","byte_start":155522,"byte_end":155529,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3643},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/transport.rs","byte_start":151470,"byte_end":151471,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1136},"to":{"krate":0,"index":1131}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/util.rs","byte_start":158895,"byte_end":158905,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":178}},"from":{"krate":1,"index":12012},"to":{"krate":0,"index":1184}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/util.rs","byte_start":159279,"byte_end":159286,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":14742,"byte_end":14749,"line_start":385,"line_end":385,"column_start":9,"column_end":16},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.27.2/src/lib.rs","byte_start":15232,"byte_end":15236,"line_start":403,"line_end":403,"column_start":31,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":2,"index":42600},"to":{"krate":0,"index":1218}}]}