{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","stream_cancel","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=cbaffb235627dd59","-C","extra-filename=-cbaffb235627dd59","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","futures_core=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfutures_core-3c038090bb1052ed.rmeta","--extern","pin_project=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libpin_project-3c1d3caf9f40b2e4.rmeta","--extern","tokio=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libtokio-ab0c170bd08d986a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libstream_cancel-cbaffb235627dd59.rmeta"},"prelude":{"crate_id":{"name":"stream_cancel","disambiguator":[15022259121275014149,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":20,"id":{"name":"tokio","disambiguator":[3680146692382752510,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":21,"id":{"name":"parking_lot","disambiguator":[5007731362612173479,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":22,"id":{"name":"instant","disambiguator":[15723746951671031144,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":24,"id":{"name":"lock_api","disambiguator":[12015075101561171174,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":25,"id":{"name":"scopeguard","disambiguator":[3001932468802176528,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[931216837901866193,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":27,"id":{"name":"smallvec","disambiguator":[6636852960227244077,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[4746252012921055962,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[10811595795888566755,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":30,"id":{"name":"mio","disambiguator":[946356350541395615,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":31,"id":{"name":"log","disambiguator":[4656748892604770465,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[1173452260237162938,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":33,"id":{"name":"once_cell","disambiguator":[16438231570947150907,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[15978592266059792097,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":35,"id":{"name":"memchr","disambiguator":[13028180200298329348,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":36,"id":{"name":"num_cpus","disambiguator":[1020557586879873658,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[7306478639986397422,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","num":38,"id":{"name":"futures_core","disambiguator":[4012493577413133877,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","num":39,"id":{"name":"pin_project","disambiguator":[2871727040521499454,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","num":40,"id":{"name":"pin_project_internal","disambiguator":[16225396094756153947,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":0,"byte_end":12225,"line_start":1,"line_end":332,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4725,"byte_end":4734,"line_start":122,"line_end":122,"column_start":29,"column_end":38},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4736,"byte_end":4747,"line_start":122,"line_end":122,"column_start":40,"column_end":51},"alias_span":null,"name":"TakeUntilIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":229},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4749,"byte_end":4757,"line_start":122,"line_end":122,"column_start":53,"column_end":61},"alias_span":null,"name":"Tripwire","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":309},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4785,"byte_end":4790,"line_start":123,"line_end":123,"column_start":26,"column_end":31},"alias_span":null,"name":"Valve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4792,"byte_end":4798,"line_start":123,"line_end":123,"column_start":33,"column_end":39},"alias_span":null,"name":"Valved","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":0,"byte_end":12225,"line_start":1,"line_end":332,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":66},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":129},{"krate":0,"index":132}],"decl_id":null,"docs":" This crate provides multiple mechanisms for interrupting a `Stream`.","sig":null,"attributes":[{"value":"/ This crate provides multiple mechanisms for interrupting a `Stream`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":73,"byte_end":76,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Stream combinator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":77,"byte_end":100,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":101,"byte_end":104,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The extension trait [`StreamExt`] provides a single new `Stream` combinator: `take_until_if`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":105,"byte_end":202,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ [`StreamExt::take_until_if`] continues yielding elements from the underlying `Stream` until a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":203,"byte_end":300,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ `Future` resolves, and at that moment immediately yields `None` and stops producing further","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":301,"byte_end":396,"line_start":7,"line_end":7,"column_start":1,"column_end":96}},{"value":"/ elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":397,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":411,"byte_end":414,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For convenience, the crate also includes the [`Tripwire`] type, which produces a cloneable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":415,"byte_end":509,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ `Future` that can then be passed to `take_until_if`. When a new `Tripwire` is created, an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":510,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":94}},{"value":"/ associated [`Trigger`] is also returned, which interrupts the `Stream` when it is dropped.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":604,"byte_end":698,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":699,"byte_end":702,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":703,"byte_end":706,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":707,"byte_end":714,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use stream_cancel::{StreamExt, Tripwire};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":715,"byte_end":760,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":761,"byte_end":789,"line_start":17,"line_end":17,"column_start":1,"column_end":29}},{"value":"/ use tokio_stream::wrappers::TcpListenerStream;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":790,"byte_end":840,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":841,"byte_end":844,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":845,"byte_end":863,"line_start":20,"line_end":20,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":864,"byte_end":885,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"/     let listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await.unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":886,"byte_end":969,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/     let (trigger, tripwire) = Tripwire::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":970,"byte_end":1020,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1021,"byte_end":1024,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1025,"byte_end":1058,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         let mut incoming = TcpListenerStream::new(listener).take_until_if(tripwire);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1059,"byte_end":1147,"line_start":26,"line_end":26,"column_start":1,"column_end":89}},{"value":"/         while let Some(mut s) = incoming.next().await.transpose().unwrap() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1148,"byte_end":1228,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1229,"byte_end":1270,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/                 let (mut r, mut w) = s.split();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1271,"byte_end":1322,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/                 println!(\"copied {} bytes\", tokio::io::copy(&mut r, &mut w).await.unwrap());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1323,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":97}},{"value":"/             });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1420,"byte_end":1439,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1440,"byte_end":1453,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1454,"byte_end":1465,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1466,"byte_end":1469,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     // tell the listener to stop accepting new connections","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1470,"byte_end":1532,"line_start":35,"line_end":35,"column_start":1,"column_end":63}},{"value":"/     drop(trigger);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1533,"byte_end":1555,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/     // the spawned async block will terminate cleanly, allowing main to return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1556,"byte_end":1638,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1639,"byte_end":1644,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1645,"byte_end":1652,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Stream wrapper","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1657,"byte_end":1677,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1678,"byte_end":1681,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Any stream can be wrapped in a [`Valved`], which enables it to be remotely terminated through","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1682,"byte_end":1779,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"/ an associated [`Trigger`]. This can be useful to implement graceful shutdown on \"infinite\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1780,"byte_end":1874,"line_start":44,"line_end":44,"column_start":1,"column_end":95}},{"value":"/ streams like a `TcpListener`. Once [`Trigger::cancel`] is called on the handle for a given","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1875,"byte_end":1969,"line_start":45,"line_end":45,"column_start":1,"column_end":95}},{"value":"/ stream's [`Valved`], the stream will yield `None` to indicate that it has terminated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":1970,"byte_end":2059,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2064,"byte_end":2071,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use stream_cancel::Valved;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2072,"byte_end":2102,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2103,"byte_end":2131,"line_start":50,"line_end":50,"column_start":1,"column_end":29}},{"value":"/ use tokio_stream::wrappers::TcpListenerStream;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2132,"byte_end":2182,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ use std::thread;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2183,"byte_end":2203,"line_start":52,"line_end":52,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2204,"byte_end":2207,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2208,"byte_end":2226,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2227,"byte_end":2248,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let (exit_tx, exit_rx) = tokio::sync::oneshot::channel();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2249,"byte_end":2314,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/     let listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await.unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2315,"byte_end":2398,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2399,"byte_end":2402,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2403,"byte_end":2436,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         let (exit, mut incoming) = Valved::new(TcpListenerStream::new(listener));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2437,"byte_end":2522,"line_start":60,"line_end":60,"column_start":1,"column_end":86}},{"value":"/         exit_tx.send(exit).unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2523,"byte_end":2563,"line_start":61,"line_end":61,"column_start":1,"column_end":41}},{"value":"/         while let Some(mut s) = incoming.next().await.transpose().unwrap() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2564,"byte_end":2644,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2645,"byte_end":2686,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/                 let (mut r, mut w) = s.split();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2687,"byte_end":2738,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/                 println!(\"copied {} bytes\", tokio::io::copy(&mut r, &mut w).await.unwrap());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2739,"byte_end":2835,"line_start":65,"line_end":65,"column_start":1,"column_end":97}},{"value":"/             });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2836,"byte_end":2855,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2856,"byte_end":2869,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2870,"byte_end":2881,"line_start":68,"line_end":68,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2882,"byte_end":2885,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     let exit = exit_rx.await;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2886,"byte_end":2919,"line_start":70,"line_end":70,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2920,"byte_end":2923,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // the server thread will normally never exit, since more connections","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":2924,"byte_end":3001,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/     // can always arrive. however, with a Valved, we can turn off the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3002,"byte_end":3075,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/     // stream of incoming connections to initiate a graceful shutdown","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3076,"byte_end":3149,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"/     drop(exit);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3150,"byte_end":3169,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3170,"byte_end":3175,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3176,"byte_end":3183,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3184,"byte_end":3187,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ You can share the same [`Trigger`] between multiple streams by first creating a [`Valve`],","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3188,"byte_end":3282,"line_start":79,"line_end":79,"column_start":1,"column_end":95}},{"value":"/ and then wrapping multiple streams using [`Valve::Wrap`]:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3283,"byte_end":3344,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3345,"byte_end":3348,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3349,"byte_end":3356,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use stream_cancel::Valve;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3357,"byte_end":3386,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3387,"byte_end":3415,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ use tokio_stream::wrappers::TcpListenerStream;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3416,"byte_end":3466,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3467,"byte_end":3470,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3471,"byte_end":3489,"line_start":87,"line_end":87,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3490,"byte_end":3511,"line_start":88,"line_end":88,"column_start":1,"column_end":22}},{"value":"/     let (exit, valve) = Valve::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3512,"byte_end":3553,"line_start":89,"line_end":89,"column_start":1,"column_end":42}},{"value":"/     let listener1 = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await.unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3554,"byte_end":3638,"line_start":90,"line_end":90,"column_start":1,"column_end":85}},{"value":"/     let listener2 = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await.unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3639,"byte_end":3723,"line_start":91,"line_end":91,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3724,"byte_end":3727,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3728,"byte_end":3761,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/         let incoming1 = valve.wrap(TcpListenerStream::new(listener1));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3762,"byte_end":3836,"line_start":94,"line_end":94,"column_start":1,"column_end":75}},{"value":"/         let incoming2 = valve.wrap(TcpListenerStream::new(listener2));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3837,"byte_end":3911,"line_start":95,"line_end":95,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3912,"byte_end":3915,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/         use futures_util::stream::select;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3916,"byte_end":3961,"line_start":97,"line_end":97,"column_start":1,"column_end":46}},{"value":"/         let mut incoming = select(incoming1, incoming2);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":3962,"byte_end":4022,"line_start":98,"line_end":98,"column_start":1,"column_end":61}},{"value":"/         while let Some(mut s) = incoming.next().await.transpose().unwrap() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4023,"byte_end":4103,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4104,"byte_end":4145,"line_start":100,"line_end":100,"column_start":1,"column_end":42}},{"value":"/                 let (mut r, mut w) = s.split();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4146,"byte_end":4197,"line_start":101,"line_end":101,"column_start":1,"column_end":52}},{"value":"/                 println!(\"copied {} bytes\", tokio::io::copy(&mut r, &mut w).await.unwrap());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4198,"byte_end":4294,"line_start":102,"line_end":102,"column_start":1,"column_end":97}},{"value":"/             });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4295,"byte_end":4314,"line_start":103,"line_end":103,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4315,"byte_end":4328,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4329,"byte_end":4340,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4341,"byte_end":4344,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     // the runtime will not become idle until both incoming1 and incoming2 have stopped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4345,"byte_end":4436,"line_start":107,"line_end":107,"column_start":1,"column_end":92}},{"value":"/     // (due to the select). this checks that they are indeed both interrupted when the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4437,"byte_end":4527,"line_start":108,"line_end":108,"column_start":1,"column_end":91}},{"value":"/     // valve is closed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4528,"byte_end":4555,"line_start":109,"line_end":109,"column_start":1,"column_end":28}},{"value":"/     drop(exit);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4556,"byte_end":4575,"line_start":110,"line_end":110,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4576,"byte_end":4581,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4582,"byte_end":4589,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4591,"byte_end":4613,"line_start":114,"line_end":114,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4614,"byte_end":4640,"line_start":115,"line_end":115,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12648,"byte_end":12659,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"TakeUntilIf","qualname":"::combinator::TakeUntilIf","value":"TakeUntilIf {  }","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":196}],"decl_id":null,"docs":" A stream combinator which takes elements from a stream until a future resolves.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12598,"byte_end":12612,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12648,"byte_end":12659,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__TakeUntilIf","qualname":"::combinator::_::__TakeUntilIf","value":"__TakeUntilIf {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12598,"byte_end":12612,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12879,"byte_end":12888,"line_start":25,"line_end":25,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::combinator::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":40}],"decl_id":null,"docs":" This `Stream` extension trait provides a `take_until_if` method that terminates the stream once\n the given future resolves.\n","sig":null,"attributes":[{"value":"/ This `Stream` extension trait provides a `take_until_if` method that terminates the stream once","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12738,"byte_end":12837,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ the given future resolves.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12838,"byte_end":12868,"line_start":24,"line_end":24,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14523,"byte_end":14536,"line_start":61,"line_end":61,"column_start":8,"column_end":21},"name":"take_until_if","qualname":"::combinator::StreamExt::take_until_if","value":"pub fn take_until_if<U>(Self, U) -> TakeUntilIf<Self, U> where\nU: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Take elements from this stream until the given future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the given future resolves.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12903,"byte_end":12970,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12975,"byte_end":12978,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This function takes elements from this stream until the given future resolves with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12983,"byte_end":13069,"line_start":28,"line_end":28,"column_start":5,"column_end":91}},{"value":"/ `true`. Once it resolves, the stream yields `None`, and produces no further elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13074,"byte_end":13163,"line_start":29,"line_end":29,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13168,"byte_end":13171,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If the future resolves with `false`, the stream is allowed to continue indefinitely.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13176,"byte_end":13264,"line_start":31,"line_end":31,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13269,"byte_end":13272,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This method is essentially a wrapper around `futures_util::stream::StreamExt::take_until`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13277,"byte_end":13370,"line_start":33,"line_end":33,"column_start":5,"column_end":98}},{"value":"/ that ascribes particular semantics to the output of the provided future.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13375,"byte_end":13451,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13456,"byte_end":13459,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13464,"byte_end":13471,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use stream_cancel::StreamExt;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13476,"byte_end":13509,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/ use futures::prelude::*;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13514,"byte_end":13542,"line_start":38,"line_end":38,"column_start":5,"column_end":33}},{"value":"/ use tokio_stream::wrappers::TcpListenerStream;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13547,"byte_end":13597,"line_start":39,"line_end":39,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13602,"byte_end":13605,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13610,"byte_end":13628,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13633,"byte_end":13654,"line_start":42,"line_end":42,"column_start":5,"column_end":26}},{"value":"/     let mut listener = tokio::net::TcpListener::bind(\"0.0.0.0:0\").await.unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13659,"byte_end":13744,"line_start":43,"line_end":43,"column_start":5,"column_end":90}},{"value":"/     let (tx, rx) = tokio::sync::oneshot::channel();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13749,"byte_end":13804,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13809,"byte_end":13812,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13817,"byte_end":13850,"line_start":46,"line_end":46,"column_start":5,"column_end":38}},{"value":"/         let mut incoming = TcpListenerStream::new(listener).take_until_if(rx.map(|_| true));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13855,"byte_end":13951,"line_start":47,"line_end":47,"column_start":5,"column_end":101}},{"value":"/         while let Some(mut s) = incoming.next().await.transpose().unwrap() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":13956,"byte_end":14036,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14041,"byte_end":14082,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/                 let (mut r, mut w) = s.split();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14087,"byte_end":14138,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/                 println!(\"copied {} bytes\", tokio::io::copy(&mut r, &mut w).await.unwrap());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14143,"byte_end":14239,"line_start":51,"line_end":51,"column_start":5,"column_end":101}},{"value":"/             });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14244,"byte_end":14263,"line_start":52,"line_end":52,"column_start":5,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14268,"byte_end":14281,"line_start":53,"line_end":53,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14286,"byte_end":14297,"line_start":54,"line_end":54,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14302,"byte_end":14305,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/     // tell the listener to stop accepting new connections","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14310,"byte_end":14372,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/     tx.send(()).unwrap();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14377,"byte_end":14406,"line_start":57,"line_end":57,"column_start":5,"column_end":34}},{"value":"/     // the spawned async block will terminate cleanly, allowing main to return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14411,"byte_end":14493,"line_start":58,"line_end":58,"column_start":5,"column_end":87}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14498,"byte_end":14503,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14508,"byte_end":14515,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":229},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16261,"byte_end":16269,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"Tripwire","qualname":"::combinator::Tripwire","value":"Tripwire {  }","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"decl_id":null,"docs":" A `Tripwire` is a convenient mechanism for implementing graceful shutdown over many\n asynchronous streams. A `Tripwire` is a `Future` that is `Clone`, and that can be passed to\n [`StreamExt::take_until_if`]. All `Tripwire` clones are associated with a single [`Trigger`],\n which is then used to signal that all the associated streams should be terminated.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16235,"byte_end":16249,"line_start":111,"line_end":111,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16261,"byte_end":16269,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"__Tripwire","qualname":"::combinator::_::__Tripwire","value":"__Tripwire {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16235,"byte_end":16249,"line_start":111,"line_end":111,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16897,"byte_end":16900,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Tripwire>::new","value":"pub fn new() -> (Trigger, Self)","parent":null,"children":[],"decl_id":null,"docs":" Make a new `Tripwire` and an associated [`Trigger`].\n","sig":null,"attributes":[{"value":"/ Make a new `Tripwire` and an associated [`Trigger`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16829,"byte_end":16885,"line_start":139,"line_end":139,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19127,"byte_end":19132,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Valve","qualname":"::wrapper::Valve","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Valve` is associated with a [`Trigger`], and can be used to wrap one or more\n asynchronous streams. All streams wrapped by a given `Valve` (or its clones) will be\n interrupted when [`Trigger::close`] is called on the valve's associated handle.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19077,"byte_end":19091,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":295},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19127,"byte_end":19132,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Valve","qualname":"::wrapper::_::__Valve","value":"__Valve {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19077,"byte_end":19091,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19234,"byte_end":19237,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Valve>::new","value":"pub fn new() -> (Trigger, Self)","parent":null,"children":[],"decl_id":null,"docs":" Make a new `Valve` and an associated [`Trigger`].\n","sig":null,"attributes":[{"value":"/ Make a new `Valve` and an associated [`Trigger`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19169,"byte_end":19222,"line_start":16,"line_end":16,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19540,"byte_end":19544,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Valve>::wrap","value":"pub fn wrap<S>(&Self, S) -> Valved<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Wrap the given `stream` with this `Valve`.","sig":null,"attributes":[{"value":"/ Wrap the given `stream` with this `Valve`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19334,"byte_end":19380,"line_start":22,"line_end":22,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19385,"byte_end":19388,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When [`Trigger::close`] is called on the handle associated with this valve, the given","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19393,"byte_end":19482,"line_start":24,"line_end":24,"column_start":5,"column_end":94}},{"value":"/ stream will immediately yield `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19487,"byte_end":19528,"line_start":25,"line_end":25,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19872,"byte_end":19883,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Valve>::poll_closed","value":"pub fn poll_closed(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check if the valve has been closed.","sig":null,"attributes":[{"value":"/ Check if the valve has been closed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19678,"byte_end":19717,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19722,"byte_end":19725,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ If `Ready`, contains `true` if the stream should be considered closed, and `false`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19730,"byte_end":19816,"line_start":35,"line_end":35,"column_start":5,"column_end":91}},{"value":"/ if the `Trigger` has been disabled.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19821,"byte_end":19860,"line_start":36,"line_end":36,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20392,"byte_end":20398,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"Valved","qualname":"::wrapper::Valved","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Valved` is wrapper around a `Stream` that enables the stream to be turned off remotely to\n initiate a graceful shutdown. When a new `Valved` is created with [`Valved::new`], a handle to\n that `Valved` is also produced; when [`Trigger::close`] is called on that handle, the\n wrapped stream will immediately yield `None` to indicate that it has completed.\n","sig":null,"attributes":[{"value":"/ A `Valved` is wrapper around a `Stream` that enables the stream to be turned off remotely to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19987,"byte_end":20083,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"/ initiate a graceful shutdown. When a new `Valved` is created with [`Valved::new`], a handle to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20084,"byte_end":20182,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ that `Valved` is also produced; when [`Trigger::close`] is called on that handle, the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20183,"byte_end":20272,"line_start":44,"line_end":44,"column_start":1,"column_end":90}},{"value":"/ wrapped stream will immediately yield `None` to indicate that it has completed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20273,"byte_end":20356,"line_start":45,"line_end":45,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20590,"byte_end":20593,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Valved<S>>::new","value":"pub fn new(S) -> (Trigger, Self) where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Make the given stream cancellable.","sig":null,"attributes":[{"value":"/ Make the given stream cancellable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20454,"byte_end":20492,"line_start":50,"line_end":50,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20497,"byte_end":20500,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ To cancel the stream, call [`Trigger::close`] on the returned handle.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20505,"byte_end":20578,"line_start":52,"line_end":52,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":322},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5070,"byte_end":5077,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"Trigger","qualname":"::Trigger","value":"","parent":null,"children":[],"decl_id":null,"docs":" A handle to a set of cancellable streams.","sig":null,"attributes":[{"value":"/ A handle to a set of cancellable streams.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4802,"byte_end":4847,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4848,"byte_end":4851,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ If the `Trigger` is dropped, any streams associated with it are interrupted (this is equivalent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4852,"byte_end":4951,"line_start":127,"line_end":127,"column_start":1,"column_end":100}},{"value":"/ to calling [`Trigger::cancel`]. To override this behavior, call [`Trigger::disable`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":4952,"byte_end":5041,"line_start":128,"line_end":128,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5214,"byte_end":5220,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"cancel","qualname":"<Trigger>::cancel","value":"pub fn cancel(Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel all associated streams, and make them immediately yield `None`.\n","sig":null,"attributes":[{"value":"/ Cancel all associated streams, and make them immediately yield `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5128,"byte_end":5202,"line_start":133,"line_end":133,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5354,"byte_end":5361,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"disable","qualname":"<Trigger>::disable","value":"pub fn disable(Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable the `Trigger`, and leave all associated streams running to completion.\n","sig":null,"attributes":[{"value":"/ Disable the `Trigger`, and leave all associated streams running to completion.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5260,"byte_end":5342,"line_start":138,"line_end":138,"column_start":5,"column_end":87}}]}],"impls":[{"id":5,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14784,"byte_end":14785,"line_start":74,"line_end":74,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14828,"byte_end":14839,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16507,"byte_end":16515,"line_start":123,"line_end":123,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16664,"byte_end":16672,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16814,"byte_end":16822,"line_start":138,"line_end":138,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":17138,"byte_end":17146,"line_start":152,"line_end":152,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":18388,"byte_end":18403,"line_start":185,"line_end":185,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19157,"byte_end":19162,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20438,"byte_end":20444,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20752,"byte_end":20758,"line_start":62,"line_end":62,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5114,"byte_end":5121,"line_start":132,"line_end":132,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5448,"byte_end":5455,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":12890,"byte_end":12896,"line_start":25,"line_end":25,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":38,"index":96},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14784,"byte_end":14785,"line_start":74,"line_end":74,"column_start":23,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":43},"to":{"krate":0,"index":39}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":14828,"byte_end":14839,"line_start":76,"line_end":76,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":193},"to":{"krate":38,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16507,"byte_end":16515,"line_start":123,"line_end":123,"column_start":16,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16664,"byte_end":16672,"line_start":132,"line_end":132,"column_start":21,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":16814,"byte_end":16822,"line_start":138,"line_end":138,"column_start":6,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":17138,"byte_end":17146,"line_start":152,"line_end":152,"column_start":17,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":229},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/combinator.rs","byte_start":18388,"byte_end":18403,"line_start":185,"line_end":185,"column_start":26,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":19157,"byte_end":19162,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20438,"byte_end":20444,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/wrapper.rs","byte_start":20752,"byte_end":20758,"line_start":62,"line_end":62,"column_start":20,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":312},"to":{"krate":38,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5114,"byte_end":5121,"line_start":132,"line_end":132,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/stream-cancel-0.8.1/src/lib.rs","byte_start":5448,"byte_end":5455,"line_start":145,"line_end":145,"column_start":15,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":322},"to":{"krate":2,"index":3300}}]}