{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","opentelemetry","--edition=2018","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"async-trait\"","--cfg","feature=\"crossbeam-channel\"","--cfg","feature=\"percent-encoding\"","--cfg","feature=\"pin-project\"","--cfg","feature=\"rand\"","--cfg","feature=\"trace\"","-C","metadata=9db7de60b664a4d5","-C","extra-filename=-9db7de60b664a4d5","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","async_trait=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libasync_trait-3b35e684dacea474.dylib","--extern","crossbeam_channel=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libcrossbeam_channel-b77e70164ceb51e5.rmeta","--extern","futures=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libfutures-f3324b5b4b5c9b4d.rmeta","--extern","lazy_static=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/liblazy_static-af4f64ef5f5bb31a.rmeta","--extern","percent_encoding=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libpercent_encoding-4713bb4b6382bb62.rmeta","--extern","pin_project=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libpin_project-3c1d3caf9f40b2e4.rmeta","--extern","rand=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/librand-57d37ab1f3a74d65.rmeta","--extern","thiserror=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libthiserror-c7ecac8e3ed05fc3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libopentelemetry-9db7de60b664a4d5.rmeta"},"prelude":{"crate_id":{"name":"opentelemetry","disambiguator":[12058143999304955168,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","num":2,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","num":20,"id":{"name":"async_trait","disambiguator":[16476123487015358150,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","num":21,"id":{"name":"percent_encoding","disambiguator":[1262089757298347482,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":22,"id":{"name":"rand","disambiguator":[11137246826035999640,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":23,"id":{"name":"rand_core","disambiguator":[4677866172908563295,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":24,"id":{"name":"getrandom","disambiguator":[17932864278009191628,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":25,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":26,"id":{"name":"libc","disambiguator":[4746252012921055962,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":27,"id":{"name":"rand_chacha","disambiguator":[12133928698714370424,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","num":28,"id":{"name":"ppv_lite86","disambiguator":[5856322367314168531,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":29,"id":{"name":"futures","disambiguator":[4664541987206414317,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":30,"id":{"name":"futures_core","disambiguator":[4012493577413133877,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":31,"id":{"name":"futures_util","disambiguator":[8554587919257822248,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":32,"id":{"name":"pin_utils","disambiguator":[1249738907960169761,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":33,"id":{"name":"futures_macro","disambiguator":[17747157522268669736,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":34,"id":{"name":"futures_task","disambiguator":[665949121450103632,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":35,"id":{"name":"futures_sink","disambiguator":[1625511151146650609,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":36,"id":{"name":"pin_project_lite","disambiguator":[10811595795888566755,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":37,"id":{"name":"futures_channel","disambiguator":[17804652917457386499,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":38,"id":{"name":"slab","disambiguator":[16586258314723481731,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":39,"id":{"name":"futures_io","disambiguator":[6452517159031921328,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":40,"id":{"name":"futures","disambiguator":[10251878124443451294,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":41,"id":{"name":"memchr","disambiguator":[13028180200298329348,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":42,"id":{"name":"futures_executor","disambiguator":[7037060880203300709,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","num":43,"id":{"name":"num_cpus","disambiguator":[1020557586879873658,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","num":44,"id":{"name":"thiserror","disambiguator":[4152554040384203565,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","num":45,"id":{"name":"thiserror_impl","disambiguator":[11709532727904576165,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","num":46,"id":{"name":"pin_project","disambiguator":[2871727040521499454,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","num":47,"id":{"name":"pin_project_internal","disambiguator":[16225396094756153947,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","num":48,"id":{"name":"lazy_static","disambiguator":[16187706137944756306,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","num":49,"id":{"name":"crossbeam_channel","disambiguator":[9663112012901306814,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","num":50,"id":{"name":"crossbeam_utils","disambiguator":[12022175608593352832,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","num":51,"id":{"name":"once_cell","disambiguator":[16438231570947150907,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":0,"byte_end":9983,"line_start":1,"line_end":270,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":20},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14833,"byte_end":14845,"line_start":146,"line_end":146,"column_start":25,"column_end":37},"alias_span":null,"name":"handle_error","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14847,"byte_end":14864,"line_start":146,"line_end":146,"column_start":39,"column_end":56},"alias_span":null,"name":"set_error_handler","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2114},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14866,"byte_end":14871,"line_start":146,"line_end":146,"column_start":58,"column_end":63},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15160,"byte_end":15183,"line_start":154,"line_end":154,"column_start":23,"column_end":46},"alias_span":null,"name":"get_text_map_propagator","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":35},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15185,"byte_end":15208,"line_start":154,"line_end":154,"column_start":48,"column_end":71},"alias_span":null,"name":"set_text_map_propagator","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15307,"byte_end":15334,"line_start":158,"line_end":158,"column_start":5,"column_end":32},"alias_span":null,"name":"force_flush_tracer_provider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15336,"byte_end":15355,"line_start":158,"line_end":158,"column_start":34,"column_end":53},"alias_span":null,"name":"set_tracer_provider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15357,"byte_end":15381,"line_start":158,"line_end":158,"column_start":55,"column_end":79},"alias_span":null,"name":"shutdown_tracer_provider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15383,"byte_end":15389,"line_start":158,"line_end":158,"column_start":81,"column_end":87},"alias_span":null,"name":"tracer","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15395,"byte_end":15410,"line_start":159,"line_end":159,"column_start":5,"column_end":20},"alias_span":null,"name":"tracer_provider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15412,"byte_end":15431,"line_start":159,"line_end":159,"column_start":22,"column_end":41},"alias_span":null,"name":"tracer_with_version","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2161},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15433,"byte_end":15442,"line_start":159,"line_end":159,"column_start":43,"column_end":52},"alias_span":null,"name":"BoxedSpan","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2166},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15444,"byte_end":15455,"line_start":159,"line_end":159,"column_start":54,"column_end":65},"alias_span":null,"name":"BoxedTracer","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15457,"byte_end":15470,"line_start":159,"line_end":159,"column_start":67,"column_end":80},"alias_span":null,"name":"GenericTracer","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15476,"byte_end":15497,"line_start":160,"line_end":160,"column_start":5,"column_end":26},"alias_span":null,"name":"GenericTracerProvider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2171},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":15499,"byte_end":15519,"line_start":160,"line_end":160,"column_start":28,"column_end":48},"alias_span":null,"name":"GlobalTracerProvider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2286},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","byte_start":52679,"byte_end":52696,"line_start":6,"line_end":6,"column_start":18,"column_end":35},"alias_span":null,"name":"BaggagePropagator","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":2292},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","byte_start":52717,"byte_end":52743,"line_start":7,"line_end":7,"column_start":20,"column_end":46},"alias_span":null,"name":"TextMapCompositePropagator","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":2313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","byte_start":52768,"byte_end":52790,"line_start":8,"line_end":8,"column_start":24,"column_end":46},"alias_span":null,"name":"TraceContextPropagator","value":"","parent":{"krate":0,"index":299}},{"kind":"Use","ref_id":{"krate":0,"index":2321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91964,"byte_end":91983,"line_start":29,"line_end":29,"column_start":14,"column_end":33},"alias_span":null,"name":"EnvResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2325},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91998,"byte_end":92025,"line_start":30,"line_end":30,"column_start":14,"column_end":41},"alias_span":null,"name":"SdkProvidedResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2326},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91998,"byte_end":92025,"line_start":30,"line_end":30,"column_start":14,"column_end":41},"alias_span":null,"name":"SdkProvidedResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2331},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92039,"byte_end":92057,"line_start":31,"line_end":31,"column_start":13,"column_end":31},"alias_span":null,"name":"OsResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2332},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92039,"byte_end":92057,"line_start":31,"line_end":31,"column_start":13,"column_end":31},"alias_span":null,"name":"OsResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2335},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92076,"byte_end":92099,"line_start":32,"line_end":32,"column_start":18,"column_end":41},"alias_span":null,"name":"ProcessResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":2336},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92076,"byte_end":92099,"line_start":32,"line_end":32,"column_start":18,"column_end":41},"alias_span":null,"name":"ProcessResourceDetector","value":"","parent":{"krate":0,"index":452}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107555,"byte_end":107561,"line_start":21,"line_end":21,"column_start":18,"column_end":24},"alias_span":null,"name":"config","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2361},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107563,"byte_end":107569,"line_start":21,"line_end":21,"column_start":26,"column_end":32},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2368},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107598,"byte_end":107612,"line_start":22,"line_end":22,"column_start":27,"column_end":41},"alias_span":null,"name":"EvictedHashMap","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2393},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107637,"byte_end":107649,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"alias_span":null,"name":"EvictedQueue","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2426},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107679,"byte_end":107694,"line_start":24,"line_end":24,"column_start":29,"column_end":44},"alias_span":null,"name":"XrayIdGenerator","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2432},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107696,"byte_end":107707,"line_start":24,"line_end":24,"column_start":46,"column_end":57},"alias_span":null,"name":"IdGenerator","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2456},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107729,"byte_end":107736,"line_start":25,"line_end":25,"column_start":20,"column_end":27},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2450},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107738,"byte_end":107752,"line_start":25,"line_end":25,"column_start":29,"column_end":43},"alias_span":null,"name":"TracerProvider","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":849},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107773,"byte_end":107785,"line_start":26,"line_end":26,"column_start":19,"column_end":31},"alias_span":null,"name":"TraceRuntime","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107787,"byte_end":107794,"line_start":26,"line_end":26,"column_start":33,"column_end":40},"alias_span":null,"name":"TrySend","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107815,"byte_end":107822,"line_start":27,"line_end":27,"column_start":19,"column_end":26},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107824,"byte_end":107840,"line_start":27,"line_end":27,"column_start":28,"column_end":44},"alias_span":null,"name":"SamplingDecision","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107842,"byte_end":107856,"line_start":27,"line_end":27,"column_start":46,"column_end":60},"alias_span":null,"name":"SamplingResult","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107858,"byte_end":107870,"line_start":27,"line_end":27,"column_start":62,"column_end":74},"alias_span":null,"name":"ShouldSample","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2504},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107887,"byte_end":107891,"line_start":28,"line_end":28,"column_start":15,"column_end":19},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2530},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107913,"byte_end":107923,"line_start":29,"line_end":29,"column_start":21,"column_end":31},"alias_span":null,"name":"SpanLimits","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2558},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107955,"byte_end":107966,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"alias_span":null,"name":"BatchConfig","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2546},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107968,"byte_end":107980,"line_start":31,"line_end":31,"column_start":18,"column_end":30},"alias_span":null,"name":"BatchMessage","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107982,"byte_end":108000,"line_start":31,"line_end":31,"column_start":32,"column_end":50},"alias_span":null,"name":"BatchSpanProcessor","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2565},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":108002,"byte_end":108027,"line_start":31,"line_end":31,"column_start":52,"column_end":77},"alias_span":null,"name":"BatchSpanProcessorBuilder","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2541},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":108029,"byte_end":108048,"line_start":31,"line_end":31,"column_start":79,"column_end":98},"alias_span":null,"name":"SimpleSpanProcessor","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":1031},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":108054,"byte_end":108067,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"alias_span":null,"name":"SpanProcessor","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2575},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":108088,"byte_end":108094,"line_start":34,"line_end":34,"column_start":17,"column_end":23},"alias_span":null,"name":"Tracer","value":"","parent":{"krate":0,"index":598}},{"kind":"Use","ref_id":{"krate":0,"index":2250},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41591,"byte_end":41613,"line_start":22,"line_end":22,"column_start":26,"column_end":48},"alias_span":null,"name":"InstrumentationLibrary","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41633,"byte_end":41641,"line_start":23,"line_end":23,"column_start":19,"column_end":27},"alias_span":null,"name":"Resource","value":"","parent":{"krate":0,"index":191}},{"kind":"Use","ref_id":{"krate":0,"index":2642},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9144,"byte_end":9151,"line_start":232,"line_end":232,"column_start":19,"column_end":26},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1421},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9153,"byte_end":9165,"line_start":232,"line_end":232,"column_start":28,"column_end":40},"alias_span":null,"name":"ContextGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9199,"byte_end":9204,"line_start":236,"line_end":236,"column_start":18,"column_end":23},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2657},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9206,"byte_end":9209,"line_start":236,"line_end":236,"column_start":25,"column_end":28},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2739},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9211,"byte_end":9219,"line_start":236,"line_end":236,"column_start":30,"column_end":38},"alias_span":null,"name":"KeyValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2707},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9221,"byte_end":9226,"line_start":236,"line_end":236,"column_start":40,"column_end":45},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1547},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266035,"byte_end":266052,"line_start":168,"line_end":168,"column_start":30,"column_end":47},"alias_span":null,"name":"TextMapPropagator","value":"","parent":{"krate":0,"index":1525}},{"kind":"Use","ref_id":{"krate":0,"index":1678},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275920,"byte_end":275935,"line_start":187,"line_end":187,"column_start":15,"column_end":30},"alias_span":null,"name":"get_active_span","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1676},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275937,"byte_end":275956,"line_start":187,"line_end":187,"column_start":32,"column_end":51},"alias_span":null,"name":"mark_span_as_active","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1699},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275958,"byte_end":275967,"line_start":187,"line_end":187,"column_start":53,"column_end":62},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2768},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275969,"byte_end":275976,"line_start":187,"line_end":187,"column_start":64,"column_end":71},"alias_span":null,"name":"SpanRef","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1660},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275978,"byte_end":275993,"line_start":187,"line_end":187,"column_start":73,"column_end":88},"alias_span":null,"name":"TraceContextExt","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276007,"byte_end":276011,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2862},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276013,"byte_end":276021,"line_start":188,"line_end":188,"column_start":18,"column_end":26},"alias_span":null,"name":"SpanKind","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2880},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276023,"byte_end":276033,"line_start":188,"line_end":188,"column_start":28,"column_end":38},"alias_span":null,"name":"StatusCode","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2992},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276055,"byte_end":276066,"line_start":189,"line_end":189,"column_start":20,"column_end":31},"alias_span":null,"name":"SpanContext","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2933},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276068,"byte_end":276074,"line_start":189,"line_end":189,"column_start":33,"column_end":39},"alias_span":null,"name":"SpanId","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2895},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276076,"byte_end":276086,"line_start":189,"line_end":189,"column_start":41,"column_end":51},"alias_span":null,"name":"TraceFlags","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2915},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276088,"byte_end":276095,"line_start":189,"line_end":189,"column_start":53,"column_end":60},"alias_span":null,"name":"TraceId","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2951},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276097,"byte_end":276107,"line_start":189,"line_end":189,"column_start":62,"column_end":72},"alias_span":null,"name":"TraceState","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2970},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276109,"byte_end":276124,"line_start":189,"line_end":189,"column_start":74,"column_end":89},"alias_span":null,"name":"TraceStateError","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276140,"byte_end":276151,"line_start":190,"line_end":190,"column_start":14,"column_end":25},"alias_span":null,"name":"SpanBuilder","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276153,"byte_end":276159,"line_start":190,"line_end":190,"column_start":27,"column_end":33},"alias_span":null,"name":"Tracer","value":"","parent":{"krate":0,"index":1578}},{"kind":"Use","ref_id":{"krate":0,"index":2004},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276183,"byte_end":276197,"line_start":191,"line_end":191,"column_start":22,"column_end":36},"alias_span":null,"name":"TracerProvider","value":"","parent":{"krate":0,"index":1578}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":0,"byte_end":9983,"line_start":1,"line_end":270,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":191},{"krate":0,"index":1276},{"krate":0,"index":1376},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1578},{"krate":0,"index":2098}],"decl_id":null,"docs":" OpenTelemetry provides a single set of APIs, libraries, agents, and collector\n services to capture distributed traces and metrics from your application. You\n can analyze them using [Prometheus], [Jaeger], and other observability tools.","sig":null,"attributes":[{"value":"/ OpenTelemetry provides a single set of APIs, libraries, agents, and collector","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":0,"byte_end":81,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ services to capture distributed traces and metrics from your application. You","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":82,"byte_end":163,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ can analyze them using [Prometheus], [Jaeger], and other observability tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":164,"byte_end":245,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":246,"byte_end":249,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ *Compiler support: [requires `rustc` 1.46+][msrv]*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":250,"byte_end":304,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":305,"byte_end":308,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [Prometheus]: https://prometheus.io","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":309,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/ [Jaeger]: https://www.jaegertracing.io","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":349,"byte_end":391,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/ [msrv]: #supported-rust-versions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":392,"byte_end":428,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":429,"byte_end":432,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Getting Started","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":433,"byte_end":454,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":455,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":459,"byte_end":472,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":473,"byte_end":504,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":505,"byte_end":512,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, sdk::export::trace::stdout, trace::Tracer};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":513,"byte_end":588,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":589,"byte_end":592,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":593,"byte_end":608,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     // Create a new trace pipeline that prints to stdout","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":609,"byte_end":669,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/     let tracer = stdout::new_pipeline().install_simple();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":670,"byte_end":731,"line_start":20,"line_end":20,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":732,"byte_end":735,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     tracer.in_span(\"doing_work\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":736,"byte_end":779,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/         // Traced app logic here...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":780,"byte_end":819,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":820,"byte_end":831,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":832,"byte_end":835,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     // Shutdown trace pipeline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":836,"byte_end":870,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/     global::shutdown_tracer_provider();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":871,"byte_end":914,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":915,"byte_end":920,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":921,"byte_end":928,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":929,"byte_end":936,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":937,"byte_end":940,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ See the [examples] directory for different integration patterns.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":941,"byte_end":1009,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [examples]: https://github.com/open-telemetry/opentelemetry-rust/tree/main/examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1014,"byte_end":1101,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1102,"byte_end":1105,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Traces","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1106,"byte_end":1118,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1119,"byte_end":1122,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`trace`] module includes types for tracking the progression of a single","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1123,"byte_end":1203,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ request while it is handled by services that make up an application. A trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1204,"byte_end":1284,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ is a tree of [`Span`]s which are objects that represent the work being done","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1285,"byte_end":1364,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ by individual services or components involved in a request as it flows","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1365,"byte_end":1439,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ through a system.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1440,"byte_end":1461,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1462,"byte_end":1465,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ### Creating and exporting spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1466,"byte_end":1502,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1503,"byte_end":1506,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1507,"byte_end":1514,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1515,"byte_end":1546,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1547,"byte_end":1554,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer}, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1555,"byte_end":1620,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1621,"byte_end":1624,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ // get a tracer from a provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1625,"byte_end":1660,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ let tracer = global::tracer(\"my_service\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1661,"byte_end":1707,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // start a new span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1712,"byte_end":1735,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"/ let mut span = tracer.start(\"my_span\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1736,"byte_end":1779,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1780,"byte_end":1783,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // set some attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1784,"byte_end":1810,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/ span.set_attribute(KeyValue::new(\"http.client_ip\", \"83.164.160.102\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1811,"byte_end":1885,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // perform some more work...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1890,"byte_end":1922,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1923,"byte_end":1926,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // end or drop the span to export","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1927,"byte_end":1964,"line_start":62,"line_end":62,"column_start":1,"column_end":38}},{"value":"/ span.end();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1965,"byte_end":1980,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1981,"byte_end":1988,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1989,"byte_end":1996,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":1997,"byte_end":2000,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See the [`trace`] module docs for more information on creating and managing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2001,"byte_end":2080,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ spans.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2081,"byte_end":2091,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2092,"byte_end":2095,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: crate::trace::Span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2096,"byte_end":2128,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2129,"byte_end":2132,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Metrics","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2133,"byte_end":2146,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2147,"byte_end":2150,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Note: the metrics specification is **still in progress** and **subject to major","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2151,"byte_end":2234,"line_start":74,"line_end":74,"column_start":1,"column_end":84}},{"value":"/ changes**.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2235,"byte_end":2249,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2250,"byte_end":2253,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The [`metrics`] module includes types for recording measurements about a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2254,"byte_end":2330,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ service at runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2331,"byte_end":2354,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2355,"byte_end":2358,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ### Creating instruments and recording measurements","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2359,"byte_end":2414,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2415,"byte_end":2418,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2419,"byte_end":2426,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"metrics\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2427,"byte_end":2460,"line_start":83,"line_end":83,"column_start":1,"column_end":34}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2461,"byte_end":2468,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2469,"byte_end":2511,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // get a meter from a provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2516,"byte_end":2550,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/ let meter = global::meter(\"my_service\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2551,"byte_end":2595,"line_start":88,"line_end":88,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2596,"byte_end":2599,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // create an instrument","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2600,"byte_end":2627,"line_start":90,"line_end":90,"column_start":1,"column_end":28}},{"value":"/ let counter = meter.u64_counter(\"my_counter\").init();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2628,"byte_end":2685,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2686,"byte_end":2689,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // record a measurement","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2690,"byte_end":2717,"line_start":93,"line_end":93,"column_start":1,"column_end":28}},{"value":"/ counter.add(1, &[KeyValue::new(\"http.client_ip\", \"83.164.160.102\")]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2718,"byte_end":2791,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2792,"byte_end":2799,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2800,"byte_end":2807,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2808,"byte_end":2811,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ See the [`metrics`] module docs for more information on creating and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2812,"byte_end":2884,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ managing instruments.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2885,"byte_end":2910,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2911,"byte_end":2914,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ## Crate Feature Flags","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2915,"byte_end":2941,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2942,"byte_end":2945,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ The following core crate feature flags are available:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":2946,"byte_end":3003,"line_start":103,"line_end":103,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3004,"byte_end":3007,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ * `trace`: Includes the trace API and SDK (enabled by default).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3008,"byte_end":3075,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/ * `metrics`: Includes the unstable metrics API and SDK.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3076,"byte_end":3135,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/ * `serialize`: Adds [serde] serializers for common types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3136,"byte_end":3197,"line_start":107,"line_end":107,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3198,"byte_end":3201,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Support for recording and exporting telemetry asynchronously can be added","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3202,"byte_end":3279,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ via the following flags:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3280,"byte_end":3308,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3309,"byte_end":3312,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ * `rt-tokio`: Spawn telemetry tasks using [tokio]'s multi-thread runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3313,"byte_end":3390,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ * `rt-tokio-current-thread`: Spawn telemetry tasks on a separate runtime so that the main runtime won't be blocked.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3391,"byte_end":3510,"line_start":113,"line_end":113,"column_start":1,"column_end":120}},{"value":"/ * `rt-async-std`: Spawn telemetry tasks using [async-std]'s runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3511,"byte_end":3583,"line_start":114,"line_end":114,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3584,"byte_end":3587,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ [tokio]: https://crates.io/crates/tokio","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3588,"byte_end":3631,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/ [async-std]: https://crates.io/crates/async-std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3632,"byte_end":3683,"line_start":117,"line_end":117,"column_start":1,"column_end":52}},{"value":"/ [serde]: https://crates.io/crates/serde","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3684,"byte_end":3727,"line_start":118,"line_end":118,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3728,"byte_end":3731,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ## Related Crates","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3732,"byte_end":3753,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ In addition to `opentelemetry`, the [`open-telemetry/opentelemetry-rust`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3758,"byte_end":3835,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ repository contains several additional crates designed to be used with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3836,"byte_end":3914,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ `opentelemetry` ecosystem. This includes a collection of trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3915,"byte_end":3981,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/ `SpanExporter` and metrics pull and push controller implementations, as well","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":3982,"byte_end":4062,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ as utility and adapter crates to assist in propagating state and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4063,"byte_end":4131,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/ instrumenting applications.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4132,"byte_end":4163,"line_start":127,"line_end":127,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4164,"byte_end":4167,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ In particular, the following crates are likely to be of interest:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4168,"byte_end":4237,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4238,"byte_end":4241,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ - [`opentelemetry-http`] provides an interface for injecting and extracting","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4242,"byte_end":4321,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/   trace information from [`http`] headers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4322,"byte_end":4368,"line_start":132,"line_end":132,"column_start":1,"column_end":47}},{"value":"/ - [`opentelemetry-jaeger`] provides a pipeline and exporter for sending","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4369,"byte_end":4444,"line_start":133,"line_end":133,"column_start":1,"column_end":76}},{"value":"/   trace information to [`Jaeger`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4445,"byte_end":4483,"line_start":134,"line_end":134,"column_start":1,"column_end":39}},{"value":"/ - [`opentelemetry-otlp`] exporter for sending trace and metric data in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4484,"byte_end":4562,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/   OTLP format to the OpenTelemetry collector.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4563,"byte_end":4612,"line_start":136,"line_end":136,"column_start":1,"column_end":50}},{"value":"/ - [`opentelemetry-prometheus`] provides a pipeline and exporter for sending","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4613,"byte_end":4692,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/   metrics information to [`Prometheus`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4693,"byte_end":4737,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ - [`opentelemetry-zipkin`] provides a pipeline and exporter for sending","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4738,"byte_end":4813,"line_start":139,"line_end":139,"column_start":1,"column_end":76}},{"value":"/   trace information to [`Zipkin`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4814,"byte_end":4852,"line_start":140,"line_end":140,"column_start":1,"column_end":39}},{"value":"/ - [`opentelemetry-datadog`] provides additional exporters to [`Datadog`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4853,"byte_end":4930,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ - [`opentelemetry-aws`] provides unofficial propagators for AWS X-ray.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":4931,"byte_end":5005,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/ - [`opentelemetry-contrib`] provides additional exporters and propagators that are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5006,"byte_end":5092,"line_start":143,"line_end":143,"column_start":1,"column_end":87}},{"value":"/   experimental.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5093,"byte_end":5112,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/ - [`opentelemetry-semantic-conventions`] provides standard names and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5113,"byte_end":5185,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/   semantic otel conventions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5186,"byte_end":5218,"line_start":146,"line_end":146,"column_start":1,"column_end":33}},{"value":"/ - [`opentelemetry-stackdriver`] provides an exporter for Google's [Cloud Trace]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5219,"byte_end":5302,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"/   (which used to be called StackDriver).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5303,"byte_end":5347,"line_start":148,"line_end":148,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5348,"byte_end":5351,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Additionally, there are also several third-party crates which are not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5352,"byte_end":5425,"line_start":150,"line_end":150,"column_start":1,"column_end":74}},{"value":"/ maintained by the `opentelemetry` project. These include:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5426,"byte_end":5487,"line_start":151,"line_end":151,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5488,"byte_end":5491,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ - [`tracing-opentelemetry`] provides integration for applications","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5492,"byte_end":5561,"line_start":153,"line_end":153,"column_start":1,"column_end":70}},{"value":"/   instrumented using the [`tracing`] API and ecosystem.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5562,"byte_end":5621,"line_start":154,"line_end":154,"column_start":1,"column_end":60}},{"value":"/ - [`actix-web-opentelemetry`] provides integration for the [`actix-web`] web","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5622,"byte_end":5702,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"/   server and ecosystem.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5703,"byte_end":5730,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/ - [`opentelemetry-application-insights`] provides an unofficial [Azure","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5731,"byte_end":5805,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/   Application Insights] exporter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5806,"byte_end":5843,"line_start":158,"line_end":158,"column_start":1,"column_end":38}},{"value":"/ - [`opentelemetry-tide`] provides integration for the [`Tide`] web server","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5844,"byte_end":5921,"line_start":159,"line_end":159,"column_start":1,"column_end":78}},{"value":"/   and ecosystem.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5922,"byte_end":5942,"line_start":160,"line_end":160,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5943,"byte_end":5946,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ If you're the maintainer of an `opentelemetry` ecosystem crate not listed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":5947,"byte_end":6024,"line_start":162,"line_end":162,"column_start":1,"column_end":78}},{"value":"/ above, please let us know! We'd love to add your project to the list!","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6025,"byte_end":6098,"line_start":163,"line_end":163,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6099,"byte_end":6102,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ [`open-telemetry/opentelemetry-rust`]: https://github.com/open-telemetry/opentelemetry-rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6103,"byte_end":6198,"line_start":165,"line_end":165,"column_start":1,"column_end":96}},{"value":"/ [`opentelemetry-jaeger`]: https://crates.io/crates/opentelemetry-jaeger","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6199,"byte_end":6274,"line_start":166,"line_end":166,"column_start":1,"column_end":76}},{"value":"/ [`Jaeger`]: https://www.jaegertracing.io","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6275,"byte_end":6319,"line_start":167,"line_end":167,"column_start":1,"column_end":45}},{"value":"/ [`opentelemetry-otlp`]: https://crates.io/crates/opentelemetry-otlp","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6320,"byte_end":6391,"line_start":168,"line_end":168,"column_start":1,"column_end":72}},{"value":"/ [`opentelemetry-http`]: https://crates.io/crates/opentelemetry-http","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6392,"byte_end":6463,"line_start":169,"line_end":169,"column_start":1,"column_end":72}},{"value":"/ [`opentelemetry-prometheus`]: https://crates.io/crates/opentelemetry-prometheus","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6464,"byte_end":6547,"line_start":170,"line_end":170,"column_start":1,"column_end":84}},{"value":"/ [`opentelemetry-aws`]: https://crates.io/crates/opentelemetry-aws","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6548,"byte_end":6617,"line_start":171,"line_end":171,"column_start":1,"column_end":70}},{"value":"/ [`Prometheus`]: https://prometheus.io","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6618,"byte_end":6659,"line_start":172,"line_end":172,"column_start":1,"column_end":42}},{"value":"/ [`opentelemetry-zipkin`]: https://crates.io/crates/opentelemetry-zipkin","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6660,"byte_end":6735,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"/ [`http`]: https://crates.io/crates/http","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6736,"byte_end":6779,"line_start":174,"line_end":174,"column_start":1,"column_end":44}},{"value":"/ [`Zipkin`]: https://zipkin.io","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6780,"byte_end":6813,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"/ [`opentelemetry-contrib`]: https://crates.io/crates/opentelemetry-contrib","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6814,"byte_end":6891,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"/ [`opentelemetry-datadog`]: https://crates.io/crates/opentelemetry-datadog","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6892,"byte_end":6969,"line_start":177,"line_end":177,"column_start":1,"column_end":78}},{"value":"/ [`Datadog`]: https://www.datadoghq.com","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":6970,"byte_end":7012,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/ [`opentelemetry-semantic-conventions`]: https://crates.io/crates/opentelemetry-semantic-conventions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7013,"byte_end":7116,"line_start":179,"line_end":179,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7117,"byte_end":7120,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [`tracing-opentelemetry`]: https://crates.io/crates/tracing-opentelemetry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7121,"byte_end":7198,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"/ [`tracing`]: https://crates.io/crates/tracing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7199,"byte_end":7248,"line_start":182,"line_end":182,"column_start":1,"column_end":50}},{"value":"/ [`actix-web-opentelemetry`]: https://crates.io/crates/actix-web-opentelemetry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7249,"byte_end":7330,"line_start":183,"line_end":183,"column_start":1,"column_end":82}},{"value":"/ [`actix-web`]: https://crates.io/crates/actix-web","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7331,"byte_end":7384,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/ [`opentelemetry-application-insights`]: https://crates.io/crates/opentelemetry-application-insights","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7385,"byte_end":7488,"line_start":185,"line_end":185,"column_start":1,"column_end":104}},{"value":"/ [Azure Application Insights]: https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7489,"byte_end":7601,"line_start":186,"line_end":186,"column_start":1,"column_end":113}},{"value":"/ [`opentelemetry-tide`]: https://crates.io/crates/opentelemetry-tide","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7602,"byte_end":7673,"line_start":187,"line_end":187,"column_start":1,"column_end":72}},{"value":"/ [`Tide`]: https://crates.io/crates/tide","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7674,"byte_end":7717,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"/ [`opentelemetry-stackdriver`]: https://crates.io/crates/opentelemetry-stackdriver","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7718,"byte_end":7803,"line_start":189,"line_end":189,"column_start":1,"column_end":86}},{"value":"/ [Cloud Trace]: https://cloud.google.com/trace/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7804,"byte_end":7854,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7855,"byte_end":7858,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ ## Supported Rust Versions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7859,"byte_end":7889,"line_start":192,"line_end":192,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7890,"byte_end":7893,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ OpenTelemetry is built against the latest stable release. The minimum","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7894,"byte_end":7967,"line_start":194,"line_end":194,"column_start":1,"column_end":74}},{"value":"/ supported version is 1.46. The current OpenTelemetry version is not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":7968,"byte_end":8039,"line_start":195,"line_end":195,"column_start":1,"column_end":72}},{"value":"/ guaranteed to build on Rust versions earlier than the minimum supported","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8040,"byte_end":8115,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"/ version.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8116,"byte_end":8128,"line_start":197,"line_end":197,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8129,"byte_end":8132,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ The current stable Rust compiler and the three most recent minor versions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8133,"byte_end":8210,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ before it will always be supported. For example, if the current stable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8211,"byte_end":8285,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ compiler version is 1.49, the minimum supported version will not be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8286,"byte_end":8357,"line_start":201,"line_end":201,"column_start":1,"column_end":72}},{"value":"/ increased past 1.46, three minor versions prior. Increasing the minimum","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8358,"byte_end":8433,"line_start":202,"line_end":202,"column_start":1,"column_end":76}},{"value":"/ supported compiler version is not considered a semver breaking change as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8434,"byte_end":8510,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ long as doing so complies with this policy.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8511,"byte_end":8558,"line_start":204,"line_end":204,"column_start":1,"column_end":48}},{"value":"warn(future_incompatible, missing_debug_implementations, missing_docs,\nnonstandard_style, rust_2018_idioms, unreachable_pub, unused)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8559,"byte_end":8725,"line_start":205,"line_end":213,"column_start":1,"column_end":3}},{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":8726,"byte_end":8766,"line_start":214,"line_end":214,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"global","qualname":"::global","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":25},{"krate":0,"index":43},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188}],"decl_id":null,"docs":" Utilities for working with global telemetry primitives","sig":null,"attributes":[{"value":"/ Utilities for working with global telemetry primitives","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":9985,"byte_end":10043,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10044,"byte_end":10047,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Global Trace API","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10048,"byte_end":10071,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10072,"byte_end":10075,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The global trace API **provides applications access to their configured","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10076,"byte_end":10151,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ [`TracerProvider`] instance from anywhere in the codebase**. This allows","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10152,"byte_end":10228,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ applications to be less coupled to the specific Open Telemetry SDK while not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10229,"byte_end":10309,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ manually passing references to each part of the code that needs to create","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10310,"byte_end":10387,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ [`Span`]s. Additionally, **3rd party middleware** or **library code** can be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10388,"byte_end":10468,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ written against this generic API and not constrain users to a specific","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10469,"byte_end":10543,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ implementation choice.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10544,"byte_end":10570,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10571,"byte_end":10574,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ### Usage in Applications","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10575,"byte_end":10604,"line_start":13,"line_end":13,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10605,"byte_end":10608,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Applications configure their tracer either by [installing a trace pipeline],","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10609,"byte_end":10689,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ or calling [`set_tracer_provider`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10690,"byte_end":10729,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10730,"byte_end":10733,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10734,"byte_end":10741,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature=\"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10742,"byte_end":10771,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10772,"byte_end":10779,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::trace::{Tracer, noop::NoopTracerProvider};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10780,"byte_end":10845,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ use opentelemetry::global;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10846,"byte_end":10876,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10877,"byte_end":10880,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ fn init_tracer() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10881,"byte_end":10903,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/     let provider = NoopTracerProvider::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10904,"byte_end":10953,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10954,"byte_end":10957,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // Configure the global `TracerProvider` singleton when your app starts","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":10958,"byte_end":11037,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/     // (there is a no-op default if this is not set by your application)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11038,"byte_end":11114,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/     let _ = global::set_tracer_provider(provider);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11115,"byte_end":11169,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11170,"byte_end":11175,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11176,"byte_end":11179,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ fn do_something_tracked() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11180,"byte_end":11211,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/     // Then you can get a named tracer instance anywhere in your codebase.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11212,"byte_end":11290,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/     let tracer = global::tracer(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11291,"byte_end":11343,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11344,"byte_end":11347,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     tracer.in_span(\"doing_work\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11348,"byte_end":11391,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/         // Traced app logic here...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11392,"byte_end":11431,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11432,"byte_end":11443,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11444,"byte_end":11449,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11450,"byte_end":11453,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // in main or other app start","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11454,"byte_end":11487,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ let _ = init_tracer();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11488,"byte_end":11514,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/ do_something_tracked();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11515,"byte_end":11542,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11543,"byte_end":11550,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11551,"byte_end":11558,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11559,"byte_end":11562,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ### Usage in Libraries","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11563,"byte_end":11589,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11590,"byte_end":11593,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11594,"byte_end":11601,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature=\"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11602,"byte_end":11631,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11632,"byte_end":11639,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::trace::Tracer;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11640,"byte_end":11677,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use opentelemetry::global;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11678,"byte_end":11708,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11709,"byte_end":11712,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ pub fn my_traced_library_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11713,"byte_end":11754,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     // End users of your library will configure their global tracer provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11755,"byte_end":11835,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/     // so you can use the global tracer without any setup","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11836,"byte_end":11897,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/     let tracer = global::tracer_with_version(\"my-library-name\", env!(\"CARGO_PKG_VERSION\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11898,"byte_end":11993,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11994,"byte_end":11997,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tracer.in_span(\"doing_library_work\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":11998,"byte_end":12049,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/         // Traced library logic here...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12050,"byte_end":12093,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12094,"byte_end":12105,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12106,"byte_end":12111,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12112,"byte_end":12119,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12120,"byte_end":12127,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12128,"byte_end":12131,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [installing a trace pipeline]: crate::sdk::export::trace::stdout::PipelineBuilder::install_simple","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12132,"byte_end":12233,"line_start":67,"line_end":67,"column_start":1,"column_end":102}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12234,"byte_end":12286,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/ [`Span`]: crate::trace::Span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12287,"byte_end":12319,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12320,"byte_end":12323,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Global Metrics API","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12324,"byte_end":12349,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12350,"byte_end":12353,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The global metrics API **provides applications access to their configured","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12354,"byte_end":12431,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ [`MeterProvider`] instance from anywhere in the codebase**. This allows","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12432,"byte_end":12507,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ applications to be less coupled to the specific Open Telemetry SDK while not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12508,"byte_end":12588,"line_start":75,"line_end":75,"column_start":1,"column_end":81}},{"value":"/ manually passing references to each part of the code that needs to create","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12589,"byte_end":12666,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"/ metric instruments. Additionally, **3rd party middleware** or **library code** can be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12667,"byte_end":12756,"line_start":77,"line_end":77,"column_start":1,"column_end":90}},{"value":"/ written against this generic API and not constrain users to a specific","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12757,"byte_end":12831,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/ implementation choice.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12832,"byte_end":12858,"line_start":79,"line_end":79,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12859,"byte_end":12862,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ### Usage in Applications","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12863,"byte_end":12892,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12893,"byte_end":12896,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Applications configure their meter either by [installing a metrics pipeline],","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12897,"byte_end":12978,"line_start":83,"line_end":83,"column_start":1,"column_end":82}},{"value":"/ or calling [`set_meter_provider`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":12979,"byte_end":13017,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13018,"byte_end":13021,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13022,"byte_end":13029,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature=\"metrics\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13030,"byte_end":13061,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13062,"byte_end":13069,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::metrics::{Meter, noop::NoopMeterProvider};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13070,"byte_end":13135,"line_start":89,"line_end":89,"column_start":1,"column_end":66}},{"value":"/ use opentelemetry::{global, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13136,"byte_end":13178,"line_start":90,"line_end":90,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13179,"byte_end":13182,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ fn init_meter() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13183,"byte_end":13204,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/     let provider = NoopMeterProvider::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13205,"byte_end":13253,"line_start":93,"line_end":93,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13254,"byte_end":13257,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     // Configure the global `MeterProvider` singleton when your app starts","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13258,"byte_end":13336,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/     // (there is a no-op default if this is not set by your application)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13337,"byte_end":13413,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/     global::set_meter_provider(provider)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13414,"byte_end":13458,"line_start":97,"line_end":97,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13459,"byte_end":13464,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13465,"byte_end":13468,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ fn do_something_instrumented() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13469,"byte_end":13505,"line_start":100,"line_end":100,"column_start":1,"column_end":37}},{"value":"/     // Then you can get a named tracer instance anywhere in your codebase.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13506,"byte_end":13584,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/     let meter = global::meter(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13585,"byte_end":13635,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/     let counter = meter.u64_counter(\"my_counter\").init();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13636,"byte_end":13697,"line_start":103,"line_end":103,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13698,"byte_end":13701,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // record metrics","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13702,"byte_end":13727,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"/     counter.add(1, &[KeyValue::new(\"mykey\", \"myvalue\")]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13728,"byte_end":13789,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13790,"byte_end":13795,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13796,"byte_end":13799,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ // in main or other app start","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13800,"byte_end":13833,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ init_meter();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13834,"byte_end":13851,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/ do_something_instrumented();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13852,"byte_end":13884,"line_start":111,"line_end":111,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13885,"byte_end":13892,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13893,"byte_end":13900,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13901,"byte_end":13904,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Usage in Libraries","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13905,"byte_end":13931,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13932,"byte_end":13935,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13936,"byte_end":13943,"line_start":117,"line_end":117,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature=\"metrics\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13944,"byte_end":13975,"line_start":118,"line_end":118,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13976,"byte_end":13983,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":13984,"byte_end":14026,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14027,"byte_end":14030,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ pub fn my_traced_library_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14031,"byte_end":14072,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/     // End users of your library will configure their global meter provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14073,"byte_end":14152,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/     // so you can use the global meter without any setup","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14153,"byte_end":14213,"line_start":124,"line_end":124,"column_start":1,"column_end":61}},{"value":"/     let tracer = global::meter(\"my-library-name\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14214,"byte_end":14268,"line_start":125,"line_end":125,"column_start":1,"column_end":55}},{"value":"/     let counter = tracer.u64_counter(\"my_counter\").init();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14269,"byte_end":14331,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14332,"byte_end":14335,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // record metrics","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14336,"byte_end":14361,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/     counter.add(1, &[KeyValue::new(\"mykey\", \"myvalue\")]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14362,"byte_end":14423,"line_start":129,"line_end":129,"column_start":1,"column_end":62}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14424,"byte_end":14429,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14430,"byte_end":14437,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14438,"byte_end":14445,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14446,"byte_end":14449,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [installing a metrics pipeline]: crate::sdk::export::metrics::stdout::StdoutExporterBuilder::init","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14450,"byte_end":14551,"line_start":134,"line_end":134,"column_start":1,"column_end":102}},{"value":"/ [`MeterProvider`]: crate::metrics::MeterProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14552,"byte_end":14604,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ [`set_meter_provider`]: crate::global::set_meter_provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/mod.rs","byte_start":14605,"byte_end":14666,"line_start":136,"line_end":136,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16140,"byte_end":16145,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"Trace","qualname":"::global::error_handler::Error::Trace","value":"Error::Trace(TraceError)","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":" Failed to export traces.\n","sig":null,"attributes":[{"value":"cfg(feature = \"trace\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":15998,"byte_end":16023,"line_start":18,"line_end":18,"column_start":5,"column_end":30}},{"value":"error(transparent)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16081,"byte_end":16102,"line_start":20,"line_end":20,"column_start":5,"column_end":26}},{"value":"/ Failed to export traces.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16107,"byte_end":16135,"line_start":21,"line_end":21,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16452,"byte_end":16457,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Other","qualname":"::global::error_handler::Error::Other","value":"Error::Other(String)","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":" Other types of failures not covered by the variants above.\n","sig":null,"attributes":[{"value":"error(\"{0}\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16365,"byte_end":16380,"line_start":28,"line_end":28,"column_start":5,"column_end":20}},{"value":"/ Other types of failures not covered by the variants above.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16385,"byte_end":16447,"line_start":29,"line_end":29,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":15986,"byte_end":15991,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::global::error_handler::Error","value":"pub enum Error { Trace(TraceError), Other(String), }","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2136}],"decl_id":null,"docs":" Wrapper for error from both tracing and metrics part of open telemetry.\n","sig":null,"attributes":[{"value":"/ Wrapper for error from both tracing and metrics part of open telemetry.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":15848,"byte_end":15923,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":15959,"byte_end":15976,"line_start":16,"line_end":16,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16761,"byte_end":16773,"line_start":44,"line_end":44,"column_start":8,"column_end":20},"name":"handle_error","qualname":"::global::error_handler::handle_error","value":"pub fn handle_error<T: Into<Error>>(T)","parent":null,"children":[],"decl_id":null,"docs":" Handle error using the globally configured error handler.","sig":null,"attributes":[{"value":"/ Handle error using the globally configured error handler.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16657,"byte_end":16718,"line_start":41,"line_end":41,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16719,"byte_end":16722,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Writes to stderr if unset.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16723,"byte_end":16753,"line_start":43,"line_end":43,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":17496,"byte_end":17513,"line_start":60,"line_end":60,"column_start":8,"column_end":25},"name":"set_error_handler","qualname":"::global::error_handler::set_error_handler","value":"pub fn set_error_handler<F>(F) -> std::result::Result<(), Error> where\nF: Fn(Error) -> () + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Set global error handler.\n","sig":null,"attributes":[{"value":"/ Set global error handler.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":17459,"byte_end":17488,"line_start":59,"line_end":59,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":35},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18694,"byte_end":18717,"line_start":25,"line_end":25,"column_start":8,"column_end":31},"name":"set_text_map_propagator","qualname":"::global::propagation::set_text_map_propagator","value":"pub fn set_text_map_propagator<P: TextMapPropagator + Send + Sync +\n'static>(P)","parent":null,"children":[],"decl_id":null,"docs":" Sets the given [`TextMapPropagator`] propagator as the current global propagator.","sig":null,"attributes":[{"value":"/ Sets the given [`TextMapPropagator`] propagator as the current global propagator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18297,"byte_end":18382,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18383,"byte_end":18386,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18387,"byte_end":18401,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18402,"byte_end":18405,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18406,"byte_end":18413,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, sdk::propagation::TraceContextPropagator};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18414,"byte_end":18488,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18489,"byte_end":18492,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // create your text map propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18493,"byte_end":18531,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/ let propagator = TraceContextPropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18532,"byte_end":18583,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18584,"byte_end":18587,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // assign it as the global propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18588,"byte_end":18629,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ global::set_text_map_propagator(propagator);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18630,"byte_end":18678,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18679,"byte_end":18686,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19592,"byte_end":19615,"line_start":49,"line_end":49,"column_start":8,"column_end":31},"name":"get_text_map_propagator","qualname":"::global::propagation::get_text_map_propagator","value":"pub fn get_text_map_propagator<T, F>(F) -> T where\nF: FnMut(&dyn TextMapPropagator) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to the current global [`TextMapPropagator`] propagator.","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to the current global [`TextMapPropagator`] propagator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":18925,"byte_end":19020,"line_start":31,"line_end":31,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19021,"byte_end":19024,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19025,"byte_end":19039,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19040,"byte_end":19043,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19044,"byte_end":19051,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{propagation::TextMapPropagator, global};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19052,"byte_end":19116,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ use opentelemetry::sdk::propagation::TraceContextPropagator;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19117,"byte_end":19181,"line_start":37,"line_end":37,"column_start":1,"column_end":65}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19182,"byte_end":19216,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19217,"byte_end":19220,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let example_carrier = HashMap::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19221,"byte_end":19262,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19263,"byte_end":19266,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // create your text map propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19267,"byte_end":19305,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ let tc_propagator = TraceContextPropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19306,"byte_end":19360,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ global::set_text_map_propagator(tc_propagator);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19361,"byte_end":19412,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19413,"byte_end":19416,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ // use the global text map propagator to extract contexts","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19417,"byte_end":19478,"line_start":46,"line_end":46,"column_start":1,"column_end":62}},{"value":"/ let _cx = global::get_text_map_propagator(|propagator| propagator.extract(&example_carrier));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19479,"byte_end":19576,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/propagation.rs","byte_start":19577,"byte_end":19584,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20325,"byte_end":20334,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"BoxedSpan","qualname":"::global::trace::BoxedSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps the [`BoxedTracer`]'s [`Span`] so it can be used generically by\n applications without knowing the underlying type.","sig":null,"attributes":[{"value":"/ Wraps the [`BoxedTracer`]'s [`Span`] so it can be used generically by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20132,"byte_end":20205,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ applications without knowing the underlying type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20206,"byte_end":20259,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20260,"byte_end":20263,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`Span`]: crate::trace::Span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20264,"byte_end":20296,"line_start":13,"line_end":13,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22693,"byte_end":22704,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"BoxedTracer","qualname":"::global::trace::BoxedTracer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps the [`GlobalTracerProvider`]'s [`Tracer`] so it can be used generically by\n applications without knowing the underlying type.","sig":null,"attributes":[{"value":"/ Wraps the [`GlobalTracerProvider`]'s [`Tracer`] so it can be used generically by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22419,"byte_end":22503,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/ applications without knowing the underlying type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22504,"byte_end":22557,"line_start":72,"line_end":72,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22558,"byte_end":22561,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`Tracer`]: crate::trace::Tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22562,"byte_end":22598,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ [`GlobalTracerProvider`]: crate::global::GlobalTracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22599,"byte_end":22664,"line_start":75,"line_end":75,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24454,"byte_end":24467,"line_start":124,"line_end":124,"column_start":11,"column_end":24},"name":"GenericTracer","qualname":"::global::trace::GenericTracer","value":"GenericTracer: fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" Allows a specific [`Tracer`] to be used generically by [`BoxedTracer`]\n instances by mirroring the interface and boxing the return types.","sig":null,"attributes":[{"value":"/ Allows a specific [`Tracer`] to be used generically by [`BoxedTracer`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24258,"byte_end":24332,"line_start":120,"line_end":120,"column_start":1,"column_end":75}},{"value":"/ instances by mirroring the interface and boxing the return types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24333,"byte_end":24402,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24403,"byte_end":24406,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ [`Tracer`]: crate::trace::Tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24407,"byte_end":24443,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24583,"byte_end":24596,"line_start":126,"line_end":126,"column_start":8,"column_end":21},"name":"invalid_boxed","qualname":"::global::trace::GenericTracer::invalid_boxed","value":"pub fn invalid_boxed(&Self) -> Box<DynSpan>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Create a new invalid span for use in cases where there are no active spans.\n","sig":null,"attributes":[{"value":"/ Create a new invalid span for use in cases where there are no active spans.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24496,"byte_end":24575,"line_start":125,"line_end":125,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24732,"byte_end":24756,"line_start":130,"line_end":130,"column_start":8,"column_end":32},"name":"start_with_context_boxed","qualname":"::global::trace::GenericTracer::start_with_context_boxed","value":"pub fn start_with_context_boxed(&Self, Cow, Context) -> Box<DynSpan>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns a trait object so the underlying implementation can be swapped\n out at runtime.\n","sig":null,"attributes":[{"value":"/ Returns a trait object so the underlying implementation can be swapped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24626,"byte_end":24700,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ out at runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24705,"byte_end":24724,"line_start":129,"line_end":129,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24930,"byte_end":24941,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"build_boxed","qualname":"::global::trace::GenericTracer::build_boxed","value":"pub fn build_boxed(&Self, trace::SpanBuilder) -> Box<DynSpan>","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns a trait object so the underlying implementation can be swapped\n out at runtime.\n","sig":null,"attributes":[{"value":"/ Returns a trait object so the underlying implementation can be swapped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24824,"byte_end":24898,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ out at runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24903,"byte_end":24922,"line_start":133,"line_end":133,"column_start":5,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":113},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26052,"byte_end":26073,"line_start":165,"line_end":165,"column_start":11,"column_end":32},"name":"GenericTracerProvider","qualname":"::global::trace::GenericTracerProvider","value":"GenericTracerProvider: fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":" Allows a specific [`TracerProvider`] to be used generically by the\n [`GlobalTracerProvider`] by mirroring the interface and boxing the return types.","sig":null,"attributes":[{"value":"/ Allows a specific [`TracerProvider`] to be used generically by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25763,"byte_end":25833,"line_start":160,"line_end":160,"column_start":1,"column_end":71}},{"value":"/ [`GlobalTracerProvider`] by mirroring the interface and boxing the return types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25834,"byte_end":25918,"line_start":161,"line_end":161,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25919,"byte_end":25922,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25923,"byte_end":25975,"line_start":163,"line_end":163,"column_start":1,"column_end":53}},{"value":"/ [`GlobalTracerProvider`]: crate::global::GlobalTracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25976,"byte_end":26041,"line_start":164,"line_end":164,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26209,"byte_end":26221,"line_start":167,"line_end":167,"column_start":8,"column_end":20},"name":"tracer_boxed","qualname":"::global::trace::GenericTracerProvider::tracer_boxed","value":"pub fn tracer_boxed(&Self, &'static str, Option<&'static str>)\n-> Box<dyn GenericTracer + Send + Sync>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Creates a named tracer instance that is a trait object through the underlying `TracerProvider`.\n","sig":null,"attributes":[{"value":"/ Creates a named tracer instance that is a trait object through the underlying `TracerProvider`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26102,"byte_end":26201,"line_start":166,"line_end":166,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26439,"byte_end":26450,"line_start":174,"line_end":174,"column_start":8,"column_end":19},"name":"force_flush","qualname":"::global::trace::GenericTracerProvider::force_flush","value":"pub fn force_flush(&Self) -> Vec<TraceResult<()>>","parent":{"krate":0,"index":113},"children":[],"decl_id":null,"docs":" Force flush all remaining spans in span processors and return results.\n","sig":null,"attributes":[{"value":"/ Force flush all remaining spans in span processors and return results.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26357,"byte_end":26431,"line_start":173,"line_end":173,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27262,"byte_end":27282,"line_start":203,"line_end":203,"column_start":12,"column_end":32},"name":"GlobalTracerProvider","qualname":"::global::trace::GlobalTracerProvider","value":"GlobalTracerProvider {  }","parent":null,"children":[{"krate":0,"index":2172}],"decl_id":null,"docs":" Represents the globally configured [`TracerProvider`] instance for this\n application. This allows generic tracing through the returned\n [`BoxedTracer`] instances.","sig":null,"attributes":[{"value":"/ Represents the globally configured [`TracerProvider`] instance for this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26997,"byte_end":27072,"line_start":197,"line_end":197,"column_start":1,"column_end":76}},{"value":"/ application. This allows generic tracing through the returned","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27073,"byte_end":27138,"line_start":198,"line_end":198,"column_start":1,"column_end":66}},{"value":"/ [`BoxedTracer`] instances.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27139,"byte_end":27169,"line_start":199,"line_end":199,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27170,"byte_end":27173,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27174,"byte_end":27226,"line_start":201,"line_end":201,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":131},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28744,"byte_end":28759,"line_start":245,"line_end":245,"column_start":8,"column_end":23},"name":"tracer_provider","qualname":"::global::trace::tracer_provider","value":"pub fn tracer_provider() -> GlobalTracerProvider","parent":null,"children":[],"decl_id":null,"docs":" Returns an instance of the currently configured global [`TracerProvider`] through\n [`GlobalTracerProvider`].","sig":null,"attributes":[{"value":"/ Returns an instance of the currently configured global [`TracerProvider`] through","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28498,"byte_end":28583,"line_start":240,"line_end":240,"column_start":1,"column_end":86}},{"value":"/ [`GlobalTracerProvider`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28584,"byte_end":28613,"line_start":241,"line_end":241,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28614,"byte_end":28617,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28618,"byte_end":28670,"line_start":243,"line_end":243,"column_start":1,"column_end":53}},{"value":"/ [`GlobalTracerProvider`]: crate::global::GlobalTracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28671,"byte_end":28736,"line_start":244,"line_end":244,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29223,"byte_end":29229,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"tracer","qualname":"::global::trace::tracer","value":"pub fn tracer(&'static str) -> BoxedTracer","parent":null,"children":[],"decl_id":null,"docs":" Creates a named instance of [`Tracer`] via the configured [`GlobalTracerProvider`].","sig":null,"attributes":[{"value":"/ Creates a named instance of [`Tracer`] via the configured [`GlobalTracerProvider`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28909,"byte_end":28996,"line_start":252,"line_end":252,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":28997,"byte_end":29000,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ If the name is an empty string, the provider will use a default name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29001,"byte_end":29074,"line_start":254,"line_end":254,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29075,"byte_end":29078,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ This is a more convenient way of expressing `global::tracer_provider().tracer(name, None)`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29079,"byte_end":29174,"line_start":256,"line_end":256,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29175,"byte_end":29178,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ [`Tracer`]: crate::trace::Tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29179,"byte_end":29215,"line_start":258,"line_end":258,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":133},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29645,"byte_end":29664,"line_start":269,"line_end":269,"column_start":8,"column_end":27},"name":"tracer_with_version","qualname":"::global::trace::tracer_with_version","value":"pub fn tracer_with_version(&'static str, &'static str) -> BoxedTracer","parent":null,"children":[],"decl_id":null,"docs":" Creates a named instance of [`Tracer`] with version info via the configured [`GlobalTracerProvider`]","sig":null,"attributes":[{"value":"/ Creates a named instance of [`Tracer`] with version info via the configured [`GlobalTracerProvider`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29311,"byte_end":29415,"line_start":263,"line_end":263,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29416,"byte_end":29419,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ If the name is an empty string, the provider will use a default name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29420,"byte_end":29493,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ If the version is an empty string, it will be used as part of instrumentation library information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29494,"byte_end":29596,"line_start":266,"line_end":266,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29597,"byte_end":29600,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ [`Tracer`]: crate::trace::Tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29601,"byte_end":29637,"line_start":268,"line_end":268,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30092,"byte_end":30111,"line_start":279,"line_end":279,"column_start":8,"column_end":27},"name":"set_tracer_provider","qualname":"::global::trace::set_tracer_provider","value":"pub fn set_tracer_provider<P, T, S>(P) -> GlobalTracerProvider where\nS: trace::Span + Send + Sync + 'static, T: trace::Tracer<Span = S> + Send +\nSync, P: trace::TracerProvider<Tracer = T> + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sets the given [`TracerProvider`] instance as the current global provider.","sig":null,"attributes":[{"value":"/ Sets the given [`TracerProvider`] instance as the current global provider.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29778,"byte_end":29856,"line_start":273,"line_end":273,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29857,"byte_end":29860,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ It returns the [`TracerProvider`] instance that was previously mounted as global provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29861,"byte_end":29954,"line_start":275,"line_end":275,"column_start":1,"column_end":94}},{"value":"/ (e.g. [`NoopTracerProvider`] if a provider had not been set before).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":29955,"byte_end":30027,"line_start":276,"line_end":276,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30028,"byte_end":30031,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30032,"byte_end":30084,"line_start":278,"line_end":278,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30727,"byte_end":30751,"line_start":296,"line_end":296,"column_start":8,"column_end":32},"name":"shutdown_tracer_provider","qualname":"::global::trace::shutdown_tracer_provider","value":"pub fn shutdown_tracer_provider()","parent":null,"children":[],"decl_id":null,"docs":" Shut down the current tracer provider. This will invoke the shutdown method on all span processors.\n span processors should export remaining spans before return\n","sig":null,"attributes":[{"value":"/ Shut down the current tracer provider. This will invoke the shutdown method on all span processors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30552,"byte_end":30655,"line_start":294,"line_end":294,"column_start":1,"column_end":104}},{"value":"/ span processors should export remaining spans before return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":30656,"byte_end":30719,"line_start":295,"line_end":295,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":139},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31227,"byte_end":31254,"line_start":312,"line_end":312,"column_start":8,"column_end":35},"name":"force_flush_tracer_provider","qualname":"::global::trace::force_flush_tracer_provider","value":"pub fn force_flush_tracer_provider()","parent":null,"children":[],"decl_id":null,"docs":" Force flush all remaining spans in span processors.","sig":null,"attributes":[{"value":"/ Force flush all remaining spans in span processors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31015,"byte_end":31070,"line_start":307,"line_end":307,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31071,"byte_end":31074,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ Use the [`global::handle_error`] to handle errors happened during force flush.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31075,"byte_end":31157,"line_start":309,"line_end":309,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31158,"byte_end":31161,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/ [`global::handle_error`]: crate::global::handle_error","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":31162,"byte_end":31219,"line_start":311,"line_end":311,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":191},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sdk","qualname":"::sdk","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":452},{"krate":0,"index":598},{"krate":0,"index":1270},{"krate":0,"index":1273}],"decl_id":null,"docs":" # OpenTelemetry SDK","sig":null,"attributes":[{"value":"/ # OpenTelemetry SDK","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":40856,"byte_end":40879,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":40880,"byte_end":40883,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This SDK provides an opinionated reference implementation of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":40884,"byte_end":40948,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ the OpenTelemetry API. The SDK implements the specifics of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":40949,"byte_end":41011,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/ deciding which data to collect through `Sampler`s, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41012,"byte_end":41070,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/ facilitates the delivery of telemetry data to storage systems","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41071,"byte_end":41136,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ through `Exporter`s. These can be configured on `Tracer` and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41137,"byte_end":41201,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/ `Meter` creation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41202,"byte_end":41223,"line_start":8,"line_end":8,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":192},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::sdk::export","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":294}],"decl_id":null,"docs":" Metrics Export\n","sig":null,"attributes":[{"value":"/ Metrics Export","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41644,"byte_end":41662,"line_start":1,"line_end":1,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":193},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::sdk::export::trace","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":293},{"krate":0,"index":2223},{"krate":0,"index":2228},{"krate":0,"index":2242},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2247}],"decl_id":null,"docs":" Trace exporters\n","sig":null,"attributes":[{"value":"cfg(feature = \"trace\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41759,"byte_end":41784,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/ Trace exporters","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42069,"byte_end":42088,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":235},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stdout","qualname":"::sdk::export::trace::stdout","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":2188},{"krate":0,"index":2193},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":2196},{"krate":0,"index":2200},{"krate":0,"index":288},{"krate":0,"index":2203},{"krate":0,"index":2220},{"krate":0,"index":2209},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":291}],"decl_id":null,"docs":" # Stdout Span Exporter","sig":null,"attributes":[{"value":"/ # Stdout Span Exporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47177,"byte_end":47203,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47204,"byte_end":47207,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stdout [`SpanExporter`] writes debug printed [`Span`]s to its configured","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47208,"byte_end":47288,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ [`Write`] instance. By default it will write to [`Stdout`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47289,"byte_end":47352,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47353,"byte_end":47356,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`SpanExporter`]: super::SpanExporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47357,"byte_end":47398,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"/ [`Span`]: crate::trace::Span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47399,"byte_end":47431,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47432,"byte_end":47461,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/ [`Stdout`]: std::io::Stdout","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47462,"byte_end":47493,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47494,"byte_end":47497,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47498,"byte_end":47512,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47513,"byte_end":47516,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47517,"byte_end":47530,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ use opentelemetry::trace::Tracer;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47531,"byte_end":47568,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ use opentelemetry::sdk::export::trace::stdout;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47569,"byte_end":47619,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/ use opentelemetry::global::shutdown_tracer_provider;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47620,"byte_end":47676,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47677,"byte_end":47680,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47681,"byte_end":47696,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     let tracer = stdout::new_pipeline()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47697,"byte_end":47740,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/         .with_pretty_print(true)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47741,"byte_end":47777,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/         .install_simple();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47778,"byte_end":47808,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47809,"byte_end":47812,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     tracer.in_span(\"doing_work\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47813,"byte_end":47856,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/         // Traced app logic here...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47857,"byte_end":47896,"line_start":24,"line_end":24,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47897,"byte_end":47908,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47909,"byte_end":47912,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     shutdown_tracer_provider(); // sending remaining spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47913,"byte_end":47975,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47976,"byte_end":47981,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":47982,"byte_end":47989,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48291,"byte_end":48306,"line_start":44,"line_end":44,"column_start":12,"column_end":27},"name":"PipelineBuilder","qualname":"::sdk::export::trace::stdout::PipelineBuilder","value":"PipelineBuilder {  }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192}],"decl_id":null,"docs":" Pipeline builder\n","sig":null,"attributes":[{"value":"/ Pipeline builder","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48242,"byte_end":48262,"line_start":42,"line_end":42,"column_start":1,"column_end":21}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48465,"byte_end":48477,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"new_pipeline","qualname":"::sdk::export::trace::stdout::new_pipeline","value":"pub fn new_pipeline() -> PipelineBuilder<Stdout>","parent":null,"children":[],"decl_id":null,"docs":" Create a new stdout exporter pipeline builder.\n","sig":null,"attributes":[{"value":"/ Create a new stdout exporter pipeline builder.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48407,"byte_end":48457,"line_start":50,"line_end":50,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48876,"byte_end":48893,"line_start":68,"line_end":68,"column_start":12,"column_end":29},"name":"with_pretty_print","qualname":"<PipelineBuilder<W>>::with_pretty_print","value":"pub fn with_pretty_print(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the pretty print setting.\n","sig":null,"attributes":[{"value":"/ Specify the pretty print setting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48827,"byte_end":48864,"line_start":67,"line_end":67,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49051,"byte_end":49068,"line_start":74,"line_end":74,"column_start":12,"column_end":29},"name":"with_trace_config","qualname":"<PipelineBuilder<W>>::with_trace_config","value":"pub fn with_trace_config(Self, sdk::trace::Config) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign the SDK trace configuration.\n","sig":null,"attributes":[{"value":"/ Assign the SDK trace configuration.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49000,"byte_end":49039,"line_start":73,"line_end":73,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49225,"byte_end":49236,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"with_writer","qualname":"<PipelineBuilder<W>>::with_writer","value":"pub fn with_writer<T: Write>(Self, T) -> PipelineBuilder<T>","parent":null,"children":[],"decl_id":null,"docs":" Specify the writer to use.\n","sig":null,"attributes":[{"value":"/ Specify the writer to use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49183,"byte_end":49213,"line_start":79,"line_end":79,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49604,"byte_end":49618,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"install_simple","qualname":"<PipelineBuilder<W>>::install_simple","value":"pub fn install_simple(Self) -> sdk::trace::Tracer","parent":null,"children":[],"decl_id":null,"docs":" Install the stdout exporter pipeline with the recommended defaults.\n","sig":null,"attributes":[{"value":"/ Install the stdout exporter pipeline with the recommended defaults.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49521,"byte_end":49592,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50410,"byte_end":50418,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"Exporter","qualname":"::sdk::export::trace::stdout::Exporter","value":"Exporter {  }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"decl_id":null,"docs":" A [`SpanExporter`] that writes to [`Stdout`] or other configured [`Write`].","sig":null,"attributes":[{"value":"/ A [`SpanExporter`] that writes to [`Stdout`] or other configured [`Write`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50194,"byte_end":50273,"line_start":110,"line_end":110,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50274,"byte_end":50277,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ [`SpanExporter`]: super::SpanExporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50278,"byte_end":50319,"line_start":112,"line_end":112,"column_start":1,"column_end":42}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50320,"byte_end":50349,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/ [`Stdout`]: std::io::Stdout","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50350,"byte_end":50381,"line_start":114,"line_end":114,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50553,"byte_end":50556,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"new","qualname":"<Exporter<W>>::new","value":"pub fn new(W, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new stdout `Exporter`.\n","sig":null,"attributes":[{"value":"/ Create a new stdout `Exporter`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50506,"byte_end":50541,"line_start":122,"line_end":122,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":293},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42448,"byte_end":42460,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"ExportResult","qualname":"::sdk::export::trace::ExportResult","value":"Result<(), TraceError>","parent":null,"children":[],"decl_id":null,"docs":" Describes the result of an export.\n","sig":null,"attributes":[{"value":"/ Describes the result of an export.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42400,"byte_end":42438,"line_start":16,"line_end":16,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42925,"byte_end":42937,"line_start":27,"line_end":27,"column_start":11,"column_end":23},"name":"SpanExporter","qualname":"::sdk::export::trace::SpanExporter","value":"SpanExporter: Send + Debug","parent":null,"children":[{"krate":0,"index":2224},{"krate":0,"index":2227}],"decl_id":null,"docs":" `SpanExporter` defines the interface that protocol-specific exporters must\n implement so that they can be plugged into OpenTelemetry SDK and support\n sending of telemetry data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":43596,"byte_end":43602,"line_start":40,"line_end":40,"column_start":14,"column_end":20},"name":"export","qualname":"::sdk::export::trace::SpanExporter::export","value":"pub fn export<'life0, 'async_trait>(&'life0 mut Self, Vec<SpanData>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = ExportResult> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":2223},"children":[],"decl_id":null,"docs":" Exports a batch of readable spans. Protocol exporters that will\n implement this function are typically expected to serialize and transmit\n the data to the destination.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42900,"byte_end":42914,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42900,"byte_end":42914,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44245,"byte_end":44253,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::sdk::export::trace::SpanExporter::shutdown","value":"pub fn shutdown(&mut Self)","parent":{"krate":0,"index":2223},"children":[],"decl_id":null,"docs":" Shuts down the exporter. Called when SDK is shut down. This is an\n opportunity for exporter to do any cleanup required.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44504,"byte_end":44512,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"SpanData","qualname":"::sdk::export::trace::SpanData","value":"SpanData { span_context, parent_span_id, span_kind, name, start_time, end_time, attributes, events, links, status_code, status_message, resource, instrumentation_lib }","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241}],"decl_id":null,"docs":" `SpanData` contains all the information collected by a `Span` and can be used\n by exporters as a standard input.\n","sig":null,"attributes":[{"value":"/ `SpanData` contains all the information collected by a `Span` and can be used","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44271,"byte_end":44352,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/ by exporters as a standard input.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44353,"byte_end":44390,"line_start":57,"line_end":57,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44556,"byte_end":44568,"line_start":62,"line_end":62,"column_start":9,"column_end":21},"name":"span_context","qualname":"::sdk::export::trace::SpanData::span_context","value":"trace::span_context::SpanContext","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Exportable `SpanContext`\n","sig":null,"attributes":[{"value":"/ Exportable `SpanContext`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44519,"byte_end":44547,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44614,"byte_end":44628,"line_start":64,"line_end":64,"column_start":9,"column_end":23},"name":"parent_span_id","qualname":"::sdk::export::trace::SpanData::parent_span_id","value":"trace::span_context::SpanId","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span parent id\n","sig":null,"attributes":[{"value":"/ Span parent id","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44587,"byte_end":44605,"line_start":63,"line_end":63,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44664,"byte_end":44673,"line_start":66,"line_end":66,"column_start":9,"column_end":18},"name":"span_kind","qualname":"::sdk::export::trace::SpanData::span_kind","value":"trace::span::SpanKind","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span kind\n","sig":null,"attributes":[{"value":"/ Span kind","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44642,"byte_end":44655,"line_start":65,"line_end":65,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44711,"byte_end":44715,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"name":"name","qualname":"::sdk::export::trace::SpanData::name","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span name\n","sig":null,"attributes":[{"value":"/ Span name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44689,"byte_end":44702,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44768,"byte_end":44778,"line_start":70,"line_end":70,"column_start":9,"column_end":19},"name":"start_time","qualname":"::sdk::export::trace::SpanData::start_time","value":"std::time::SystemTime","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span start time\n","sig":null,"attributes":[{"value":"/ Span start time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44740,"byte_end":44759,"line_start":69,"line_end":69,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2234},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44822,"byte_end":44830,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"end_time","qualname":"::sdk::export::trace::SpanData::end_time","value":"std::time::SystemTime","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span end time\n","sig":null,"attributes":[{"value":"/ Span end time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44796,"byte_end":44813,"line_start":71,"line_end":71,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44876,"byte_end":44886,"line_start":74,"line_end":74,"column_start":9,"column_end":19},"name":"attributes","qualname":"::sdk::export::trace::SpanData::attributes","value":"sdk::trace::evicted_hash_map::EvictedHashMap","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span attributes\n","sig":null,"attributes":[{"value":"/ Span attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44848,"byte_end":44867,"line_start":73,"line_end":73,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44944,"byte_end":44950,"line_start":76,"line_end":76,"column_start":9,"column_end":15},"name":"events","qualname":"::sdk::export::trace::SpanData::events","value":"sdk::trace::evicted_queue::EvictedQueue<trace::Event>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span events\n","sig":null,"attributes":[{"value":"/ Span events","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44920,"byte_end":44935,"line_start":75,"line_end":75,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45012,"byte_end":45017,"line_start":78,"line_end":78,"column_start":9,"column_end":14},"name":"links","qualname":"::sdk::export::trace::SpanData::links","value":"sdk::trace::evicted_queue::EvictedQueue<trace::Link>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span Links\n","sig":null,"attributes":[{"value":"/ Span Links","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":44989,"byte_end":45003,"line_start":77,"line_end":77,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45084,"byte_end":45095,"line_start":80,"line_end":80,"column_start":9,"column_end":20},"name":"status_code","qualname":"::sdk::export::trace::SpanData::status_code","value":"trace::span::StatusCode","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span status code\n","sig":null,"attributes":[{"value":"/ Span status code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45055,"byte_end":45075,"line_start":79,"line_end":79,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45145,"byte_end":45159,"line_start":82,"line_end":82,"column_start":9,"column_end":23},"name":"status_message","qualname":"::sdk::export::trace::SpanData::status_message","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Span status message\n","sig":null,"attributes":[{"value":"/ Span status message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45113,"byte_end":45136,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45273,"byte_end":45281,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"name":"resource","qualname":"::sdk::export::trace::SpanData::resource","value":"std::option::Option<std::sync::Arc<sdk::resource::Resource>>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Resource contains attributes representing an entity that produced this span.\n","sig":null,"attributes":[{"value":"/ Resource contains attributes representing an entity that produced this span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45184,"byte_end":45264,"line_start":83,"line_end":83,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45427,"byte_end":45446,"line_start":87,"line_end":87,"column_start":9,"column_end":28},"name":"instrumentation_lib","qualname":"::sdk::export::trace::SpanData::instrumentation_lib","value":"sdk::instrumentation::InstrumentationLibrary","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":" Instrumentation library that produced this span\n","sig":null,"attributes":[{"value":"/ Instrumentation library that produced this span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":45315,"byte_end":45366,"line_start":85,"line_end":85,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":294},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41910,"byte_end":41921,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"ExportError","qualname":"::sdk::export::ExportError","value":"ExportError: std::error::Error + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":295}],"decl_id":null,"docs":" Marker trait for errors returned by exporters\n","sig":null,"attributes":[{"value":"/ Marker trait for errors returned by exporters","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41850,"byte_end":41899,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":42028,"byte_end":42041,"line_start":12,"line_end":12,"column_start":8,"column_end":21},"name":"exporter_name","qualname":"::sdk::export::ExportError::exporter_name","value":"pub fn exporter_name(&Self) -> &'static str","parent":{"krate":0,"index":294},"children":[],"decl_id":null,"docs":" The name of exporter that returned this error\n","sig":null,"attributes":[{"value":"/ The name of exporter that returned this error","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41971,"byte_end":42020,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":296},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"instrumentation","qualname":"::sdk::instrumentation","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","parent":null,"children":[{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":297}],"decl_id":null,"docs":" Provides instrumentation information for both tracing and metric.\n See `OTEPS-0083` for details.","sig":null,"attributes":[{"value":"/ Provides instrumentation information for both tracing and metric.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51538,"byte_end":51607,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ See `OTEPS-0083` for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51608,"byte_end":51641,"line_start":2,"line_end":2,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51642,"byte_end":51645,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ [OTEPS-0083](https://github.com/open-telemetry/oteps/blob/master/text/0083-component.md)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51646,"byte_end":51738,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52135,"byte_end":52157,"line_start":13,"line_end":13,"column_start":12,"column_end":34},"name":"InstrumentationLibrary","qualname":"::sdk::instrumentation::InstrumentationLibrary","value":"InstrumentationLibrary { name, version }","parent":null,"children":[{"krate":0,"index":2251},{"krate":0,"index":2252}],"decl_id":null,"docs":" InstrumentationLibrary contains information about instrumentation library.","sig":null,"attributes":[{"value":"/ InstrumentationLibrary contains information about instrumentation library.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51740,"byte_end":51818,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51819,"byte_end":51822,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See `Instrumentation Libraries` for more information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51823,"byte_end":51880,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51881,"byte_end":51884,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Instrumentation Libraries`](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/overview.md#instrumentation-libraries)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":51885,"byte_end":52045,"line_start":10,"line_end":10,"column_start":1,"column_end":161}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52106,"byte_end":52123,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52222,"byte_end":52226,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"name","qualname":"::sdk::instrumentation::InstrumentationLibrary::name","value":"&'static str","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":" instrumentation library name, cannot be empty\n","sig":null,"attributes":[{"value":"/ instrumentation library name, cannot be empty","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52164,"byte_end":52213,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52304,"byte_end":52311,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"version","qualname":"::sdk::instrumentation::InstrumentationLibrary::version","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":" instrumentation library version, can be empty\n","sig":null,"attributes":[{"value":"/ instrumentation library version, can be empty","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52246,"byte_end":52295,"line_start":16,"line_end":16,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52443,"byte_end":52446,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<InstrumentationLibrary>::new","value":"pub fn new(&'static str, Option<&'static str>) -> InstrumentationLibrary","parent":null,"children":[],"decl_id":null,"docs":" Create an InstrumentationLibrary from name and version.\n","sig":null,"attributes":[{"value":"/ Create an InstrumentationLibrary from name and version.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52372,"byte_end":52431,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":299},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"propagation","qualname":"::sdk::propagation","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":355},{"krate":0,"index":383},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449}],"decl_id":null,"docs":" OpenTelemetry Propagators\n","sig":null,"attributes":[{"value":"cfg(feature = \"trace\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41361,"byte_end":41386,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/ OpenTelemetry Propagators","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/mod.rs","byte_start":52584,"byte_end":52613,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56701,"byte_end":56718,"line_start":101,"line_end":101,"column_start":12,"column_end":29},"name":"BaggagePropagator","qualname":"::sdk::propagation::baggage::BaggagePropagator","value":"BaggagePropagator {  }","parent":null,"children":[{"krate":0,"index":2287}],"decl_id":null,"docs":" Propagates name-value pairs in [W3C Baggage] format.","sig":null,"attributes":[{"value":"/ Propagates name-value pairs in [W3C Baggage] format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":54968,"byte_end":55024,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55025,"byte_end":55028,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Baggage is used to annotate telemetry, adding context and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55029,"byte_end":55090,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/ information to metrics, traces, and logs. It is an abstract data type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55091,"byte_end":55164,"line_start":61,"line_end":61,"column_start":1,"column_end":74}},{"value":"/ represented by a set of name-value pairs describing user-defined properties.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55165,"byte_end":55245,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ Each name in a [`Baggage`] is associated with exactly one value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55246,"byte_end":55314,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ `Baggage`s are serialized according to the editor's draft of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55315,"byte_end":55379,"line_start":64,"line_end":64,"column_start":1,"column_end":65}},{"value":"/ the [W3C Baggage] specification.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55380,"byte_end":55416,"line_start":65,"line_end":65,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55417,"byte_end":55420,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55421,"byte_end":55435,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55436,"byte_end":55439,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55440,"byte_end":55447,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{baggage::BaggageExt, Key, propagation::TextMapPropagator};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55448,"byte_end":55530,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/ use opentelemetry::sdk::propagation::BaggagePropagator;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55531,"byte_end":55590,"line_start":71,"line_end":71,"column_start":1,"column_end":60}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55591,"byte_end":55625,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55626,"byte_end":55629,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // Example baggage value passed in externally via http headers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55630,"byte_end":55696,"line_start":74,"line_end":74,"column_start":1,"column_end":67}},{"value":"/ let mut headers = HashMap::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55697,"byte_end":55734,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ headers.insert(\"baggage\".to_string(), \"user_id=1\".to_string());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55735,"byte_end":55802,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55803,"byte_end":55806,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let propagator = BaggagePropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55807,"byte_end":55853,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/ // can extract from any type that impls `Extractor`, usually an HTTP header map","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55854,"byte_end":55937,"line_start":79,"line_end":79,"column_start":1,"column_end":84}},{"value":"/ let cx = propagator.extract(&headers);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55938,"byte_end":55980,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55981,"byte_end":55984,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // Iterate over extracted name-value pairs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":55985,"byte_end":56031,"line_start":82,"line_end":82,"column_start":1,"column_end":47}},{"value":"/ for (name, value) in cx.baggage() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56032,"byte_end":56071,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/     // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56072,"byte_end":56086,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56087,"byte_end":56092,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56093,"byte_end":56096,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Add new baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56097,"byte_end":56119,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"/ let cx_with_additions = cx.with_baggage(vec![Key::new(\"server_id\").i64(42)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56120,"byte_end":56201,"line_start":88,"line_end":88,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56202,"byte_end":56205,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ // Inject baggage into http request","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56206,"byte_end":56245,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/ propagator.inject_context(&cx_with_additions, &mut headers);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56246,"byte_end":56310,"line_start":91,"line_end":91,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56311,"byte_end":56314,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ let header_value = headers.get(\"baggage\").expect(\"header is injected\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56315,"byte_end":56390,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ assert!(header_value.contains(\"user_id=1\"), \"still contains previous name-value\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56391,"byte_end":56477,"line_start":94,"line_end":94,"column_start":1,"column_end":87}},{"value":"/ assert!(header_value.contains(\"server_id=42\"), \"contains new name-value pair\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56478,"byte_end":56561,"line_start":95,"line_end":95,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56562,"byte_end":56569,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56570,"byte_end":56573,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ [W3C Baggage]: https://w3c.github.io/baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56574,"byte_end":56622,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"/ [`Baggage`]: crate::baggage::Baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56623,"byte_end":56663,"line_start":99,"line_end":99,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56822,"byte_end":56825,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<BaggagePropagator>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new baggage propagator.\n","sig":null,"attributes":[{"value":"/ Construct a new baggage propagator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56771,"byte_end":56810,"line_start":106,"line_end":106,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69109,"byte_end":69135,"line_start":62,"line_end":62,"column_start":12,"column_end":38},"name":"TextMapCompositePropagator","qualname":"::sdk::propagation::composite::TextMapCompositePropagator","value":"TextMapCompositePropagator {  }","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294}],"decl_id":null,"docs":" Composite propagator","sig":null,"attributes":[{"value":"/ Composite propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67195,"byte_end":67219,"line_start":7,"line_end":7,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67220,"byte_end":67223,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ A propagator that chains multiple [`TextMapPropagator`] propagators together,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67224,"byte_end":67305,"line_start":9,"line_end":9,"column_start":1,"column_end":82}},{"value":"/ injecting or extracting by their respective HTTP header names.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67306,"byte_end":67372,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67373,"byte_end":67376,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Injection and extraction from this propagator will preserve the order of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67377,"byte_end":67457,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ injectors and extractors passed in during initialization.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67458,"byte_end":67519,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67520,"byte_end":67523,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`TextMapPropagator`]: crate::propagation::TextMapPropagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67524,"byte_end":67588,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67589,"byte_end":67592,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67593,"byte_end":67607,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67608,"byte_end":67611,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67612,"byte_end":67619,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67620,"byte_end":67644,"line_start":20,"line_end":20,"column_start":1,"column_end":25}},{"value":"/     baggage::BaggageExt,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67645,"byte_end":67673,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"/     propagation::TextMapPropagator,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67674,"byte_end":67713,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/     trace::{TraceContextExt, Tracer, TracerProvider},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67714,"byte_end":67771,"line_start":23,"line_end":23,"column_start":1,"column_end":58}},{"value":"/     Context, KeyValue,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67772,"byte_end":67798,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67799,"byte_end":67805,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/ use opentelemetry::sdk::propagation::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67806,"byte_end":67848,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/     BaggagePropagator, TextMapCompositePropagator, TraceContextPropagator,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67849,"byte_end":67927,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67928,"byte_end":67934,"line_start":28,"line_end":28,"column_start":1,"column_end":7}},{"value":"/ use opentelemetry::sdk::trace as sdktrace;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67935,"byte_end":67981,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":67982,"byte_end":68016,"line_start":30,"line_end":30,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68017,"byte_end":68020,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // First create 1 or more propagators","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68021,"byte_end":68062,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ let baggage_propagator = BaggagePropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68063,"byte_end":68117,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/ let trace_context_propagator = TraceContextPropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68118,"byte_end":68183,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68184,"byte_end":68187,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Then create a composite propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68188,"byte_end":68229,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ let composite_propagator = TextMapCompositePropagator::new(vec![","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68230,"byte_end":68298,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/     Box::new(baggage_propagator),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68299,"byte_end":68336,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/     Box::new(trace_context_propagator),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68337,"byte_end":68380,"line_start":39,"line_end":39,"column_start":1,"column_end":44}},{"value":"/ ]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68381,"byte_end":68388,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68389,"byte_end":68392,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Then for a given implementation of `Injector`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68393,"byte_end":68445,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/ let mut injector = HashMap::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68446,"byte_end":68484,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68485,"byte_end":68488,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // And a given span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68489,"byte_end":68512,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ let example_span = sdktrace::TracerProvider::default()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68513,"byte_end":68571,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/     .tracer(\"example-component\", None)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68572,"byte_end":68614,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/     .start(\"span-name\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68615,"byte_end":68643,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68644,"byte_end":68647,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // with the current context, call inject to add the headers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68648,"byte_end":68711,"line_start":50,"line_end":50,"column_start":1,"column_end":64}},{"value":"/ composite_propagator.inject_context(","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68712,"byte_end":68752,"line_start":51,"line_end":51,"column_start":1,"column_end":41}},{"value":"/     &Context::current_with_span(example_span)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68753,"byte_end":68802,"line_start":52,"line_end":52,"column_start":1,"column_end":50}},{"value":"/         .with_baggage(vec![KeyValue::new(\"test\", \"example\")]),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68803,"byte_end":68869,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/     &mut injector,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68870,"byte_end":68892,"line_start":54,"line_end":54,"column_start":1,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68893,"byte_end":68899,"line_start":55,"line_end":55,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68900,"byte_end":68903,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // The injector now has both `baggage` and `traceparent` headers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68904,"byte_end":68972,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ assert!(injector.get(\"baggage\").is_some());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":68973,"byte_end":69020,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"/ assert!(injector.get(\"traceparent\").is_some());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69021,"byte_end":69072,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69073,"byte_end":69080,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69431,"byte_end":69434,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<TextMapCompositePropagator>::new","value":"pub fn new(Vec<Box<dyn TextMapPropagator + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new propagator out of instances of [`TextMapPropagator`].","sig":null,"attributes":[{"value":"/ Constructs a new propagator out of instances of [`TextMapPropagator`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69268,"byte_end":69342,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69347,"byte_end":69350,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`TextMapPropagator`]: crate::propagation::TextMapPropagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69355,"byte_end":69419,"line_start":70,"line_end":70,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78569,"byte_end":78591,"line_start":43,"line_end":43,"column_start":12,"column_end":34},"name":"TraceContextPropagator","qualname":"::sdk::propagation::trace_context::TraceContextPropagator","value":"TraceContextPropagator {  }","parent":null,"children":[{"krate":0,"index":2314}],"decl_id":null,"docs":" Propagates `SpanContext`s in [W3C TraceContext] format.","sig":null,"attributes":[{"value":"/ Propagates `SpanContext`s in [W3C TraceContext] format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78400,"byte_end":78459,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78460,"byte_end":78463,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [W3C TraceContext]: https://www.w3.org/TR/trace-context/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78464,"byte_end":78524,"line_start":41,"line_end":41,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78703,"byte_end":78706,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<TraceContextPropagator>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TraceContextPropagator`.\n","sig":null,"attributes":[{"value":"/ Create a new `TraceContextPropagator`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78649,"byte_end":78691,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::sdk::resource","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":482},{"krate":0,"index":500},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":2349},{"krate":0,"index":2352},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":2354},{"krate":0,"index":2358},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":596}],"decl_id":null,"docs":" # Resource","sig":null,"attributes":[{"value":"/ # Resource","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90534,"byte_end":90548,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90549,"byte_end":90552,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Resource` is an immutable representation of the entity producing telemetry. For example, a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90553,"byte_end":90650,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ process producing telemetry that is running in a container on Kubernetes has a Pod name, it is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90651,"byte_end":90749,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ in a namespace, and possibly is part of a Deployment which also has a name. All three of these","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90750,"byte_end":90848,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ attributes can be included in the `Resource`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90849,"byte_end":90898,"line_start":6,"line_end":6,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90899,"byte_end":90902,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The primary purpose of resources as a first-class concept in the SDK is decoupling of discovery","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":90903,"byte_end":91002,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ of resource information from exporters. This allows for independent development and easy","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91003,"byte_end":91095,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/ customization for users that need to integrate with closed source environments. When used with","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91096,"byte_end":91194,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/ distributed tracing, a resource can be associated with the [`TracerProvider`] when it is created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91195,"byte_end":91296,"line_start":11,"line_end":11,"column_start":1,"column_end":102}},{"value":"/ That association cannot be changed later. When associated with a `TracerProvider`, all `Span`s","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91297,"byte_end":91395,"line_start":12,"line_end":12,"column_start":1,"column_end":99}},{"value":"/ produced by any `Tracer` from the provider are associated with this `Resource`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91396,"byte_end":91479,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91480,"byte_end":91483,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`TracerProvider`]: crate::trace::TracerProvider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91484,"byte_end":91536,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91537,"byte_end":91540,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Resource detectors","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91541,"byte_end":91565,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91566,"byte_end":91569,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `ResourceDetector`s are used to detect resource from runtime or environmental variables. The","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91570,"byte_end":91666,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ following `ResourceDetector`s are provided along with this SDK.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91667,"byte_end":91734,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91735,"byte_end":91738,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - EnvResourceDetector, detect resource from environmental variables.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91739,"byte_end":91811,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ - OsResourceDetector, detect OS from runtime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91812,"byte_end":91861,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/ - ProcessResourceDetector, detect process information","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":91862,"byte_end":91919,"line_start":24,"line_end":24,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100085,"byte_end":100104,"line_start":20,"line_end":20,"column_start":12,"column_end":31},"name":"EnvResourceDetector","qualname":"::sdk::resource::env::EnvResourceDetector","value":"EnvResourceDetector {  }","parent":null,"children":[{"krate":0,"index":2322}],"decl_id":null,"docs":" Resource detector implements ResourceDetector and is used to extract\n general SDK configuration from environment.","sig":null,"attributes":[{"value":"/ Resource detector implements ResourceDetector and is used to extract","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":99747,"byte_end":99819,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ general SDK configuration from environment.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":99820,"byte_end":99867,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":99868,"byte_end":99871,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":99872,"byte_end":99879,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/tree/master/specification/resource/semantic_conventions#telemetry-sdk)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":99880,"byte_end":100039,"line_start":17,"line_end":17,"column_start":1,"column_end":160}},{"value":"/ for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100040,"byte_end":100056,"line_start":18,"line_end":18,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100531,"byte_end":100534,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<EnvResourceDetector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create `EnvResourceDetector` instance.\n","sig":null,"attributes":[{"value":"/ Create `EnvResourceDetector` instance.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100477,"byte_end":100519,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101642,"byte_end":101669,"line_start":67,"line_end":67,"column_start":12,"column_end":39},"name":"SdkProvidedResourceDetector","qualname":"::sdk::resource::env::SdkProvidedResourceDetector","value":"","parent":null,"children":[],"decl_id":null,"docs":" There are the attributes which MUST be provided by the SDK as specified in\n [the Resource SDK specification]. This detector detect those attributes and\n if the attribute cannot be detected, use the default value.","sig":null,"attributes":[{"value":"/ There are the attributes which MUST be provided by the SDK as specified in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101215,"byte_end":101293,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ [the Resource SDK specification]. This detector detect those attributes and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101294,"byte_end":101373,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ if the attribute cannot be detected, use the default value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101374,"byte_end":101437,"line_start":63,"line_end":63,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101438,"byte_end":101441,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [the Resource SDK specification]:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/sdk.md#sdk-provided-resource-attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101442,"byte_end":101613,"line_start":65,"line_end":65,"column_start":1,"column_end":172}}]},{"kind":"Struct","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104657,"byte_end":104675,"line_start":18,"line_end":18,"column_start":12,"column_end":30},"name":"OsResourceDetector","qualname":"::sdk::resource::os::OsResourceDetector","value":"","parent":null,"children":[],"decl_id":null,"docs":" Detect runtime operating system information.","sig":null,"attributes":[{"value":"/ Detect runtime operating system information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104179,"byte_end":104227,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104228,"byte_end":104231,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This detector uses Rust's [`OS constant`] to detect the operating system type and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104232,"byte_end":104317,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ maps the result to the supported value defined in [`OpenTelemetry spec`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104318,"byte_end":104395,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104396,"byte_end":104399,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`OS constant`]: https://doc.rust-lang.org/std/env/consts/constant.OS.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104400,"byte_end":104478,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ [`OpenTelemetry spec`]: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/resource/semantic_conventions/os.md","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104479,"byte_end":104628,"line_start":16,"line_end":16,"column_start":1,"column_end":150}}]},{"kind":"Struct","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":106026,"byte_end":106049,"line_start":21,"line_end":21,"column_start":12,"column_end":35},"name":"ProcessResourceDetector","qualname":"::sdk::resource::process::ProcessResourceDetector","value":"","parent":null,"children":[],"decl_id":null,"docs":" Detect process information.","sig":null,"attributes":[{"value":"/ Detect process information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105737,"byte_end":105768,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105769,"byte_end":105772,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This resource detector returns the following information:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105773,"byte_end":105834,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105835,"byte_end":105838,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - process command line arguments(`process.command_args`), the full command arguments of this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105839,"byte_end":105935,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ application.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105936,"byte_end":105952,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ - OS assigned process id(`process.pid`).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":105953,"byte_end":105997,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92642,"byte_end":92650,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"Resource","qualname":"::sdk::resource::Resource","value":"Resource {  }","parent":null,"children":[{"krate":0,"index":2340}],"decl_id":null,"docs":" Describes an entity about which identifying information and metadata is exposed.","sig":null,"attributes":[{"value":"/ Describes an entity about which identifying information and metadata is exposed.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92347,"byte_end":92431,"line_start":43,"line_end":43,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92432,"byte_end":92435,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Items are sorted by their key, and are only overwritten if the value is an empty string.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92436,"byte_end":92528,"line_start":45,"line_end":45,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92947,"byte_end":92952,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"empty","qualname":"<Resource>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty resource.\n","sig":null,"attributes":[{"value":"/ Creates an empty resource.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92905,"byte_end":92935,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93234,"byte_end":93237,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<Resource>::new","value":"pub fn new<T: IntoIterator<Item = KeyValue>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Resource` from key value pairs.","sig":null,"attributes":[{"value":"/ Create a new `Resource` from key value pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93040,"byte_end":93089,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93094,"byte_end":93097,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Values are de-duplicated by key, and the first key-value pair with a non-empty string value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93102,"byte_end":93197,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ will be retained","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93202,"byte_end":93222,"line_start":72,"line_end":72,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93587,"byte_end":93601,"line_start":86,"line_end":86,"column_start":12,"column_end":26},"name":"from_detectors","qualname":"<Resource>::from_detectors","value":"pub fn from_detectors(Duration, Vec<Box<dyn ResourceDetector>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Resource` from resource detectors.","sig":null,"attributes":[{"value":"/ Create a new `Resource` from resource detectors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93465,"byte_end":93517,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93522,"byte_end":93525,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ timeout will be applied to each detector.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":93530,"byte_end":93575,"line_start":85,"line_end":85,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94243,"byte_end":94248,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"merge","qualname":"<Resource>::merge","value":"pub fn merge<T: Deref<Target = Self>>(&Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Resource` by combining two resources.","sig":null,"attributes":[{"value":"/ Create a new `Resource` by combining two resources.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94041,"byte_end":94096,"line_start":99,"line_end":99,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94101,"byte_end":94104,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Keys from the `other` resource have priority over keys from this resource, even if the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94109,"byte_end":94199,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/ updated value is empty.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94204,"byte_end":94231,"line_start":102,"line_end":102,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94890,"byte_end":94893,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"len","qualname":"<Resource>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of attributes for this resource\n","sig":null,"attributes":[{"value":"/ Returns the number of attributes for this resource","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94824,"byte_end":94878,"line_start":124,"line_end":124,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95018,"byte_end":95026,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Resource>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the resource contains no attributes.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the resource contains no attributes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":94948,"byte_end":95006,"line_start":129,"line_end":129,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95170,"byte_end":95174,"line_start":135,"line_end":135,"column_start":12,"column_end":16},"name":"iter","qualname":"<Resource>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the attributes of this resource, sorted by key.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the attributes of this resource, sorted by key.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95085,"byte_end":95158,"line_start":134,"line_end":134,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95306,"byte_end":95309,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"get","qualname":"<Resource>::get","value":"pub fn get(&Self, Key) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the value from resource associate with given key.\n","sig":null,"attributes":[{"value":"/ Retrieve the value from resource associate with given key.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95232,"byte_end":95294,"line_start":139,"line_end":139,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95717,"byte_end":95725,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::sdk::resource::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned iterator over the entries of a `Resource`.\n","sig":null,"attributes":[{"value":"/ An owned iterator over the entries of a `Resource`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95633,"byte_end":95688,"line_start":152,"line_end":152,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96164,"byte_end":96168,"line_start":175,"line_end":175,"column_start":12,"column_end":16},"name":"Iter","qualname":"::sdk::resource::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the entries of a `Resource`.\n","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `Resource`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96086,"byte_end":96135,"line_start":173,"line_end":173,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":596},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96777,"byte_end":96793,"line_start":198,"line_end":198,"column_start":11,"column_end":27},"name":"ResourceDetector","qualname":"::sdk::resource::ResourceDetector","value":"ResourceDetector","parent":null,"children":[{"krate":0,"index":597}],"decl_id":null,"docs":" ResourceDetector detects OpenTelemetry resource information","sig":null,"attributes":[{"value":"/ ResourceDetector detects OpenTelemetry resource information","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96552,"byte_end":96615,"line_start":194,"line_end":194,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96616,"byte_end":96619,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Implementations of this trait can be passed to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96620,"byte_end":96670,"line_start":196,"line_end":196,"column_start":1,"column_end":51}},{"value":"/ the `Resource::from_detectors` function to generate a Resource from the merged information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96671,"byte_end":96766,"line_start":197,"line_end":197,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":97240,"byte_end":97246,"line_start":207,"line_end":207,"column_start":8,"column_end":14},"name":"detect","qualname":"::sdk::resource::ResourceDetector::detect","value":"pub fn detect(&Self, Duration) -> Resource","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":" detect returns an initialized Resource based on gathered information.","sig":null,"attributes":[{"value":"/ detect returns an initialized Resource based on gathered information.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96800,"byte_end":96873,"line_start":199,"line_end":199,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96878,"byte_end":96881,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ timeout is used in case the detection operation takes too much time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96886,"byte_end":96958,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96963,"byte_end":96966,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ If source information to construct a Resource is inaccessible, an empty Resource should be returned","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96971,"byte_end":97074,"line_start":203,"line_end":203,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":97079,"byte_end":97082,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If source information to construct a Resource is invalid, for example,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":97087,"byte_end":97161,"line_start":205,"line_end":205,"column_start":5,"column_end":79}},{"value":"/ missing required values. an empty Resource should be returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":97166,"byte_end":97232,"line_start":206,"line_end":206,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":598},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::sdk::trace","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":641},{"krate":0,"index":689},{"krate":0,"index":727},{"krate":0,"index":775},{"krate":0,"index":833},{"krate":0,"index":855},{"krate":0,"index":885},{"krate":0,"index":948},{"krate":0,"index":956},{"krate":0,"index":1088},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1267}],"decl_id":null,"docs":" # OpenTelemetry Trace SDK","sig":null,"attributes":[{"value":"cfg(feature = \"trace\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41475,"byte_end":41500,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/ # OpenTelemetry Trace SDK","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107027,"byte_end":107056,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107057,"byte_end":107060,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The tracing SDK consist of a few main structs:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107061,"byte_end":107111,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107112,"byte_end":107115,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * The `Tracer` struct which performs all tracing operations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107116,"byte_end":107180,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ * The `Span` struct with is a mutable object storing information about the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107181,"byte_end":107259,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ current operation execution.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107260,"byte_end":107292,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ * The `TracerProvider` struct which configures and produces `Tracer`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/mod.rs","byte_start":107293,"byte_end":107367,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":622},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108464,"byte_end":108470,"line_start":12,"line_end":12,"column_start":8,"column_end":14},"name":"config","qualname":"::sdk::trace::config::config","value":"pub fn config() -> Config","parent":null,"children":[],"decl_id":null,"docs":" Default trace configuration\n","sig":null,"attributes":[{"value":"/ Default trace configuration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108425,"byte_end":108456,"line_start":11,"line_end":11,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108563,"byte_end":108569,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Config","qualname":"::sdk::trace::config::Config","value":"Config { sampler, id_generator, span_limits, resource }","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"decl_id":null,"docs":" Tracer configuration\n","sig":null,"attributes":[{"value":"/ Tracer configuration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108510,"byte_end":108534,"line_start":16,"line_end":16,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108624,"byte_end":108631,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"sampler","qualname":"::sdk::trace::config::Config::sampler","value":"std::boxed::Box<(dyn sdk::trace::sampler::ShouldSample + 'static)>","parent":{"krate":0,"index":2361},"children":[],"decl_id":null,"docs":" The sampler that the sdk should use\n","sig":null,"attributes":[{"value":"/ The sampler that the sdk should use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108576,"byte_end":108615,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108725,"byte_end":108737,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"name":"id_generator","qualname":"::sdk::trace::config::Config::id_generator","value":"std::boxed::Box<(dyn trace::IdGenerator + 'static)>","parent":{"krate":0,"index":2361},"children":[],"decl_id":null,"docs":" The id generator that the sdk should use\n","sig":null,"attributes":[{"value":"/ The id generator that the sdk should use","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108672,"byte_end":108716,"line_start":21,"line_end":21,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108789,"byte_end":108800,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"name":"span_limits","qualname":"::sdk::trace::config::Config::span_limits","value":"sdk::trace::span_limit::SpanLimits","parent":{"krate":0,"index":2361},"children":[],"decl_id":null,"docs":" span limits\n","sig":null,"attributes":[{"value":"/ span limits","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108765,"byte_end":108780,"line_start":23,"line_end":23,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108898,"byte_end":108906,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"resource","qualname":"::sdk::trace::config::Config::resource","value":"std::option::Option<std::sync::Arc<sdk::resource::Resource>>","parent":{"krate":0,"index":2361},"children":[],"decl_id":null,"docs":" Contains attributes representing an entity that produces telemetry.\n","sig":null,"attributes":[{"value":"/ Contains attributes representing an entity that produces telemetry.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108818,"byte_end":108889,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109004,"byte_end":109016,"line_start":31,"line_end":31,"column_start":12,"column_end":24},"name":"with_sampler","qualname":"<Config>::with_sampler","value":"pub fn with_sampler<T: sdk::trace::ShouldSample + 'static>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the sampler to be used.\n","sig":null,"attributes":[{"value":"/ Specify the sampler to be used.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108957,"byte_end":108992,"line_start":30,"line_end":30,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109206,"byte_end":109223,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"with_id_generator","qualname":"<Config>::with_id_generator","value":"pub fn with_id_generator<T: IdGenerator + 'static>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the id generator to be used.\n","sig":null,"attributes":[{"value":"/ Specify the id generator to be used.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109154,"byte_end":109194,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109432,"byte_end":109456,"line_start":43,"line_end":43,"column_start":12,"column_end":36},"name":"with_max_events_per_span","qualname":"<Config>::with_max_events_per_span","value":"pub fn with_max_events_per_span(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of events to be recorded per span.\n","sig":null,"attributes":[{"value":"/ Specify the number of events to be recorded per span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109363,"byte_end":109420,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109650,"byte_end":109678,"line_start":49,"line_end":49,"column_start":12,"column_end":40},"name":"with_max_attributes_per_span","qualname":"<Config>::with_max_attributes_per_span","value":"pub fn with_max_attributes_per_span(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of attributes to be recorded per span.\n","sig":null,"attributes":[{"value":"/ Specify the number of attributes to be recorded per span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109577,"byte_end":109638,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109880,"byte_end":109903,"line_start":55,"line_end":55,"column_start":12,"column_end":35},"name":"with_max_links_per_span","qualname":"<Config>::with_max_links_per_span","value":"pub fn with_max_links_per_span(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of events to be recorded per span.\n","sig":null,"attributes":[{"value":"/ Specify the number of events to be recorded per span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":109811,"byte_end":109868,"line_start":54,"line_end":54,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110089,"byte_end":110118,"line_start":61,"line_end":61,"column_start":12,"column_end":41},"name":"with_max_attributes_per_event","qualname":"<Config>::with_max_attributes_per_event","value":"pub fn with_max_attributes_per_event(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of attributes one event can have.\n","sig":null,"attributes":[{"value":"/ Specify the number of attributes one event can have.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110021,"byte_end":110077,"line_start":60,"line_end":60,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110319,"byte_end":110347,"line_start":67,"line_end":67,"column_start":12,"column_end":40},"name":"with_max_attributes_per_link","qualname":"<Config>::with_max_attributes_per_link","value":"pub fn with_max_attributes_per_link(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of attributes one link can have.\n","sig":null,"attributes":[{"value":"/ Specify the number of attributes one link can have.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110252,"byte_end":110307,"line_start":66,"line_end":66,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110533,"byte_end":110549,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"with_span_limits","qualname":"<Config>::with_span_limits","value":"pub fn with_span_limits(Self, SpanLimits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify all limit via the span_limits\n","sig":null,"attributes":[{"value":"/ Specify all limit via the span_limits","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110480,"byte_end":110521,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110745,"byte_end":110758,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"with_resource","qualname":"<Config>::with_resource","value":"pub fn with_resource(Self, sdk::Resource) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the attributes representing the entity that produces telemetry\n","sig":null,"attributes":[{"value":"/ Specify the attributes representing the entity that produces telemetry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110659,"byte_end":110733,"line_start":78,"line_end":78,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111248,"byte_end":111264,"line_start":90,"line_end":90,"column_start":12,"column_end":28},"name":"with_no_resource","qualname":"<Config>::with_no_resource","value":"pub fn with_no_resource(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use empty resource instead of default resource in this config.","sig":null,"attributes":[{"value":"/ Use empty resource instead of default resource in this config.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110878,"byte_end":110944,"line_start":84,"line_end":84,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110949,"byte_end":110952,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Usually if no resource is provided, SDK will assign a default resource","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":110957,"byte_end":111031,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ to the `TracerProvider`, which could impact the performance. Performance","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111036,"byte_end":111112,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ sensitive application can use function to disable such behavior and assign","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111117,"byte_end":111195,"line_start":88,"line_end":88,"column_start":5,"column_end":83}},{"value":"/ no resource to `TracerProvider`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111200,"byte_end":111236,"line_start":89,"line_end":89,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2368},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":112964,"byte_end":112978,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"EvictedHashMap","qualname":"::sdk::trace::evicted_hash_map::EvictedHashMap","value":"EvictedHashMap {  }","parent":null,"children":[{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372}],"decl_id":null,"docs":" A hash map with a capped number of attributes that retains the most\n recently set entries.\n","sig":null,"attributes":[{"value":"/ A hash map with a capped number of attributes that retains the most","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":112753,"byte_end":112824,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/ recently set entries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":112825,"byte_end":112850,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113198,"byte_end":113201,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<EvictedHashMap>::new","value":"pub fn new(u32, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EvictedHashMap` with a given max length and capacity.\n","sig":null,"attributes":[{"value":"/ Create a new `EvictedHashMap` with a given max length and capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113115,"byte_end":113186,"line_start":21,"line_end":21,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113488,"byte_end":113494,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"insert","qualname":"<EvictedHashMap>::insert","value":"pub fn insert(&mut Self, KeyValue)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.\n","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113434,"byte_end":113476,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114340,"byte_end":114343,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"len","qualname":"<EvictedHashMap>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114282,"byte_end":114328,"line_start":60,"line_end":60,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114447,"byte_end":114455,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EvictedHashMap>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the map is empty.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114396,"byte_end":114435,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114563,"byte_end":114576,"line_start":71,"line_end":71,"column_start":12,"column_end":25},"name":"dropped_count","qualname":"<EvictedHashMap>::dropped_count","value":"pub fn dropped_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the dropped attribute count\n","sig":null,"attributes":[{"value":"/ Returns the dropped attribute count","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114512,"byte_end":114551,"line_start":70,"line_end":70,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114680,"byte_end":114684,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"iter","qualname":"<EvictedHashMap>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns a front-to-back iterator.\n","sig":null,"attributes":[{"value":"/ Returns a front-to-back iterator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114631,"byte_end":114668,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114833,"byte_end":114836,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<EvictedHashMap>::get","value":"pub fn get(&Self, &Key) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key if it exists\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key if it exists","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":114747,"byte_end":114821,"line_start":80,"line_end":80,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":115930,"byte_end":115938,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::sdk::trace::evicted_hash_map::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned iterator over the entries of a `EvictedHashMap`.\n","sig":null,"attributes":[{"value":"/ An owned iterator over the entries of a `EvictedHashMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":115840,"byte_end":115901,"line_start":112,"line_end":112,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116603,"byte_end":116607,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"Iter","qualname":"::sdk::trace::evicted_hash_map::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the entries of an `EvictedHashMap`.\n","sig":null,"attributes":[{"value":"/ An iterator over the entries of an `EvictedHashMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116518,"byte_end":116574,"line_start":142,"line_end":142,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117847,"byte_end":117859,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"EvictedQueue","qualname":"::sdk::trace::evicted_queue::EvictedQueue","value":"EvictedQueue {  }","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397}],"decl_id":null,"docs":" This queue maintains an ordered list of elements, and a count of\n dropped elements. Elements are removed from the queue in a first\n in first out fashion.\n","sig":null,"attributes":[{"value":"/ This queue maintains an ordered list of elements, and a count of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117570,"byte_end":117638,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ dropped elements. Elements are removed from the queue in a first","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117639,"byte_end":117707,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ in first out fashion.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117708,"byte_end":117733,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118040,"byte_end":118043,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<EvictedQueue<T>>::new","value":"pub fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EvictedQueue` with a given max length.\n","sig":null,"attributes":[{"value":"/ Create a new `EvictedQueue` with a given max length.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117972,"byte_end":118028,"line_start":19,"line_end":19,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118668,"byte_end":118678,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"append_vec","qualname":"<EvictedQueue<T>>::append_vec","value":"pub fn append_vec(&mut Self, &mut Vec<T>)","parent":null,"children":[],"decl_id":null,"docs":" Moves all the elements of other into self, leaving other empty.\n","sig":null,"attributes":[{"value":"/ Moves all the elements of other into self, leaving other empty.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118589,"byte_end":118656,"line_start":39,"line_end":39,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118823,"byte_end":118831,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EvictedQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `EvictedQueue` is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `EvictedQueue` is empty.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118761,"byte_end":118811,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118976,"byte_end":118980,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"iter","qualname":"<EvictedQueue<T>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a front-to-back iterator.\n","sig":null,"attributes":[{"value":"/ Returns a front-to-back iterator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":118927,"byte_end":118964,"line_start":49,"line_end":49,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119145,"byte_end":119148,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"len","qualname":"<EvictedQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the `EvictedQueue`.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the `EvictedQueue`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119076,"byte_end":119133,"line_start":54,"line_end":54,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119280,"byte_end":119293,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"dropped_count","qualname":"<EvictedQueue<T>>::dropped_count","value":"pub fn dropped_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Count of dropped attributes\n","sig":null,"attributes":[{"value":"/ Count of dropped attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119237,"byte_end":119268,"line_start":59,"line_end":59,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119434,"byte_end":119442,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::sdk::trace::evicted_queue::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An owned iterator over the entries of a `EvictedQueue`.\n","sig":null,"attributes":[{"value":"/ An owned iterator over the entries of a `EvictedQueue`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119346,"byte_end":119405,"line_start":65,"line_end":65,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119953,"byte_end":119957,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"Iter","qualname":"::sdk::trace::evicted_queue::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the entries of an `EvictedQueue`.\n","sig":null,"attributes":[{"value":"/ An iterator over the entries of an `EvictedQueue`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119870,"byte_end":119924,"line_start":86,"line_end":86,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123553,"byte_end":123568,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"XrayIdGenerator","qualname":"::sdk::trace::id_generator::aws::XrayIdGenerator","value":"XrayIdGenerator {  }","parent":null,"children":[{"krate":0,"index":2427}],"decl_id":null,"docs":" Generates AWS X-Ray compliant Trace and Span ids.","sig":null,"attributes":[{"value":"/ Generates AWS X-Ray compliant Trace and Span ids.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":121890,"byte_end":121943,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":121944,"byte_end":121947,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Generates OpenTelemetry formatted `TraceId`'s and `SpanId`'s. The `TraceId`'s are generated so","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":121948,"byte_end":122046,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ they can be backed out into X-Ray format by the [AWS X-Ray Exporter][xray-exporter] in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122047,"byte_end":122141,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ [OpenTelemetry Collector][otel-collector].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122142,"byte_end":122188,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122189,"byte_end":122192,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## Trace ID Format","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122193,"byte_end":122215,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122216,"byte_end":122219,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `trace_id` consists of three numbers separated by hyphens. For example, `1-58406520-a006649127e371903a2de979`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122220,"byte_end":122336,"line_start":13,"line_end":13,"column_start":1,"column_end":117}},{"value":"/ This includes:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122337,"byte_end":122355,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122356,"byte_end":122359,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * The version number, that is, 1.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122360,"byte_end":122397,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/ * The time of the original request, in Unix epoch time, in 8 hexadecimal digits.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122398,"byte_end":122482,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ * For example, 10:00AM December 1st, 2016 PST in epoch time is 1480615200 seconds, or 58406520 in hexadecimal digits.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122483,"byte_end":122604,"line_start":18,"line_end":18,"column_start":1,"column_end":122}},{"value":"/ * A 96-bit identifier for the trace, globally unique, in 24 hexadecimal digits.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122605,"byte_end":122688,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122689,"byte_end":122692,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ See the [AWS X-Ray Documentation][xray-trace-id] for more details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122693,"byte_end":122763,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122764,"byte_end":122767,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122768,"byte_end":122782,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122783,"byte_end":122786,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122787,"byte_end":122794,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::trace::noop::NoopSpanExporter;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122795,"byte_end":122848,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ use opentelemetry::sdk::trace::{self, TracerProvider, XrayIdGenerator};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122849,"byte_end":122924,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122925,"byte_end":122928,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let _provider: TracerProvider = TracerProvider::builder()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122929,"byte_end":122990,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     .with_simple_exporter(NoopSpanExporter::new())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":122991,"byte_end":123045,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/     .with_config(trace::config().with_id_generator(XrayIdGenerator::default()))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123046,"byte_end":123129,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/     .build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123130,"byte_end":123147,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123148,"byte_end":123155,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123156,"byte_end":123159,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [otel-collector]: https://github.com/open-telemetry/opentelemetry-collector-contrib#opentelemetry-collector-contrib","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123160,"byte_end":123279,"line_start":35,"line_end":35,"column_start":1,"column_end":120}},{"value":"/ [xray-exporter]: https://godoc.org/github.com/open-telemetry/opentelemetry-collector-contrib/exporter/awsxrayexporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123280,"byte_end":123401,"line_start":36,"line_end":36,"column_start":1,"column_end":122}},{"value":"/ [xray-trace-id]: https://docs.aws.amazon.com/xray/latest/devguide/xray-api-sendingdata.html#xray-api-traceids","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123402,"byte_end":123515,"line_start":37,"line_end":37,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","byte_start":121185,"byte_end":121196,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"IdGenerator","qualname":"::sdk::trace::id_generator::IdGenerator","value":"IdGenerator {  }","parent":null,"children":[{"krate":0,"index":2433}],"decl_id":null,"docs":" Default [`crate::trace::IdGenerator`] implementation.\n Generates Trace and Span ids using a random number generator.\n","sig":null,"attributes":[{"value":"/ Default [`crate::trace::IdGenerator`] implementation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","byte_start":121017,"byte_end":121074,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ Generates Trace and Span ids using a random number generator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","byte_start":121075,"byte_end":121140,"line_start":9,"line_end":9,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126660,"byte_end":126674,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"TracerProvider","qualname":"::sdk::trace::provider::TracerProvider","value":"TracerProvider {  }","parent":null,"children":[{"krate":0,"index":2451}],"decl_id":null,"docs":" Creator and registry of named `Tracer` instances.\n","sig":null,"attributes":[{"value":"/ Creator and registry of named `Tracer` instances.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126571,"byte_end":126624,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127050,"byte_end":127057,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"builder","qualname":"<TracerProvider>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TracerProvider` builder.\n","sig":null,"attributes":[{"value":"/ Create a new `TracerProvider` builder.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126996,"byte_end":127038,"line_start":60,"line_end":60,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127172,"byte_end":127187,"line_start":66,"line_end":66,"column_start":12,"column_end":27},"name":"span_processors","qualname":"<TracerProvider>::span_processors","value":"pub fn span_processors(&Self) -> &Vec<Box<dyn SpanProcessor>>","parent":null,"children":[],"decl_id":null,"docs":" Span processors associated with this provider\n","sig":null,"attributes":[{"value":"/ Span processors associated with this provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127111,"byte_end":127160,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127321,"byte_end":127327,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"config","qualname":"<TracerProvider>::config","value":"pub fn config(&Self) -> &sdk::trace::Config","parent":null,"children":[],"decl_id":null,"docs":" Config associated with this tracer\n","sig":null,"attributes":[{"value":"/ Config associated with this tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127271,"byte_end":127309,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128423,"byte_end":128430,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"Builder","qualname":"::sdk::trace::provider::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"decl_id":null,"docs":" Builder for provider attributes.\n","sig":null,"attributes":[{"value":"/ Builder for provider attributes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128349,"byte_end":128385,"line_start":102,"line_end":102,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128597,"byte_end":128617,"line_start":111,"line_end":111,"column_start":12,"column_end":32},"name":"with_simple_exporter","qualname":"<Builder>::with_simple_exporter","value":"pub fn with_simple_exporter<T: SpanExporter + 'static>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The `SpanExporter` that this provider should use.\n","sig":null,"attributes":[{"value":"/ The `SpanExporter` that this provider should use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128532,"byte_end":128585,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128995,"byte_end":129014,"line_start":121,"line_end":121,"column_start":12,"column_end":31},"name":"with_batch_exporter","qualname":"<Builder>::with_batch_exporter","value":"pub fn with_batch_exporter<T: SpanExporter + 'static,\nR: TraceRuntime>(Self, T, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The `SpanExporter` setup using a default `BatchSpanProcessor` that this provider should use.\n","sig":null,"attributes":[{"value":"/ The `SpanExporter` setup using a default `BatchSpanProcessor` that this provider should use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128887,"byte_end":128983,"line_start":120,"line_end":120,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129336,"byte_end":129355,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"with_span_processor","qualname":"<Builder>::with_span_processor","value":"pub fn with_span_processor<T: SpanProcessor + 'static>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The `SpanProcessor` that this provider should use.\n","sig":null,"attributes":[{"value":"/ The `SpanProcessor` that this provider should use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129270,"byte_end":129324,"line_start":130,"line_end":130,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129618,"byte_end":129629,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Builder>::with_config","value":"pub fn with_config(Self, sdk::trace::Config) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The sdk `Config` that this provider will use.\n","sig":null,"attributes":[{"value":"/ The sdk `Config` that this provider will use.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129557,"byte_end":129606,"line_start":138,"line_end":138,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129782,"byte_end":129787,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(Self) -> TracerProvider","parent":null,"children":[],"decl_id":null,"docs":" Create a new provider from this configuration.\n","sig":null,"attributes":[{"value":"/ Create a new provider from this configuration.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":129720,"byte_end":129770,"line_start":143,"line_end":143,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134809,"byte_end":134821,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TraceRuntime","qualname":"::sdk::trace::runtime::TraceRuntime","value":"TraceRuntime: Runtime","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":" Trace runtime is an extension to [`Runtime`]. Currently it provides a channel that used\n by [`BatchSpanProcessor`].","sig":null,"attributes":[{"value":"/ Trace runtime is an extension to [`Runtime`]. Currently it provides a channel that used","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134565,"byte_end":134656,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ by [`BatchSpanProcessor`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134657,"byte_end":134687,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134688,"byte_end":134691,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`BatchSpanProcessor`]: crate::sdk::trace::BatchSpanProcessor","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134692,"byte_end":134757,"line_start":37,"line_end":37,"column_start":1,"column_end":66}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134758,"byte_end":134798,"line_start":38,"line_end":38,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":850},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134911,"byte_end":134919,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"name":"Receiver","qualname":"::sdk::trace::runtime::TraceRuntime::Receiver","value":"type Receiver: Stream<Item = BatchMessage> + Send;","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" A future stream to receive the batch messages from channels.\n","sig":null,"attributes":[{"value":"/ A future stream to receive the batch messages from channels.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134837,"byte_end":134901,"line_start":40,"line_end":40,"column_start":5,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":851},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135040,"byte_end":135046,"line_start":44,"line_end":44,"column_start":10,"column_end":16},"name":"Sender","qualname":"::sdk::trace::runtime::TraceRuntime::Sender","value":"type Sender: TrySend + Debug;","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" A batch messages sender that could be sent across thread safely.\n","sig":null,"attributes":[{"value":"/ A batch messages sender that could be sent across thread safely.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134962,"byte_end":135030,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135154,"byte_end":135175,"line_start":47,"line_end":47,"column_start":8,"column_end":29},"name":"batch_message_channel","qualname":"::sdk::trace::runtime::TraceRuntime::batch_message_channel","value":"pub fn batch_message_channel(&Self, usize) -> (Self::Sender, Self::Receiver)","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":" Return the sender and receiver used to send batch message between tasks.\n","sig":null,"attributes":[{"value":"/ Return the sender and receiver used to send batch message between tasks.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135070,"byte_end":135146,"line_start":46,"line_end":46,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":853},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135341,"byte_end":135348,"line_start":51,"line_end":51,"column_start":11,"column_end":18},"name":"TrySend","qualname":"::sdk::trace::runtime::TrySend","value":"TrySend: Sync + Send","parent":null,"children":[{"krate":0,"index":854}],"decl_id":null,"docs":" TrySend is an abstraction of sender that is capable to send BatchMessage with reference.\n","sig":null,"attributes":[{"value":"/ TrySend is an abstraction of sender that is capable to send BatchMessage with reference.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135238,"byte_end":135330,"line_start":50,"line_end":50,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135517,"byte_end":135525,"line_start":55,"line_end":55,"column_start":8,"column_end":16},"name":"try_send","qualname":"::sdk::trace::runtime::TrySend::try_send","value":"pub fn try_send(&Self, BatchMessage) -> Result<(), TraceError>","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" Try to send one batch message to worker thread.","sig":null,"attributes":[{"value":"/ Try to send one batch message to worker thread.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135368,"byte_end":135419,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135424,"byte_end":135427,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It can fail because either the receiver has closed or the buffer is full.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135432,"byte_end":135509,"line_start":54,"line_end":54,"column_start":5,"column_end":82}}]},{"kind":"Trait","id":{"krate":0,"index":879},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140330,"byte_end":140342,"line_start":48,"line_end":48,"column_start":11,"column_end":23},"name":"ShouldSample","qualname":"::sdk::trace::sampler::ShouldSample","value":"ShouldSample: Send + Sync + std::fmt::Debug","parent":null,"children":[{"krate":0,"index":880}],"decl_id":null,"docs":" The `ShouldSample` interface allows implementations to provide samplers\n which will return a sampling `SamplingResult` based on information that\n is typically available just before the `Span` was created.\n","sig":null,"attributes":[{"value":"/ The `ShouldSample` interface allows implementations to provide samplers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140105,"byte_end":140180,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ which will return a sampling `SamplingResult` based on information that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140181,"byte_end":140256,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/ is typically available just before the `Span` was created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140257,"byte_end":140319,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140491,"byte_end":140504,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"should_sample","qualname":"::sdk::trace::sampler::ShouldSample::should_sample","value":"pub fn should_sample(&Self, Option<&Context>, TraceId, &str, &SpanKind,\n&[KeyValue], &[Link]) -> SamplingResult","parent":{"krate":0,"index":879},"children":[],"decl_id":null,"docs":" Returns the `SamplingDecision` for a `Span` to be created.\n","sig":null,"attributes":[{"value":"/ Returns the `SamplingDecision` for a `Span` to be created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140380,"byte_end":140442,"line_start":49,"line_end":49,"column_start":5,"column_end":67}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140447,"byte_end":140483,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140824,"byte_end":140838,"line_start":64,"line_end":64,"column_start":12,"column_end":26},"name":"SamplingResult","qualname":"::sdk::trace::sampler::SamplingResult","value":"SamplingResult { decision, attributes, trace_state }","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466}],"decl_id":null,"docs":" The result of sampling logic for a given `Span`.\n","sig":null,"attributes":[{"value":"/ The result of sampling logic for a given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140725,"byte_end":140777,"line_start":62,"line_end":62,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2464},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140899,"byte_end":140907,"line_start":66,"line_end":66,"column_start":9,"column_end":17},"name":"decision","qualname":"::sdk::trace::sampler::SamplingResult::decision","value":"sdk::trace::sampler::SamplingDecision","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" `SamplingDecision` reached by this result\n","sig":null,"attributes":[{"value":"/ `SamplingDecision` reached by this result","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140845,"byte_end":140890,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140981,"byte_end":140991,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"attributes","qualname":"::sdk::trace::sampler::SamplingResult::attributes","value":"std::vec::Vec<common::KeyValue>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" Extra attributes added by this result\n","sig":null,"attributes":[{"value":"/ Extra attributes added by this result","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140931,"byte_end":140972,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141086,"byte_end":141097,"line_start":70,"line_end":70,"column_start":9,"column_end":20},"name":"trace_state","qualname":"::sdk::trace::sampler::SamplingResult::trace_state","value":"trace::span_context::TraceState","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":" Trace state from parent context, might be modified by sampler\n","sig":null,"attributes":[{"value":"/ Trace state from parent context, might be modified by sampler","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141012,"byte_end":141077,"line_start":69,"line_end":69,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141341,"byte_end":141345,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"Drop","qualname":"::sdk::trace::sampler::SamplingDecision::Drop","value":"SamplingDecision::Drop","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" `is_recording() == false`, span will not be recorded and all events and\n attributes will be dropped.\n","sig":null,"attributes":[{"value":"/ `is_recording() == false`, span will not be recorded and all events and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141225,"byte_end":141300,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ attributes will be dropped.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141305,"byte_end":141336,"line_start":77,"line_end":77,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141421,"byte_end":141431,"line_start":80,"line_end":80,"column_start":5,"column_end":15},"name":"RecordOnly","qualname":"::sdk::trace::sampler::SamplingDecision::RecordOnly","value":"SamplingDecision::RecordOnly","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" `is_recording() == true`, but `Sampled` flag MUST NOT be set.\n","sig":null,"attributes":[{"value":"/ `is_recording() == true`, but `Sampled` flag MUST NOT be set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141351,"byte_end":141416,"line_start":79,"line_end":79,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141503,"byte_end":141518,"line_start":82,"line_end":82,"column_start":5,"column_end":20},"name":"RecordAndSample","qualname":"::sdk::trace::sampler::SamplingDecision::RecordAndSample","value":"SamplingDecision::RecordAndSample","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":" `is_recording() == true` AND `Sampled` flag` MUST be set.\n","sig":null,"attributes":[{"value":"/ `is_recording() == true` AND `Sampled` flag` MUST be set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141437,"byte_end":141498,"line_start":81,"line_end":81,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141202,"byte_end":141218,"line_start":75,"line_end":75,"column_start":10,"column_end":26},"name":"SamplingDecision","qualname":"::sdk::trace::sampler::SamplingDecision","value":"pub enum SamplingDecision { Drop, RecordOnly, RecordAndSample, }","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480}],"decl_id":null,"docs":" Decision about whether or not to sample\n","sig":null,"attributes":[{"value":"/ Decision about whether or not to sample","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141114,"byte_end":141157,"line_start":73,"line_end":73,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141623,"byte_end":141631,"line_start":89,"line_end":89,"column_start":5,"column_end":13},"name":"AlwaysOn","qualname":"::sdk::trace::sampler::Sampler::AlwaysOn","value":"Sampler::AlwaysOn","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" Always sample the trace\n","sig":null,"attributes":[{"value":"/ Always sample the trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141591,"byte_end":141618,"line_start":88,"line_end":88,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141668,"byte_end":141677,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"AlwaysOff","qualname":"::sdk::trace::sampler::Sampler::AlwaysOff","value":"Sampler::AlwaysOff","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" Never sample the trace\n","sig":null,"attributes":[{"value":"/ Never sample the trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141637,"byte_end":141663,"line_start":90,"line_end":90,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141784,"byte_end":141795,"line_start":93,"line_end":93,"column_start":5,"column_end":16},"name":"ParentBased","qualname":"::sdk::trace::sampler::Sampler::ParentBased","value":"Sampler::ParentBased(Box<Sampler>)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" Respects the parent span's sampling decision or delegates a delegate sampler for root spans.\n","sig":null,"attributes":[{"value":"/ Respects the parent span's sampling decision or delegates a delegate sampler for root spans.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141683,"byte_end":141779,"line_start":92,"line_end":92,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":142079,"byte_end":142096,"line_start":97,"line_end":97,"column_start":5,"column_end":22},"name":"TraceIdRatioBased","qualname":"::sdk::trace::sampler::Sampler::TraceIdRatioBased","value":"Sampler::TraceIdRatioBased(f64)","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":" Sample a given fraction of traces. Fractions >= 1 will always sample. If the parent span is\n sampled, then it's child spans will automatically be sampled. Fractions < 0 are treated as\n zero, but spans may still be sampled if their parent is.\n","sig":null,"attributes":[{"value":"/ Sample a given fraction of traces. Fractions >= 1 will always sample. If the parent span is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141815,"byte_end":141910,"line_start":94,"line_end":94,"column_start":5,"column_end":100}},{"value":"/ sampled, then it's child spans will automatically be sampled. Fractions < 0 are treated as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141915,"byte_end":142009,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ zero, but spans may still be sampled if their parent is.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":142014,"byte_end":142074,"line_start":96,"line_end":96,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141577,"byte_end":141584,"line_start":87,"line_end":87,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::sdk::trace::sampler::Sampler","value":"pub enum Sampler {\n    AlwaysOn,\n    AlwaysOff,\n    ParentBased(Box<Sampler>),\n    TraceIdRatioBased(f64),\n}","parent":null,"children":[{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2497}],"decl_id":null,"docs":" Sampling options\n","sig":null,"attributes":[{"value":"/ Sampling options","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":141523,"byte_end":141543,"line_start":85,"line_end":85,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":152114,"byte_end":152118,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"Span","qualname":"::sdk::trace::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508}],"decl_id":null,"docs":" Single operation within a trace.\n","sig":null,"attributes":[{"value":"/ Single operation within a trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":152049,"byte_end":152085,"line_start":18,"line_end":18,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":153697,"byte_end":153710,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"exported_data","qualname":"<Span>::exported_data","value":"pub fn exported_data(&Self) -> Option<crate::sdk::export::trace::SpanData>","parent":null,"children":[],"decl_id":null,"docs":" Convert information in this span into `exporter::trace::SpanData`.\n This function copies all data from the current span, which will create a\n overhead.\n","sig":null,"attributes":[{"value":"/ Convert information in this span into `exporter::trace::SpanData`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":153516,"byte_end":153586,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ This function copies all data from the current span, which will create a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":153591,"byte_end":153667,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ overhead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":153672,"byte_end":153685,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173709,"byte_end":173719,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"SpanLimits","qualname":"::sdk::trace::span_limit::SpanLimits","value":"SpanLimits { max_events_per_span, max_attributes_per_span, max_links_per_span, max_attributes_per_event, max_attributes_per_link }","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"decl_id":null,"docs":" Span limit configuration to keep attributes, events and links to a span in a reasonable number.\n","sig":null,"attributes":[{"value":"/ Span limit configuration to keep attributes, events and links to a span in a reasonable number.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173568,"byte_end":173667,"line_start":22,"line_end":22,"column_start":1,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173784,"byte_end":173803,"line_start":26,"line_end":26,"column_start":9,"column_end":28},"name":"max_events_per_span","qualname":"::sdk::trace::span_limit::SpanLimits::max_events_per_span","value":"u32","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":" The max events that can be added to a `Span`.\n","sig":null,"attributes":[{"value":"/ The max events that can be added to a `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173726,"byte_end":173775,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173876,"byte_end":173899,"line_start":28,"line_end":28,"column_start":9,"column_end":32},"name":"max_attributes_per_span","qualname":"::sdk::trace::span_limit::SpanLimits::max_attributes_per_span","value":"u32","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":" The max attributes that can be added to a `Span`.\n","sig":null,"attributes":[{"value":"/ The max attributes that can be added to a `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173814,"byte_end":173867,"line_start":27,"line_end":27,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173967,"byte_end":173985,"line_start":30,"line_end":30,"column_start":9,"column_end":27},"name":"max_links_per_span","qualname":"::sdk::trace::span_limit::SpanLimits::max_links_per_span","value":"u32","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":" The max links that can be added to a `Span`.\n","sig":null,"attributes":[{"value":"/ The max links that can be added to a `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173910,"byte_end":173958,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":174061,"byte_end":174085,"line_start":32,"line_end":32,"column_start":9,"column_end":33},"name":"max_attributes_per_event","qualname":"::sdk::trace::span_limit::SpanLimits::max_attributes_per_event","value":"u32","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":" The max attributes that can be added into an `Event`\n","sig":null,"attributes":[{"value":"/ The max attributes that can be added into an `Event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":173996,"byte_end":174052,"line_start":31,"line_end":31,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":174159,"byte_end":174182,"line_start":34,"line_end":34,"column_start":9,"column_end":32},"name":"max_attributes_per_link","qualname":"::sdk::trace::span_limit::SpanLimits::max_attributes_per_link","value":"u32","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":" The max attributes that can be added into a `Link`\n","sig":null,"attributes":[{"value":"/ The max attributes that can be added into a `Link`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":174096,"byte_end":174150,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177747,"byte_end":177760,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"SpanProcessor","qualname":"::sdk::trace::span_processor::SpanProcessor","value":"SpanProcessor: Send + Sync + std::fmt::Debug","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"decl_id":null,"docs":" `SpanProcessor` is an interface which allows hooks for span start and end\n method invocations. The span processors are invoked only when is_recording\n is true.\n","sig":null,"attributes":[{"value":"/ `SpanProcessor` is an interface which allows hooks for span start and end","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177567,"byte_end":177644,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ method invocations. The span processors are invoked only when is_recording","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177645,"byte_end":177723,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ is true.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177724,"byte_end":177736,"line_start":67,"line_end":67,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177997,"byte_end":178005,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"on_start","qualname":"::sdk::trace::span_processor::SpanProcessor::on_start","value":"pub fn on_start(&Self, &mut Span, &Context)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" `on_start` is called when a `Span` is started.  This method is called\n synchronously on the thread that started the span, therefore it should\n not block or throw exceptions.\n","sig":null,"attributes":[{"value":"/ `on_start` is called when a `Span` is started.  This method is called","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177798,"byte_end":177871,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ synchronously on the thread that started the span, therefore it should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177876,"byte_end":177950,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ not block or throw exceptions.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177955,"byte_end":177989,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178278,"byte_end":178284,"line_start":76,"line_end":76,"column_start":8,"column_end":14},"name":"on_end","qualname":"::sdk::trace::span_processor::SpanProcessor::on_end","value":"pub fn on_end(&Self, SpanData)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" `on_end` is called after a `Span` is ended (i.e., the end timestamp is\n already set). This method is called synchronously within the `Span::end`\n API, therefore it should not block or throw an exception.\n","sig":null,"attributes":[{"value":"/ `on_end` is called after a `Span` is ended (i.e., the end timestamp is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178049,"byte_end":178123,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ already set). This method is called synchronously within the `Span::end`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178128,"byte_end":178204,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ API, therefore it should not block or throw an exception.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178209,"byte_end":178270,"line_start":75,"line_end":75,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178375,"byte_end":178386,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"force_flush","qualname":"::sdk::trace::span_processor::SpanProcessor::force_flush","value":"pub fn force_flush(&Self) -> TraceResult<()>","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Force the spans lying in the cache to be exported.\n","sig":null,"attributes":[{"value":"/ Force the spans lying in the cache to be exported.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178313,"byte_end":178367,"line_start":77,"line_end":77,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178559,"byte_end":178567,"line_start":81,"line_end":81,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::sdk::trace::span_processor::SpanProcessor::shutdown","value":"pub fn shutdown(&mut Self) -> TraceResult<()>","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" Shuts down the processor. Called when SDK is shut down. This is an\n opportunity for processors to do any cleanup required.\n","sig":null,"attributes":[{"value":"/ Shuts down the processor. Called when SDK is shut down. This is an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178418,"byte_end":178488,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ opportunity for processors to do any cleanup required.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178493,"byte_end":178551,"line_start":80,"line_end":80,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179348,"byte_end":179367,"line_start":105,"line_end":105,"column_start":12,"column_end":31},"name":"SimpleSpanProcessor","qualname":"::sdk::trace::span_processor::SimpleSpanProcessor","value":"SimpleSpanProcessor {  }","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543}],"decl_id":null,"docs":" A [`SpanProcessor`] that exports synchronously when spans are finished.","sig":null,"attributes":[{"value":"/ A [`SpanProcessor`] that exports synchronously when spans are finished.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178602,"byte_end":178677,"line_start":84,"line_end":84,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178678,"byte_end":178681,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178682,"byte_end":178696,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178697,"byte_end":178700,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that the simple processor exports synchronously every time a span is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178701,"byte_end":178778,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ ended. If you find this limiting, consider the batch processor instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178779,"byte_end":178854,"line_start":89,"line_end":89,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178855,"byte_end":178858,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178859,"byte_end":178866,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{trace::noop::NoopSpanExporter, sdk, global};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178867,"byte_end":178935,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178936,"byte_end":178939,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // Configure your preferred exporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178940,"byte_end":178980,"line_start":94,"line_end":94,"column_start":1,"column_end":41}},{"value":"/ let exporter = NoopSpanExporter::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":178981,"byte_end":179024,"line_start":95,"line_end":95,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179025,"byte_end":179028,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // Then use the `with_simple_exporter` method to have the provider export when spans finish.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179029,"byte_end":179125,"line_start":97,"line_end":97,"column_start":1,"column_end":97}},{"value":"/ let provider = sdk::trace::TracerProvider::builder()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179126,"byte_end":179182,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"/     .with_simple_exporter(exporter)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179183,"byte_end":179222,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/     .build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179223,"byte_end":179240,"line_start":100,"line_end":100,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179241,"byte_end":179244,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let previous_provider = global::set_tracer_provider(provider);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179245,"byte_end":179311,"line_start":102,"line_end":102,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179312,"byte_end":179319,"line_start":103,"line_end":103,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183722,"byte_end":183740,"line_start":229,"line_end":229,"column_start":12,"column_end":30},"name":"BatchSpanProcessor","qualname":"::sdk::trace::span_processor::BatchSpanProcessor","value":"BatchSpanProcessor {  }","parent":null,"children":[{"krate":0,"index":1046}],"decl_id":null,"docs":" A [`SpanProcessor`] that asynchronously buffers finished spans and reports\n them at a preconfigured interval.","sig":null,"attributes":[{"value":"/ A [`SpanProcessor`] that asynchronously buffers finished spans and reports","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181354,"byte_end":181432,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ them at a preconfigured interval.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181433,"byte_end":181470,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181471,"byte_end":181474,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Batch span processors need to run a background task to collect and send","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181475,"byte_end":181550,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ spans. Different runtimes need different ways to handle the background task.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181551,"byte_end":181631,"line_start":175,"line_end":175,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181632,"byte_end":181635,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Note: Configuring an opentelemetry `Runtime` that's not compatible with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181636,"byte_end":181715,"line_start":177,"line_end":177,"column_start":1,"column_end":80}},{"value":"/ underlying runtime can cause deadlocks (see tokio section).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181716,"byte_end":181779,"line_start":178,"line_end":178,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181780,"byte_end":181783,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ### Use with Tokio","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181784,"byte_end":181806,"line_start":180,"line_end":180,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181807,"byte_end":181810,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Tokio currently offers two different schedulers. One is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181811,"byte_end":181870,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ `current_thread_scheduler`, the other is `multiple_thread_scheduler`. Both","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181871,"byte_end":181949,"line_start":183,"line_end":183,"column_start":1,"column_end":79}},{"value":"/ of them default to use batch span processors to install span exporters.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":181950,"byte_end":182025,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182026,"byte_end":182029,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Tokio's `current_thread_scheduler` can cause the program to hang forever if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182030,"byte_end":182109,"line_start":186,"line_end":186,"column_start":1,"column_end":80}},{"value":"/ blocking work is scheduled with other tasks in the same runtime. To avoid","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182110,"byte_end":182187,"line_start":187,"line_end":187,"column_start":1,"column_end":78}},{"value":"/ this, be sure to enable the `rt-tokio-current-thread` feature in this crate","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182188,"byte_end":182267,"line_start":188,"line_end":188,"column_start":1,"column_end":80}},{"value":"/ if you are using that runtime (e.g. users of actix-web), and blocking tasks","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182268,"byte_end":182347,"line_start":189,"line_end":189,"column_start":1,"column_end":80}},{"value":"/ will then be scheduled on a different thread.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182348,"byte_end":182397,"line_start":190,"line_end":190,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182398,"byte_end":182401,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182402,"byte_end":182416,"line_start":192,"line_end":192,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182417,"byte_end":182420,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This processor can be configured with an [`executor`] of your choice to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182421,"byte_end":182496,"line_start":194,"line_end":194,"column_start":1,"column_end":76}},{"value":"/ batch and upload spans asynchronously when they end. If you have added a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182497,"byte_end":182573,"line_start":195,"line_end":195,"column_start":1,"column_end":77}},{"value":"/ library like [`tokio`] or [`async-std`], you can pass in their respective","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182574,"byte_end":182651,"line_start":196,"line_end":196,"column_start":1,"column_end":78}},{"value":"/ `spawn` and `interval` functions to have batching performed in those","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182652,"byte_end":182724,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"/ contexts.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182725,"byte_end":182738,"line_start":198,"line_end":198,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182739,"byte_end":182742,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182743,"byte_end":182750,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature=\"tokio\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182751,"byte_end":182780,"line_start":201,"line_end":201,"column_start":1,"column_end":30}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182781,"byte_end":182788,"line_start":202,"line_end":202,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, runtime, sdk, trace::noop::NoopSpanExporter};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182789,"byte_end":182866,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182867,"byte_end":182895,"line_start":204,"line_end":204,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182896,"byte_end":182899,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182900,"byte_end":182918,"line_start":206,"line_end":206,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182919,"byte_end":182940,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/     // Configure your preferred exporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182941,"byte_end":182985,"line_start":208,"line_end":208,"column_start":1,"column_end":45}},{"value":"/     let exporter = NoopSpanExporter::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":182986,"byte_end":183033,"line_start":209,"line_end":209,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183034,"byte_end":183037,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/     // Create a batch span processor using an exporter and a runtime","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183038,"byte_end":183110,"line_start":211,"line_end":211,"column_start":1,"column_end":73}},{"value":"/     let batch = sdk::trace::BatchSpanProcessor::builder(exporter, runtime::Tokio)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183111,"byte_end":183196,"line_start":212,"line_end":212,"column_start":1,"column_end":86}},{"value":"/         .with_max_queue_size(4096)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183197,"byte_end":183235,"line_start":213,"line_end":213,"column_start":1,"column_end":39}},{"value":"/         .build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183236,"byte_end":183257,"line_start":214,"line_end":214,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183258,"byte_end":183261,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/     // Then use the `with_batch_exporter` method to have the provider export spans in batches.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183262,"byte_end":183360,"line_start":216,"line_end":216,"column_start":1,"column_end":99}},{"value":"/     let provider = sdk::trace::TracerProvider::builder()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183361,"byte_end":183421,"line_start":217,"line_end":217,"column_start":1,"column_end":61}},{"value":"/         .with_span_processor(batch)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183422,"byte_end":183461,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"/         .build();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183462,"byte_end":183483,"line_start":219,"line_end":219,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183484,"byte_end":183487,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/     let _ = global::set_tracer_provider(provider);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183488,"byte_end":183542,"line_start":221,"line_end":221,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183543,"byte_end":183548,"line_start":222,"line_end":222,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183549,"byte_end":183556,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183557,"byte_end":183564,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183565,"byte_end":183568,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ [`executor`]: https://docs.rs/futures/0.3/futures/executor/index.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183569,"byte_end":183642,"line_start":226,"line_end":226,"column_start":1,"column_end":74}},{"value":"/ [`tokio`]: https://tokio.rs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183643,"byte_end":183674,"line_start":227,"line_end":227,"column_start":1,"column_end":32}},{"value":"/ [`async-std`]: https://async.rs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183675,"byte_end":183710,"line_start":228,"line_end":228,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185313,"byte_end":185323,"line_start":279,"line_end":279,"column_start":5,"column_end":15},"name":"ExportSpan","qualname":"::sdk::trace::span_processor::BatchMessage::ExportSpan","value":"BatchMessage::ExportSpan(SpanData)","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Export spans, usually called when span ends\n","sig":null,"attributes":[{"value":"/ Export spans, usually called when span ends","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185261,"byte_end":185308,"line_start":278,"line_end":278,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185479,"byte_end":185484,"line_start":282,"line_end":282,"column_start":5,"column_end":10},"name":"Flush","qualname":"::sdk::trace::span_processor::BatchMessage::Flush","value":"BatchMessage::Flush(Option<oneshot::Sender<ExportResult>>)","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Flush the current buffer to the backend, it can be triggered by\n pre configured interval or a call to `force_push` function.\n","sig":null,"attributes":[{"value":"/ Flush the current buffer to the backend, it can be triggered by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185339,"byte_end":185406,"line_start":280,"line_end":280,"column_start":5,"column_end":72}},{"value":"/ pre configured interval or a call to `force_push` function.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185411,"byte_end":185474,"line_start":281,"line_end":281,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185607,"byte_end":185615,"line_start":284,"line_end":284,"column_start":5,"column_end":13},"name":"Shutdown","qualname":"::sdk::trace::span_processor::BatchMessage::Shutdown","value":"BatchMessage::Shutdown(oneshot::Sender<ExportResult>)","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":" Shut down the worker thread, push all spans in buffer to the backend.\n","sig":null,"attributes":[{"value":"/ Shut down the worker thread, push all spans in buffer to the backend.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185529,"byte_end":185602,"line_start":283,"line_end":283,"column_start":5,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185242,"byte_end":185254,"line_start":277,"line_end":277,"column_start":10,"column_end":22},"name":"BatchMessage","qualname":"::sdk::trace::span_processor::BatchMessage","value":"pub enum BatchMessage {\n    ExportSpan(SpanData),\n    Flush(Option<oneshot::Sender<ExportResult>>),\n    Shutdown(oneshot::Sender<ExportResult>),\n}","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553}],"decl_id":null,"docs":" Messages sent between application thread and batch span processor's work thread.\n","sig":null,"attributes":[{"value":"/ Messages sent between application thread and batch span processor's work thread.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185131,"byte_end":185215,"line_start":275,"line_end":275,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":189369,"byte_end":189376,"line_start":376,"line_end":376,"column_start":12,"column_end":19},"name":"builder","qualname":"<BatchSpanProcessor<R>>::builder","value":"pub fn builder<E>(E, R) -> BatchSpanProcessorBuilder<E, R> where\nE: SpanExporter","parent":null,"children":[],"decl_id":null,"docs":" Create a new batch processor builder\n","sig":null,"attributes":[{"value":"/ Create a new batch processor builder","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":189317,"byte_end":189357,"line_start":375,"line_end":375,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2558},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":190288,"byte_end":190299,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"name":"BatchConfig","qualname":"::sdk::trace::span_processor::BatchConfig","value":"BatchConfig {  }","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2562}],"decl_id":null,"docs":" Batch span processor configuration\n","sig":null,"attributes":[{"value":"/ Batch span processor configuration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":190221,"byte_end":190259,"line_start":412,"line_end":412,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193018,"byte_end":193043,"line_start":485,"line_end":485,"column_start":12,"column_end":37},"name":"BatchSpanProcessorBuilder","qualname":"::sdk::trace::span_processor::BatchSpanProcessorBuilder","value":"BatchSpanProcessorBuilder {  }","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2570}],"decl_id":null,"docs":" A builder for creating [`BatchSpanProcessor`] instances.","sig":null,"attributes":[{"value":"/ A builder for creating [`BatchSpanProcessor`] instances.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":192925,"byte_end":192985,"line_start":482,"line_end":482,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":192986,"byte_end":192989,"line_start":483,"line_end":483,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193266,"byte_end":193285,"line_start":497,"line_end":497,"column_start":12,"column_end":31},"name":"with_max_queue_size","qualname":"<BatchSpanProcessorBuilder<E, R>>::with_max_queue_size","value":"pub fn with_max_queue_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set max queue size for batches\n","sig":null,"attributes":[{"value":"/ Set max queue size for batches","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193220,"byte_end":193254,"line_start":496,"line_end":496,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193503,"byte_end":193523,"line_start":505,"line_end":505,"column_start":12,"column_end":32},"name":"with_scheduled_delay","qualname":"<BatchSpanProcessorBuilder<E, R>>::with_scheduled_delay","value":"pub fn with_scheduled_delay(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set scheduled delay for batches\n","sig":null,"attributes":[{"value":"/ Set scheduled delay for batches","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193456,"byte_end":193491,"line_start":504,"line_end":504,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193746,"byte_end":193762,"line_start":513,"line_end":513,"column_start":12,"column_end":28},"name":"with_max_timeout","qualname":"<BatchSpanProcessorBuilder<E, R>>::with_max_timeout","value":"pub fn with_max_timeout(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set max timeout for exporting.\n","sig":null,"attributes":[{"value":"/ Set max timeout for exporting.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193700,"byte_end":193734,"line_start":512,"line_end":512,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":194147,"byte_end":194173,"line_start":523,"line_end":523,"column_start":12,"column_end":38},"name":"with_max_export_batch_size","qualname":"<BatchSpanProcessorBuilder<E, R>>::with_max_export_batch_size","value":"pub fn with_max_export_batch_size(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set max export size for batches, should always less than or equals to max queue size.","sig":null,"attributes":[{"value":"/ Set max export size for batches, should always less than or equals to max queue size.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193946,"byte_end":194035,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":194040,"byte_end":194043,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ If input is larger than max queue size, will lower it to be equal to max queue size","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":194048,"byte_end":194135,"line_start":522,"line_end":522,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":194529,"byte_end":194534,"line_start":535,"line_end":535,"column_start":12,"column_end":17},"name":"build","qualname":"<BatchSpanProcessorBuilder<E, R>>::build","value":"pub fn build(Self) -> BatchSpanProcessor<R>","parent":null,"children":[],"decl_id":null,"docs":" Build a batch processor\n","sig":null,"attributes":[{"value":"/ Build a batch processor","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":194490,"byte_end":194517,"line_start":534,"line_end":534,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":203840,"byte_end":203846,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Tracer","qualname":"::sdk::trace::tracer::Tracer","value":"Tracer {  }","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2577}],"decl_id":null,"docs":" `Tracer` implementation to create and manage spans\n","sig":null,"attributes":[{"value":"/ `Tracer` implementation to create and manage spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":203757,"byte_end":203811,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204712,"byte_end":204720,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"provider","qualname":"<Tracer>::provider","value":"pub fn provider(&Self) -> Option<TracerProvider>","parent":null,"children":[],"decl_id":null,"docs":" TracerProvider associated with this tracer.\n","sig":null,"attributes":[{"value":"/ TracerProvider associated with this tracer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204653,"byte_end":204700,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204891,"byte_end":204914,"line_start":64,"line_end":64,"column_start":12,"column_end":35},"name":"instrumentation_library","qualname":"<Tracer>::instrumentation_library","value":"pub fn instrumentation_library(&Self) -> &InstrumentationLibrary","parent":null,"children":[],"decl_id":null,"docs":" instrumentation library information of this tracer.\n","sig":null,"attributes":[{"value":"/ instrumentation library information of this tracer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204824,"byte_end":204879,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"baggage","qualname":"::baggage","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1297},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2588},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":1303},{"krate":0,"index":1324},{"krate":0,"index":2598},{"krate":0,"index":2602},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1352},{"krate":0,"index":2605},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":2620},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":1369},{"krate":0,"index":1374}],"decl_id":null,"docs":" Primitives for sending name-value data across system boundaries.","sig":null,"attributes":[{"value":"/ Primitives for sending name-value data across system boundaries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218712,"byte_end":218780,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218781,"byte_end":218784,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Main types in this module are:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218785,"byte_end":218819,"line_start":3,"line_end":3,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218820,"byte_end":218823,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`Baggage`]: Baggage is used to annotate telemetry, adding context and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218824,"byte_end":218900,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/   information to metrics, traces, and logs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218901,"byte_end":218948,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/ * [`BaggageExt`]: Extensions for managing `Baggage` in a [`Context`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":218949,"byte_end":219022,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219023,"byte_end":219026,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Baggage can be sent between systems using the [`BaggagePropagator`] in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219027,"byte_end":219101,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ accordance with the [W3C Baggage] specification.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219102,"byte_end":219154,"line_start":10,"line_end":10,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219155,"byte_end":219158,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`BaggagePropagator`]: crate::sdk::propagation::BaggagePropagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219159,"byte_end":219228,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ [W3C Baggage]: https://w3c.github.io/baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219229,"byte_end":219277,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219278,"byte_end":219281,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219282,"byte_end":219296,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219297,"byte_end":219300,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219301,"byte_end":219308,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219309,"byte_end":219340,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219341,"byte_end":219348,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{baggage::BaggageExt, Key, propagation::TextMapPropagator};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219349,"byte_end":219431,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ use opentelemetry::sdk::propagation::BaggagePropagator;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219432,"byte_end":219491,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219492,"byte_end":219526,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219527,"byte_end":219530,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Example baggage value passed in externally via http headers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219531,"byte_end":219597,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/ let mut headers = HashMap::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219598,"byte_end":219635,"line_start":25,"line_end":25,"column_start":1,"column_end":38}},{"value":"/ headers.insert(\"baggage\".to_string(), \"user_id=1\".to_string());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219636,"byte_end":219703,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219704,"byte_end":219707,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let propagator = BaggagePropagator::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219708,"byte_end":219754,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ // can extract from any type that impls `Extractor`, usually an HTTP header map","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219755,"byte_end":219838,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/ let cx = propagator.extract(&headers);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219839,"byte_end":219881,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219882,"byte_end":219885,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // Iterate over extracted name-value pairs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219886,"byte_end":219932,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ for (name, value) in cx.baggage() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219933,"byte_end":219972,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/     // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219973,"byte_end":219987,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219988,"byte_end":219993,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219994,"byte_end":219997,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Add new baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":219998,"byte_end":220020,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/ let cx_with_additions = cx.with_baggage(vec![Key::new(\"server_id\").i64(42)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220021,"byte_end":220102,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220103,"byte_end":220106,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Inject baggage into http request","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220107,"byte_end":220146,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ propagator.inject_context(&cx_with_additions, &mut headers);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220147,"byte_end":220211,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220212,"byte_end":220215,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let header_value = headers.get(\"baggage\").expect(\"header is injected\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220216,"byte_end":220291,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ assert!(header_value.contains(\"user_id=1\"), \"still contains previous name-value\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220292,"byte_end":220378,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/ assert!(header_value.contains(\"server_id=42\"), \"contains new name-value pair\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220379,"byte_end":220462,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220463,"byte_end":220470,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220471,"byte_end":220478,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221673,"byte_end":221680,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"Baggage","qualname":"::baggage::Baggage","value":"Baggage {  }","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593}],"decl_id":null,"docs":" A set of name-value pairs describing user-defined properties.","sig":null,"attributes":[{"value":"/ A set of name-value pairs describing user-defined properties.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220883,"byte_end":220948,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220949,"byte_end":220952,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Baggage Names","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220953,"byte_end":220974,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220975,"byte_end":220978,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ * ASCII strings according to the token format, defined in [RFC2616, Section 2.2]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":220979,"byte_end":221063,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221064,"byte_end":221067,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ### Baggage Values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221068,"byte_end":221090,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221091,"byte_end":221094,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ * URL encoded UTF-8 strings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221095,"byte_end":221127,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221128,"byte_end":221131,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### Baggage Value Metadata","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221132,"byte_end":221162,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221163,"byte_end":221166,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Additional metadata can be added to values in the form of a property set,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221167,"byte_end":221244,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ represented as semi-colon `;` delimited list of names and/or name-value pairs,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221245,"byte_end":221327,"line_start":75,"line_end":75,"column_start":1,"column_end":83}},{"value":"/ e.g. `;k1=v1;k2;k3=v3`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221328,"byte_end":221355,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221356,"byte_end":221359,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ### Limits","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221360,"byte_end":221374,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221375,"byte_end":221378,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ * Maximum number of name-value pairs: `180`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221379,"byte_end":221427,"line_start":80,"line_end":80,"column_start":1,"column_end":49}},{"value":"/ * Maximum number of bytes per a single name-value pair: `4096`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221428,"byte_end":221495,"line_start":81,"line_end":81,"column_start":1,"column_end":68}},{"value":"/ * Maximum total length of all name-value pairs: `8192`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221496,"byte_end":221555,"line_start":82,"line_end":82,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221556,"byte_end":221559,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [RFC2616, Section 2.2]: https://tools.ietf.org/html/rfc2616#section-2.2","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221560,"byte_end":221635,"line_start":84,"line_end":84,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221880,"byte_end":221883,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<Baggage>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `Baggage`.\n","sig":null,"attributes":[{"value":"/ Creates an empty `Baggage`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221837,"byte_end":221868,"line_start":92,"line_end":92,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222368,"byte_end":222371,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"get","qualname":"<Baggage>::get","value":"pub fn get<T: Into<Key>>(&Self, T) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value associated with a given name","sig":null,"attributes":[{"value":"/ Returns a reference to the value associated with a given name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222005,"byte_end":222070,"line_start":100,"line_end":100,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222075,"byte_end":222078,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222083,"byte_end":222097,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222102,"byte_end":222105,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222110,"byte_end":222117,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::Baggage, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222122,"byte_end":222171,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222176,"byte_end":222179,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let mut cc = Baggage::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222184,"byte_end":222216,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/ let _ = cc.insert(\"my-name\", \"my-value\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222221,"byte_end":222266,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222271,"byte_end":222274,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cc.get(\"my-name\"), Some(&Value::from(\"my-value\")))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222279,"byte_end":222344,"line_start":110,"line_end":110,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222349,"byte_end":222356,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222975,"byte_end":222992,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"get_with_metadata","qualname":"<Baggage>::get_with_metadata","value":"pub fn get_with_metadata<T: Into<Key>>(&Self, T)\n-> Option<&(Value, BaggageMetadata)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value and metadata associated with a given name","sig":null,"attributes":[{"value":"/ Returns a reference to the value and metadata associated with a given name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222500,"byte_end":222578,"line_start":116,"line_end":116,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222583,"byte_end":222586,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222591,"byte_end":222605,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222610,"byte_end":222617,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::{Baggage, BaggageMetadata}, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222622,"byte_end":222690,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222695,"byte_end":222698,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let mut cc = Baggage::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222703,"byte_end":222735,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/ let _ = cc.insert(\"my-name\", \"my-value\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222740,"byte_end":222785,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222790,"byte_end":222793,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ // By default, the metadata is empty","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222798,"byte_end":222838,"line_start":125,"line_end":125,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(cc.get_with_metadata(\"my-name\"), Some(&(Value::from(\"my-value\"), BaggageMetadata::from(\"\"))))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222843,"byte_end":222951,"line_start":126,"line_end":126,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":222956,"byte_end":222963,"line_start":127,"line_end":127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223606,"byte_end":223612,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"insert","qualname":"<Baggage>::insert","value":"pub fn insert<K, V>(&mut Self, K, V) -> Option<Value> where K: Into<Key>,\nV: Into<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a name-value pair into the baggage.","sig":null,"attributes":[{"value":"/ Inserts a name-value pair into the baggage.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223108,"byte_end":223155,"line_start":132,"line_end":132,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223160,"byte_end":223163,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If the name was not present, [`None`] is returned. If the name was present,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223168,"byte_end":223247,"line_start":134,"line_end":134,"column_start":5,"column_end":84}},{"value":"/ the value is updated, and the old value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223252,"byte_end":223308,"line_start":135,"line_end":135,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223313,"byte_end":223316,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223321,"byte_end":223335,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223340,"byte_end":223343,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223348,"byte_end":223355,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::Baggage, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223360,"byte_end":223409,"line_start":140,"line_end":140,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223414,"byte_end":223417,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ let mut cc = Baggage::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223422,"byte_end":223454,"line_start":142,"line_end":142,"column_start":5,"column_end":37}},{"value":"/ let _ = cc.insert(\"my-name\", \"my-value\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223459,"byte_end":223504,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223509,"byte_end":223512,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cc.get(\"my-name\"), Some(&Value::from(\"my-value\")))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223517,"byte_end":223582,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223587,"byte_end":223594,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224446,"byte_end":224466,"line_start":171,"line_end":171,"column_start":12,"column_end":32},"name":"insert_with_metadata","qualname":"<Baggage>::insert_with_metadata","value":"pub fn insert_with_metadata<K, V, S>(&mut Self, K, V, S)\n-> Option<(Value, BaggageMetadata)> where K: Into<Key>, V: Into<Value>,\nS: Into<BaggageMetadata>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a name-value pair into the baggage.","sig":null,"attributes":[{"value":"/ Inserts a name-value pair into the baggage.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223844,"byte_end":223891,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223896,"byte_end":223899,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Same with `insert`, if the name was not present, [`None`] will be returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223904,"byte_end":223983,"line_start":158,"line_end":158,"column_start":5,"column_end":84}},{"value":"/ If the name is present, the old value and metadata will be returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":223988,"byte_end":224060,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224065,"byte_end":224068,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224073,"byte_end":224087,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224092,"byte_end":224095,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224100,"byte_end":224107,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::{Baggage, BaggageMetadata}, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224112,"byte_end":224180,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224185,"byte_end":224188,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut cc = Baggage::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224193,"byte_end":224225,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/ let _ = cc.insert_with_metadata(\"my-name\", \"my-value\", \"test\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224230,"byte_end":224297,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224302,"byte_end":224305,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cc.get_with_metadata(\"my-name\"), Some(&(Value::from(\"my-value\"), BaggageMetadata::from(\"test\"))))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224310,"byte_end":224422,"line_start":169,"line_end":169,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224427,"byte_end":224434,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225075,"byte_end":225081,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"remove","qualname":"<Baggage>::remove","value":"pub fn remove<K: Into<Key>>(&mut Self, K) -> Option<(Value, BaggageMetadata)>","parent":null,"children":[],"decl_id":null,"docs":" Removes a name from the baggage, returning the value\n corresponding to the name if the pair was previously in the map.\n","sig":null,"attributes":[{"value":"/ Removes a name from the baggage, returning the value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224934,"byte_end":224990,"line_start":190,"line_end":190,"column_start":5,"column_end":61}},{"value":"/ corresponding to the name if the pair was previously in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":224995,"byte_end":225063,"line_start":191,"line_end":191,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225268,"byte_end":225271,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"len","qualname":"<Baggage>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of attributes for this baggage\n","sig":null,"attributes":[{"value":"/ Returns the number of attributes for this baggage","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225203,"byte_end":225256,"line_start":196,"line_end":196,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225390,"byte_end":225398,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Baggage>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the baggage contains no items.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the baggage contains no items.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225326,"byte_end":225378,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225529,"byte_end":225533,"line_start":207,"line_end":207,"column_start":12,"column_end":16},"name":"iter","qualname":"<Baggage>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Gets an iterator over the baggage items, sorted by name.\n","sig":null,"attributes":[{"value":"/ Gets an iterator over the baggage items, sorted by name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":225457,"byte_end":225517,"line_start":206,"line_end":206,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":227859,"byte_end":227863,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"Iter","qualname":"::baggage::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the entries of a [`Baggage`].\n","sig":null,"attributes":[{"value":"/ An iterator over the entries of a [`Baggage`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":227780,"byte_end":227830,"line_start":266,"line_end":266,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229339,"byte_end":229349,"line_start":318,"line_end":318,"column_start":11,"column_end":21},"name":"BaggageExt","qualname":"::baggage::BaggageExt","value":"BaggageExt","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1351}],"decl_id":null,"docs":" Methods for sorting and retrieving baggage data in a context.\n","sig":null,"attributes":[{"value":"/ Methods for sorting and retrieving baggage data in a context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229263,"byte_end":229328,"line_start":317,"line_end":317,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229841,"byte_end":229853,"line_start":334,"line_end":334,"column_start":8,"column_end":20},"name":"with_baggage","qualname":"::baggage::BaggageExt::with_baggage","value":"pub fn with_baggage<T: IntoIterator<Item = I>,\nI: Into<KeyValueMetadata>>(&Self, T) -> Self","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" Returns a clone of the given context with the included name-value pairs.","sig":null,"attributes":[{"value":"/ Returns a clone of the given context with the included name-value pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229356,"byte_end":229432,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229437,"byte_end":229440,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229445,"byte_end":229459,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229464,"byte_end":229467,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229472,"byte_end":229479,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::BaggageExt, Context, KeyValue, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229484,"byte_end":229555,"line_start":324,"line_end":324,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229560,"byte_end":229563,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let some_context = Context::current();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229568,"byte_end":229610,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/ let cx = some_context.with_baggage(vec![KeyValue::new(\"my-name\", \"my-value\")]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229615,"byte_end":229698,"line_start":327,"line_end":327,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229703,"byte_end":229706,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229711,"byte_end":229726,"line_start":329,"line_end":329,"column_start":5,"column_end":20}},{"value":"/     cx.baggage().get(\"my-name\"),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229731,"byte_end":229767,"line_start":330,"line_end":330,"column_start":5,"column_end":41}},{"value":"/     Some(&Value::from(\"my-value\")),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229772,"byte_end":229811,"line_start":331,"line_end":331,"column_start":5,"column_end":44}},{"value":"/ )","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229816,"byte_end":229821,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229826,"byte_end":229833,"line_start":333,"line_end":333,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230408,"byte_end":230428,"line_start":353,"line_end":353,"column_start":8,"column_end":28},"name":"current_with_baggage","qualname":"::baggage::BaggageExt::current_with_baggage","value":"pub fn current_with_baggage<T: IntoIterator<Item = I>,\nI: Into<KeyValueMetadata>>(T) -> Self","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" Returns a clone of the current context with the included name-value pairs.","sig":null,"attributes":[{"value":"/ Returns a clone of the current context with the included name-value pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":229964,"byte_end":230042,"line_start":339,"line_end":339,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230047,"byte_end":230050,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230055,"byte_end":230069,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230074,"byte_end":230077,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230082,"byte_end":230089,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::BaggageExt, Context, KeyValue, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230094,"byte_end":230165,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230170,"byte_end":230173,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ let cx = Context::current_with_baggage(vec![KeyValue::new(\"my-name\", \"my-value\")]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230178,"byte_end":230265,"line_start":346,"line_end":346,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230270,"byte_end":230273,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230278,"byte_end":230293,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/     cx.baggage().get(\"my-name\"),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230298,"byte_end":230334,"line_start":349,"line_end":349,"column_start":5,"column_end":41}},{"value":"/     Some(&Value::from(\"my-value\")),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230339,"byte_end":230378,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ )","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230383,"byte_end":230388,"line_start":351,"line_end":351,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230393,"byte_end":230400,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230862,"byte_end":230882,"line_start":368,"line_end":368,"column_start":8,"column_end":28},"name":"with_cleared_baggage","qualname":"::baggage::BaggageExt::with_cleared_baggage","value":"pub fn with_cleared_baggage(&Self) -> Self","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" Returns a clone of the given context with the included name-value pairs.","sig":null,"attributes":[{"value":"/ Returns a clone of the given context with the included name-value pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230524,"byte_end":230600,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230605,"byte_end":230608,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230613,"byte_end":230627,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230632,"byte_end":230635,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230640,"byte_end":230647,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{baggage::BaggageExt, Context, KeyValue, Value};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230652,"byte_end":230723,"line_start":362,"line_end":362,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230728,"byte_end":230731,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let cx = Context::current().with_cleared_baggage();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230736,"byte_end":230791,"line_start":364,"line_end":364,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230796,"byte_end":230799,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cx.baggage().len(), 0);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230804,"byte_end":230842,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230847,"byte_end":230854,"line_start":367,"line_end":367,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":231021,"byte_end":231028,"line_start":372,"line_end":372,"column_start":8,"column_end":15},"name":"baggage","qualname":"::baggage::BaggageExt::baggage","value":"pub fn baggage(&Self) -> &Baggage","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":" Returns a reference to this context's baggage, or the default\n empty baggage if none has been set.\n","sig":null,"attributes":[{"value":"/ Returns a reference to this context's baggage, or the default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230904,"byte_end":230969,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ empty baggage if none has been set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":230974,"byte_end":231013,"line_start":371,"line_end":371,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232387,"byte_end":232402,"line_start":414,"line_end":414,"column_start":12,"column_end":27},"name":"BaggageMetadata","qualname":"::baggage::BaggageMetadata","value":"","parent":null,"children":[],"decl_id":null,"docs":" An optional property set that can be added to [`Baggage`] values.","sig":null,"attributes":[{"value":"/ An optional property set that can be added to [`Baggage`] values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":231992,"byte_end":232061,"line_start":407,"line_end":407,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232062,"byte_end":232065,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ `BaggageMetadata` can be added to values in the form of a property set,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232066,"byte_end":232141,"line_start":409,"line_end":409,"column_start":1,"column_end":76}},{"value":"/ represented as semi-colon `;` delimited list of names and/or name-value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232142,"byte_end":232217,"line_start":410,"line_end":410,"column_start":1,"column_end":76}},{"value":"/ pairs, e.g. `;k1=v1;k2;k3=v3`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232218,"byte_end":232252,"line_start":411,"line_end":411,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232480,"byte_end":232486,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"as_str","qualname":"<BaggageMetadata>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return underlying string\n","sig":null,"attributes":[{"value":"/ Return underlying string","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232440,"byte_end":232468,"line_start":417,"line_end":417,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232978,"byte_end":232994,"line_start":438,"line_end":438,"column_start":12,"column_end":28},"name":"KeyValueMetadata","qualname":"::baggage::KeyValueMetadata","value":"KeyValueMetadata { key, value, metadata }","parent":null,"children":[{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623}],"decl_id":null,"docs":" [`Baggage`] name-value pairs with their associated metadata.\n","sig":null,"attributes":[{"value":"/ [`Baggage`] name-value pairs with their associated metadata.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232800,"byte_end":232864,"line_start":435,"line_end":435,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233036,"byte_end":233039,"line_start":440,"line_end":440,"column_start":9,"column_end":12},"name":"key","qualname":"::baggage::KeyValueMetadata::key","value":"common::Key","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Dimension or event key\n","sig":null,"attributes":[{"value":"/ Dimension or event key","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233001,"byte_end":233027,"line_start":439,"line_end":439,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233087,"byte_end":233092,"line_start":442,"line_end":442,"column_start":9,"column_end":14},"name":"value","qualname":"::baggage::KeyValueMetadata::value","value":"common::Value","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Dimension or event value\n","sig":null,"attributes":[{"value":"/ Dimension or event value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233050,"byte_end":233078,"line_start":441,"line_end":441,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233161,"byte_end":233169,"line_start":444,"line_end":444,"column_start":9,"column_end":17},"name":"metadata","qualname":"::baggage::KeyValueMetadata::metadata","value":"baggage::BaggageMetadata","parent":{"krate":0,"index":2620},"children":[],"decl_id":null,"docs":" Metadata associate with this key value pair\n","sig":null,"attributes":[{"value":"/ Metadata associate with this key value pair","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233105,"byte_end":233152,"line_start":443,"line_end":443,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233277,"byte_end":233280,"line_start":449,"line_end":449,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyValueMetadata>::new","value":"pub fn new<K, V, S>(K, V, S) -> Self where K: Into<Key>, V: Into<Value>,\nS: Into<BaggageMetadata>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `KeyValue` pair with metadata\n","sig":null,"attributes":[{"value":"/ Create a new `KeyValue` pair with metadata","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233219,"byte_end":233265,"line_start":448,"line_end":448,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238516,"byte_end":238523,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":2643}],"decl_id":null,"docs":" An execution-scoped collection of values.","sig":null,"attributes":[{"value":"/ An execution-scoped collection of values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236034,"byte_end":236079,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236080,"byte_end":236083,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A [`Context`] is a propagation mechanism which carries execution-scoped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236084,"byte_end":236159,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ values across API boundaries and between logically associated execution","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236160,"byte_end":236235,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ units. Cross-cutting concerns access their data in-process using the same","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236236,"byte_end":236313,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ shared context object.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236314,"byte_end":236340,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236341,"byte_end":236344,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`Context`]s are immutable, and their write operations result in the creation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236345,"byte_end":236426,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ of a new context containing the original values and the new specified values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236427,"byte_end":236508,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236509,"byte_end":236512,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ## Context state","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236513,"byte_end":236533,"line_start":24,"line_end":24,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236534,"byte_end":236537,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Concerns can create and retrieve their local state in the current execution","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236538,"byte_end":236617,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ state represented by a context through the [`get`] and [`with_value`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236618,"byte_end":236691,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ methods. It is recommended to use application-specific types when storing new","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236692,"byte_end":236773,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ context values to avoid unintentionally overwriting existing state.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236774,"byte_end":236845,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236846,"byte_end":236849,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Managing the current context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236850,"byte_end":236885,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236886,"byte_end":236889,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Contexts can be associated with the caller's current execution unit on a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236890,"byte_end":236966,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ given thread via the [`attach`] method, and previous contexts can be restored","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":236967,"byte_end":237048,"line_start":34,"line_end":34,"column_start":1,"column_end":82}},{"value":"/ by dropping the returned [`ContextGuard`]. Context can be nested, and will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237049,"byte_end":237127,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ restore their parent outer context when detached on drop. To access the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237128,"byte_end":237203,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ values of the context, a snapshot can be created via the [`Context::current`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237204,"byte_end":237285,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237286,"byte_end":237297,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237298,"byte_end":237301,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Context::current`]: Context::current()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237302,"byte_end":237346,"line_start":40,"line_end":40,"column_start":1,"column_end":45}},{"value":"/ [`get`]: Context::get()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237347,"byte_end":237374,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/ [`with_value`]: Context::with_value()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237375,"byte_end":237416,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"/ [`attach`]: Context::attach()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237417,"byte_end":237450,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237451,"byte_end":237454,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237455,"byte_end":237469,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237470,"byte_end":237473,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237474,"byte_end":237481,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237482,"byte_end":237513,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237514,"byte_end":237517,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Application-specific `a` and `b` values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237518,"byte_end":237564,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237565,"byte_end":237596,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237597,"byte_end":237629,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237630,"byte_end":237661,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/ struct ValueB(u64);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237662,"byte_end":237685,"line_start":54,"line_end":54,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237686,"byte_end":237689,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let _outer_guard = Context::new().with_value(ValueA(\"a\")).attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237690,"byte_end":237761,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237762,"byte_end":237765,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Only value a has been set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237766,"byte_end":237798,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/ let current = Context::current();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237799,"byte_end":237836,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(current.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237837,"byte_end":237897,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(current.get::<ValueB>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237898,"byte_end":237944,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237945,"byte_end":237948,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237949,"byte_end":237954,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/     let _inner_guard = Context::current_with_value(ValueB(42)).attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":237955,"byte_end":238031,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/     // Both values are set in inner context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238032,"byte_end":238079,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/     let current = Context::current();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238080,"byte_end":238121,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/     assert_eq!(current.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238122,"byte_end":238186,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"/     assert_eq!(current.get::<ValueB>(), Some(&ValueB(42)));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238187,"byte_end":238250,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238251,"byte_end":238256,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238257,"byte_end":238260,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ // Resets to only the `a` value when inner guard is dropped","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238261,"byte_end":238324,"line_start":71,"line_end":71,"column_start":1,"column_end":64}},{"value":"/ let current = Context::current();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238325,"byte_end":238362,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(current.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238363,"byte_end":238423,"line_start":73,"line_end":73,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(current.get::<ValueB>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238424,"byte_end":238470,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238471,"byte_end":238478,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238898,"byte_end":238901,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `Context`.","sig":null,"attributes":[{"value":"/ Creates an empty `Context`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238636,"byte_end":238667,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238672,"byte_end":238675,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The context is initially created with a capacity of 0, so it will not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238680,"byte_end":238753,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ allocate. Use [`with_value`] to create a new context that has entries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238758,"byte_end":238832,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238837,"byte_end":238840,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ [`with_value`]: Context::with_value()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238845,"byte_end":238886,"line_start":87,"line_end":87,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239413,"byte_end":239420,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"current","qualname":"<Context>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable snapshot of the current thread's context.","sig":null,"attributes":[{"value":"/ Returns an immutable snapshot of the current thread's context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238952,"byte_end":239018,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239023,"byte_end":239026,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239031,"byte_end":239045,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239050,"byte_end":239053,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239058,"byte_end":239065,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239070,"byte_end":239101,"line_start":97,"line_end":97,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239106,"byte_end":239109,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239114,"byte_end":239145,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239150,"byte_end":239182,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239187,"byte_end":239190,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ fn do_work() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239195,"byte_end":239213,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(Context::current().get(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239218,"byte_end":239283,"line_start":103,"line_end":103,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239288,"byte_end":239293,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239298,"byte_end":239301,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let _guard = Context::new().with_value(ValueA(\"a\")).attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239306,"byte_end":239371,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/ do_work()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239376,"byte_end":239389,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239394,"byte_end":239401,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240558,"byte_end":240576,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"current_with_value","qualname":"<Context>::current_with_value","value":"pub fn current_with_value<T: 'static + Send + Sync>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone of the current thread's context with the given value.","sig":null,"attributes":[{"value":"/ Returns a clone of the current thread's context with the given value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239481,"byte_end":239554,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239559,"byte_end":239562,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient form of `Context::current().with_value(value)`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239567,"byte_end":239642,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ as it avoids the intermediate context clone.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239647,"byte_end":239695,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239700,"byte_end":239703,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239708,"byte_end":239722,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239727,"byte_end":239730,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239735,"byte_end":239742,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239747,"byte_end":239778,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239783,"byte_end":239786,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ // Given some value types defined in your application","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239791,"byte_end":239848,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239853,"byte_end":239884,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239889,"byte_end":239921,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239926,"byte_end":239957,"line_start":126,"line_end":126,"column_start":5,"column_end":36}},{"value":"/ struct ValueB(u64);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239962,"byte_end":239985,"line_start":127,"line_end":127,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239990,"byte_end":239993,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ // You can create and attach context with the first value set to \"a\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":239998,"byte_end":240070,"line_start":129,"line_end":129,"column_start":5,"column_end":77}},{"value":"/ let _guard = Context::new().with_value(ValueA(\"a\")).attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240075,"byte_end":240140,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240145,"byte_end":240148,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ // And create another context based on the fist with a new value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240153,"byte_end":240221,"line_start":132,"line_end":132,"column_start":5,"column_end":73}},{"value":"/ let all_current_and_b = Context::current_with_value(ValueB(42));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240226,"byte_end":240294,"line_start":133,"line_end":133,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240299,"byte_end":240302,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // The second context now contains all the current values and the addition","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240307,"byte_end":240385,"line_start":135,"line_end":135,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(all_current_and_b.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240390,"byte_end":240460,"line_start":136,"line_end":136,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(all_current_and_b.get::<ValueB>(), Some(&ValueB(42)));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240465,"byte_end":240534,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240539,"byte_end":240546,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241454,"byte_end":241457,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"get","qualname":"<Context>::get","value":"pub fn get<T: 'static>(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the entry for the corresponding value type.","sig":null,"attributes":[{"value":"/ Returns a reference to the entry for the corresponding value type.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240803,"byte_end":240873,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240878,"byte_end":240881,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240886,"byte_end":240900,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240905,"byte_end":240908,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240913,"byte_end":240920,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240925,"byte_end":240956,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240961,"byte_end":240964,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ // Given some value types defined in your application","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":240969,"byte_end":241026,"line_start":155,"line_end":155,"column_start":5,"column_end":62}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241031,"byte_end":241062,"line_start":156,"line_end":156,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241067,"byte_end":241099,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241104,"byte_end":241135,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/ struct MyUser();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241140,"byte_end":241160,"line_start":159,"line_end":159,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241165,"byte_end":241168,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let cx = Context::new().with_value(ValueA(\"a\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241173,"byte_end":241225,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241230,"byte_end":241233,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ // Values can be queried by type","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241238,"byte_end":241274,"line_start":163,"line_end":163,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(cx.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241279,"byte_end":241334,"line_start":164,"line_end":164,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241339,"byte_end":241342,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // And return none if not yet set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241347,"byte_end":241384,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(cx.get::<MyUser>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241389,"byte_end":241430,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241435,"byte_end":241442,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242672,"byte_end":242682,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"with_value","qualname":"<Context>::with_value","value":"pub fn with_value<T: 'static + Send + Sync>(&Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the context with the new value included.","sig":null,"attributes":[{"value":"/ Returns a copy of the context with the new value included.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241612,"byte_end":241674,"line_start":175,"line_end":175,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241679,"byte_end":241682,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241687,"byte_end":241701,"line_start":177,"line_end":177,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241706,"byte_end":241709,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241714,"byte_end":241721,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241726,"byte_end":241757,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241762,"byte_end":241765,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ // Given some value types defined in your application","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241770,"byte_end":241827,"line_start":182,"line_end":182,"column_start":5,"column_end":62}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241832,"byte_end":241863,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241868,"byte_end":241900,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241905,"byte_end":241936,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/ struct ValueB(u64);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241941,"byte_end":241964,"line_start":186,"line_end":186,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241969,"byte_end":241972,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ // You can create a context with the first value set to \"a\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":241977,"byte_end":242040,"line_start":188,"line_end":188,"column_start":5,"column_end":68}},{"value":"/ let cx_with_a = Context::new().with_value(ValueA(\"a\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242045,"byte_end":242104,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242109,"byte_end":242112,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // And create another context based on the fist with a new value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242117,"byte_end":242185,"line_start":191,"line_end":191,"column_start":5,"column_end":73}},{"value":"/ let cx_with_a_and_b = cx_with_a.with_value(ValueB(42));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242190,"byte_end":242249,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242254,"byte_end":242257,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ // The first context is still available and unmodified","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242262,"byte_end":242320,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(cx_with_a.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242325,"byte_end":242387,"line_start":195,"line_end":195,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(cx_with_a.get::<ValueB>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242392,"byte_end":242440,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242445,"byte_end":242448,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ // The second context now contains both values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242453,"byte_end":242503,"line_start":198,"line_end":198,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(cx_with_a_and_b.get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242508,"byte_end":242576,"line_start":199,"line_end":199,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(cx_with_a_and_b.get::<ValueB>(), Some(&ValueB(42)));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242581,"byte_end":242648,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242653,"byte_end":242660,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245326,"byte_end":245332,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"attach","qualname":"<Context>::attach","value":"pub fn attach(Self) -> ContextGuard","parent":null,"children":[],"decl_id":null,"docs":" Replaces the current context on this thread with this context.","sig":null,"attributes":[{"value":"/ Replaces the current context on this thread with this context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242910,"byte_end":242976,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242981,"byte_end":242984,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Dropping the returned [`ContextGuard`] will reset the current context to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":242989,"byte_end":243069,"line_start":213,"line_end":213,"column_start":5,"column_end":85}},{"value":"/ previous value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243074,"byte_end":243093,"line_start":214,"line_end":214,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243098,"byte_end":243101,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243106,"byte_end":243109,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243114,"byte_end":243128,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243133,"byte_end":243136,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243141,"byte_end":243148,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243153,"byte_end":243184,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243189,"byte_end":243192,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243197,"byte_end":243228,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243233,"byte_end":243265,"line_start":223,"line_end":223,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243270,"byte_end":243273,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let my_cx = Context::new().with_value(ValueA(\"a\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243278,"byte_end":243333,"line_start":225,"line_end":225,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243338,"byte_end":243341,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ // Set the current thread context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243346,"byte_end":243383,"line_start":227,"line_end":227,"column_start":5,"column_end":42}},{"value":"/ let cx_guard = my_cx.attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243388,"byte_end":243422,"line_start":228,"line_end":228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(Context::current().get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243427,"byte_end":243498,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243503,"byte_end":243506,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ // Drop the guard to restore the previous context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243511,"byte_end":243564,"line_start":231,"line_end":231,"column_start":5,"column_end":58}},{"value":"/ drop(cx_guard);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243569,"byte_end":243588,"line_start":232,"line_end":232,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(Context::current().get::<ValueA>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243593,"byte_end":243650,"line_start":233,"line_end":233,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243655,"byte_end":243662,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243667,"byte_end":243670,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Guards do not need to be explicitly dropped:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243675,"byte_end":243723,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243728,"byte_end":243731,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243736,"byte_end":243743,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243748,"byte_end":243779,"line_start":239,"line_end":239,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243784,"byte_end":243787,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243792,"byte_end":243823,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243828,"byte_end":243860,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243865,"byte_end":243868,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ fn my_function() -> String {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243873,"byte_end":243905,"line_start":244,"line_end":244,"column_start":5,"column_end":37}},{"value":"/     // attach a context the duration of this function.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243910,"byte_end":243968,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"/     let my_cx = Context::new().with_value(ValueA(\"a\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":243973,"byte_end":244032,"line_start":246,"line_end":246,"column_start":5,"column_end":64}},{"value":"/     // NOTE: a variable name after the underscore is **required** or rust","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244037,"byte_end":244114,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/     // will drop the guard, restoring the previous context _immediately_.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244119,"byte_end":244196,"line_start":248,"line_end":248,"column_start":5,"column_end":82}},{"value":"/     let _guard = my_cx.attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244201,"byte_end":244237,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244242,"byte_end":244245,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     // anything happening in functions we call can still access my_cx...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244250,"byte_end":244326,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/     my_other_function();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244331,"byte_end":244359,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244364,"byte_end":244367,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // returning from the function drops the guard, exiting the span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244372,"byte_end":244445,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/     return \"Hello world\".to_owned();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244450,"byte_end":244490,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244495,"byte_end":244500,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244505,"byte_end":244508,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244513,"byte_end":244541,"line_start":258,"line_end":258,"column_start":5,"column_end":33}},{"value":"/     // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244546,"byte_end":244560,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244565,"byte_end":244570,"line_start":260,"line_end":260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244575,"byte_end":244582,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ Sub-scopes may be created to limit the duration for which the span is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244587,"byte_end":244660,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ entered:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244665,"byte_end":244677,"line_start":263,"line_end":263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244682,"byte_end":244685,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244690,"byte_end":244697,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::Context;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244702,"byte_end":244733,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244738,"byte_end":244741,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244746,"byte_end":244777,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/ struct ValueA(&'static str);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244782,"byte_end":244814,"line_start":269,"line_end":269,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244819,"byte_end":244822,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let my_cx = Context::new().with_value(ValueA(\"a\"));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244827,"byte_end":244882,"line_start":271,"line_end":271,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244887,"byte_end":244890,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244895,"byte_end":244900,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/     let _guard = my_cx.attach();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244905,"byte_end":244941,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244946,"byte_end":244949,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/     // the current context can access variables in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":244954,"byte_end":245008,"line_start":276,"line_end":276,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(Context::current().get::<ValueA>(), Some(&ValueA(\"a\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245013,"byte_end":245088,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245093,"byte_end":245096,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/     // exiting the scope drops the guard, detaching the context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245101,"byte_end":245169,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245174,"byte_end":245179,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245184,"byte_end":245187,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ // this is back in the default empty context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245192,"byte_end":245240,"line_start":282,"line_end":282,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(Context::current().get::<ValueA>(), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245245,"byte_end":245302,"line_start":283,"line_end":283,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245307,"byte_end":245314,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245914,"byte_end":245926,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"ContextGuard","qualname":"::context::ContextGuard","value":"ContextGuard {  }","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"decl_id":null,"docs":" A guard that resets the current context to the prior context when dropped.\n","sig":null,"attributes":[{"value":"/ A guard that resets the current context to the prior context when dropped.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245784,"byte_end":245862,"line_start":305,"line_end":305,"column_start":1,"column_end":79}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245863,"byte_end":245902,"line_start":306,"line_end":306,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248546,"byte_end":248549,"line_start":9,"line_end":9,"column_start":12,"column_end":15},"name":"Key","qualname":"::common::Key","value":"","parent":null,"children":[],"decl_id":null,"docs":" Key used for metric `AttributeSet`s and trace `Span` attributes.\n","sig":null,"attributes":[{"value":"/ Key used for metric `AttributeSet`s and trace `Span` attributes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248337,"byte_end":248405,"line_start":6,"line_end":6,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248621,"byte_end":248624,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Key>::new","value":"pub fn new<S: Into<Cow>>(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Key`.\n","sig":null,"attributes":[{"value":"/ Create a new `Key`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248586,"byte_end":248609,"line_start":12,"line_end":12,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248757,"byte_end":248772,"line_start":18,"line_end":18,"column_start":18,"column_end":33},"name":"from_static_str","qualname":"<Key>::from_static_str","value":"pub const fn from_static_str(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new const `Key`.\n","sig":null,"attributes":[{"value":"/ Create a new const `Key`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248710,"byte_end":248739,"line_start":17,"line_end":17,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248908,"byte_end":248912,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"bool","qualname":"<Key>::bool","value":"pub fn bool<T: Into<bool>>(Self, T) -> KeyValue","parent":null,"children":[],"decl_id":null,"docs":" Create a `KeyValue` pair for `bool` values.\n","sig":null,"attributes":[{"value":"/ Create a `KeyValue` pair for `bool` values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248849,"byte_end":248896,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249125,"byte_end":249128,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"i64","qualname":"<Key>::i64","value":"pub fn i64(Self, i64) -> KeyValue","parent":null,"children":[],"decl_id":null,"docs":" Create a `KeyValue` pair for `i64` values.\n","sig":null,"attributes":[{"value":"/ Create a `KeyValue` pair for `i64` values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249067,"byte_end":249113,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249320,"byte_end":249323,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"f64","qualname":"<Key>::f64","value":"pub fn f64(Self, f64) -> KeyValue","parent":null,"children":[],"decl_id":null,"docs":" Create a `KeyValue` pair for `f64` values.\n","sig":null,"attributes":[{"value":"/ Create a `KeyValue` pair for `f64` values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249262,"byte_end":249308,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249518,"byte_end":249524,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"string","qualname":"<Key>::string","value":"pub fn string<T: Into<Cow>>(Self, T) -> KeyValue","parent":null,"children":[],"decl_id":null,"docs":" Create a `KeyValue` pair for `String` values.\n","sig":null,"attributes":[{"value":"/ Create a `KeyValue` pair for `String` values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249457,"byte_end":249506,"line_start":46,"line_end":46,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249746,"byte_end":249751,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"array","qualname":"<Key>::array","value":"pub fn array<T: Into<Array>>(Self, T) -> KeyValue","parent":null,"children":[],"decl_id":null,"docs":" Create a `KeyValue` pair for arrays.\n","sig":null,"attributes":[{"value":"/ Create a `KeyValue` pair for arrays.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249694,"byte_end":249734,"line_start":54,"line_end":54,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249970,"byte_end":249976,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Key>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying key name\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying key name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":249908,"byte_end":249958,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250777,"byte_end":250781,"line_start":100,"line_end":100,"column_start":5,"column_end":9},"name":"Bool","qualname":"::common::Array::Bool","value":"Array::Bool(Vec<bool>)","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Array of bools\n","sig":null,"attributes":[{"value":"/ Array of bools","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250754,"byte_end":250772,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250824,"byte_end":250827,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"I64","qualname":"::common::Array::I64","value":"Array::I64(Vec<i64>)","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Array of integers\n","sig":null,"attributes":[{"value":"/ Array of integers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250798,"byte_end":250819,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250867,"byte_end":250870,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"F64","qualname":"::common::Array::F64","value":"Array::F64(Vec<f64>)","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Array of floats\n","sig":null,"attributes":[{"value":"/ Array of floats","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250843,"byte_end":250862,"line_start":103,"line_end":103,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250911,"byte_end":250917,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"String","qualname":"::common::Array::String","value":"Array::String(Vec<Cow>)","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" Array of strings\n","sig":null,"attributes":[{"value":"/ Array of strings","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250886,"byte_end":250906,"line_start":105,"line_end":105,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250742,"byte_end":250747,"line_start":98,"line_end":98,"column_start":10,"column_end":15},"name":"Array","qualname":"::common::Array","value":"pub enum Array {\n    Bool(Vec<bool>),\n    I64(Vec<i64>),\n    F64(Vec<f64>),\n    String(Vec<Cow>),\n}","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688}],"decl_id":null,"docs":" Array of homogeneous values\n","sig":null,"attributes":[{"value":"/ Array of homogeneous values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250599,"byte_end":250630,"line_start":95,"line_end":95,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252472,"byte_end":252476,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"Bool","qualname":"::common::Value::Bool","value":"Value::Bool(bool)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" bool values\n","sig":null,"attributes":[{"value":"/ bool values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252452,"byte_end":252467,"line_start":163,"line_end":163,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2711},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252507,"byte_end":252510,"line_start":166,"line_end":166,"column_start":5,"column_end":8},"name":"I64","qualname":"::common::Value::I64","value":"Value::I64(i64)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" i64 values\n","sig":null,"attributes":[{"value":"/ i64 values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252488,"byte_end":252502,"line_start":165,"line_end":165,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252540,"byte_end":252543,"line_start":168,"line_end":168,"column_start":5,"column_end":8},"name":"F64","qualname":"::common::Value::F64","value":"Value::F64(f64)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" f64 values\n","sig":null,"attributes":[{"value":"/ f64 values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252521,"byte_end":252535,"line_start":167,"line_end":167,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252576,"byte_end":252582,"line_start":170,"line_end":170,"column_start":5,"column_end":11},"name":"String","qualname":"::common::Value::String","value":"Value::String(Cow)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" String values\n","sig":null,"attributes":[{"value":"/ String values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252554,"byte_end":252571,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252643,"byte_end":252648,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Array","qualname":"::common::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":2707},"children":[],"decl_id":null,"docs":" Array of homogeneous values\n","sig":null,"attributes":[{"value":"/ Array of homogeneous values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252607,"byte_end":252638,"line_start":171,"line_end":171,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252440,"byte_end":252445,"line_start":162,"line_end":162,"column_start":10,"column_end":15},"name":"Value","qualname":"::common::Value","value":"pub enum Value { Bool(bool), I64(i64), F64(f64), String(Cow), Array(Array), }","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720}],"decl_id":null,"docs":" Value types for use in `KeyValue` pairs.\n","sig":null,"attributes":[{"value":"/ Value types for use in `KeyValue` pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252284,"byte_end":252328,"line_start":159,"line_end":159,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252808,"byte_end":252814,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"pub fn as_str(&Self) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" String representation of the `Value`","sig":null,"attributes":[{"value":"/ String representation of the `Value`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252677,"byte_end":252717,"line_start":176,"line_end":176,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252722,"byte_end":252725,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This will allocate iff the underlying value is not a `String`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252730,"byte_end":252796,"line_start":178,"line_end":178,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254575,"byte_end":254583,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"KeyValue","qualname":"::common::KeyValue","value":"KeyValue { key, value }","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741}],"decl_id":null,"docs":" `KeyValue` pairs are used by `AttributeSet`s and `Span` attributes.\n","sig":null,"attributes":[{"value":"/ `KeyValue` pairs are used by `AttributeSet`s and `Span` attributes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254390,"byte_end":254461,"line_start":239,"line_end":239,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254625,"byte_end":254628,"line_start":244,"line_end":244,"column_start":9,"column_end":12},"name":"key","qualname":"::common::KeyValue::key","value":"common::Key","parent":{"krate":0,"index":2739},"children":[],"decl_id":null,"docs":" Dimension or event key\n","sig":null,"attributes":[{"value":"/ Dimension or event key","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254590,"byte_end":254616,"line_start":243,"line_end":243,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254676,"byte_end":254681,"line_start":246,"line_end":246,"column_start":9,"column_end":14},"name":"value","qualname":"::common::KeyValue::value","value":"common::Value","parent":{"krate":0,"index":2739},"children":[],"decl_id":null,"docs":" Dimension or event value\n","sig":null,"attributes":[{"value":"/ Dimension or event value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254639,"byte_end":254667,"line_start":245,"line_end":245,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254758,"byte_end":254761,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyValue>::new","value":"pub fn new<K, V>(K, V) -> Self where K: Into<Key>, V: Into<Value>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `KeyValue` pair.\n","sig":null,"attributes":[{"value":"/ Create a new `KeyValue` pair.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254713,"byte_end":254746,"line_start":250,"line_end":250,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1518}],"decl_id":null,"docs":" Provides an abstraction of several async runtimes","sig":null,"attributes":[{"value":"/ Provides an abstraction of several async runtimes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":254956,"byte_end":255009,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255010,"byte_end":255013,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This  allows OpenTelemetry to work with any current or future runtime. There are currently","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255014,"byte_end":255108,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ builtin implementations for [Tokio] and [async-std].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255109,"byte_end":255165,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255166,"byte_end":255169,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [Tokio]: https://crates.io/crates/tokio","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255170,"byte_end":255213,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/ [async-std]: https://crates.io/crates/async-std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255214,"byte_end":255265,"line_start":7,"line_end":7,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255642,"byte_end":255649,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime: Clone + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523}],"decl_id":null,"docs":" A runtime is an abstraction of an async runtime like [Tokio] or [async-std]. It allows\n OpenTelemetry to work with any current and hopefully future runtime implementation.","sig":null,"attributes":[{"value":"/ A runtime is an abstraction of an async runtime like [Tokio] or [async-std]. It allows","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255353,"byte_end":255443,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/ OpenTelemetry to work with any current and hopefully future runtime implementation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255444,"byte_end":255531,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255532,"byte_end":255535,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [Tokio]: https://crates.io/crates/tokio","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255536,"byte_end":255579,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/ [async-std]: https://crates.io/crates/async-std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255580,"byte_end":255631,"line_start":16,"line_end":16,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255813,"byte_end":255821,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"Interval","qualname":"::runtime::Runtime::Interval","value":"type Interval: Stream + Send;","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":" A future stream, which returns items in a previously specified interval. The item type is\n not important.\n","sig":null,"attributes":[{"value":"/ A future stream, which returns items in a previously specified interval. The item type is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255687,"byte_end":255780,"line_start":18,"line_end":18,"column_start":5,"column_end":98}},{"value":"/ not important.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255785,"byte_end":255803,"line_start":19,"line_end":19,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255968,"byte_end":255973,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Delay","qualname":"::runtime::Runtime::Delay","value":"type Delay: Future + Send;","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":" A future, which resolves after a previously specified amount of time. The output type is\n not important.\n","sig":null,"attributes":[{"value":"/ A future, which resolves after a previously specified amount of time. The output type is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255843,"byte_end":255935,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ not important.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255940,"byte_end":255958,"line_start":23,"line_end":23,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256114,"byte_end":256122,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"interval","qualname":"::runtime::Runtime::interval","value":"pub fn interval(&Self, Duration) -> Self::Interval","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":" Create a [Stream][futures::Stream], which returns a new item every\n [Duration][std::time::Duration].\n","sig":null,"attributes":[{"value":"/ Create a [Stream][futures::Stream], which returns a new item every","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255995,"byte_end":256065,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ [Duration][std::time::Duration].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256070,"byte_end":256106,"line_start":27,"line_end":27,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256730,"byte_end":256735,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"spawn","qualname":"::runtime::Runtime::spawn","value":"pub fn spawn(&Self, BoxFuture)","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":" Spawn a new task or thread, which executes the given future.","sig":null,"attributes":[{"value":"/ Spawn a new task or thread, which executes the given future.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256174,"byte_end":256238,"line_start":30,"line_end":30,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256243,"byte_end":256246,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256251,"byte_end":256261,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256266,"byte_end":256269,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is mainly used to run batch span processing in the background. Note, that the function","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256274,"byte_end":256369,"line_start":34,"line_end":34,"column_start":5,"column_end":100}},{"value":"/ does not return a handle. OpenTelemetry will use a different way to wait for the future to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256374,"byte_end":256468,"line_start":35,"line_end":35,"column_start":5,"column_end":99}},{"value":"/ finish when TracerProvider gets shutdown. At the moment this happens by blocking the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256473,"byte_end":256561,"line_start":36,"line_end":36,"column_start":5,"column_end":93}},{"value":"/ current thread. This means runtime implementations need to make sure they can still execute","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256566,"byte_end":256661,"line_start":37,"line_end":37,"column_start":5,"column_end":100}},{"value":"/ the given future even if the main thread is blocked.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256666,"byte_end":256722,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256881,"byte_end":256886,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"delay","qualname":"::runtime::Runtime::delay","value":"pub fn delay(&Self, Duration) -> Self::Delay","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":" Return a new future, which resolves after the specified [Duration][std::time::Duration].\n","sig":null,"attributes":[{"value":"/ Return a new future, which resolves after the specified [Duration][std::time::Duration].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":256781,"byte_end":256873,"line_start":41,"line_end":41,"column_start":5,"column_end":97}}]},{"kind":"Mod","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/util.rs","parent":null,"children":[],"decl_id":null,"docs":" Internal utilities\n","sig":null,"attributes":[{"value":"/ Internal utilities","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/util.rs","byte_start":259947,"byte_end":259969,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"propagation","qualname":"::propagation","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1572}],"decl_id":null,"docs":" # OpenTelemetry Propagator interface","sig":null,"attributes":[{"value":"/ # OpenTelemetry Propagator interface","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260309,"byte_end":260349,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260350,"byte_end":260353,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Propagators API consists of two main formats:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260354,"byte_end":260403,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260404,"byte_end":260407,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `BinaryFormat` is used to serialize and deserialize a value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260408,"byte_end":260473,"line_start":5,"line_end":5,"column_start":1,"column_end":66}},{"value":"/ into a binary representation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260474,"byte_end":260507,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/ - `TextMapFormat` is used to inject and extract a value as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260508,"byte_end":260570,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/ text into injectors and extractors that travel in-band across process boundaries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260571,"byte_end":260656,"line_start":8,"line_end":8,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260657,"byte_end":260660,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Deserializing must set `is_remote` to true on the returned","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260661,"byte_end":260723,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `SpanContext`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260724,"byte_end":260742,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260743,"byte_end":260746,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Binary Format","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260747,"byte_end":260767,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260768,"byte_end":260771,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `BinaryFormat` is a formatter to serialize and deserialize a value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260772,"byte_end":260842,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ into a binary format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260843,"byte_end":260868,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260869,"byte_end":260872,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `BinaryFormat` MUST expose the APIs that serializes values into bytes,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260873,"byte_end":260947,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ and deserializes values from bytes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260948,"byte_end":260987,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260988,"byte_end":260991,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### ToBytes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":260992,"byte_end":261007,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261008,"byte_end":261011,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Serializes the given value into the on-the-wire representation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261012,"byte_end":261079,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261080,"byte_end":261083,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261084,"byte_end":261107,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261108,"byte_end":261111,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ - the value to serialize, can be `SpanContext` or `DistributedContext`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261112,"byte_end":261187,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261188,"byte_end":261191,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Returns the on-the-wire byte representation of the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261192,"byte_end":261253,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261254,"byte_end":261257,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ### FromBytes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261258,"byte_end":261275,"line_start":31,"line_end":31,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261276,"byte_end":261279,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Creates a value from the given on-the-wire encoded representation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261280,"byte_end":261350,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261351,"byte_end":261354,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If the value could not be parsed, the underlying implementation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261355,"byte_end":261422,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ SHOULD decide to return ether an empty value, an invalid value, or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261423,"byte_end":261493,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"/ a valid value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261494,"byte_end":261512,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261513,"byte_end":261516,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261517,"byte_end":261540,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261541,"byte_end":261544,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - on-the-wire byte representation of the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261545,"byte_end":261596,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261597,"byte_end":261600,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Returns a value deserialized from bytes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261601,"byte_end":261645,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261646,"byte_end":261649,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## TextMap Format","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261650,"byte_end":261671,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261672,"byte_end":261675,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `TextMapFormat` is a formatter that injects and extracts a value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261676,"byte_end":261744,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/ as text into injectors and extractors that travel in-band across process boundaries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261745,"byte_end":261833,"line_start":48,"line_end":48,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261834,"byte_end":261837,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Encoding is expected to conform to the HTTP Header Field semantics.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261838,"byte_end":261909,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/ Values are often encoded as RPC/HTTP request headers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261910,"byte_end":261967,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261968,"byte_end":261971,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The carrier of propagated data on both the client (injector) and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":261972,"byte_end":262040,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ server (extractor) side is usually a http request. Propagation is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262041,"byte_end":262110,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ usually implemented via library-specific request interceptors, where","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262111,"byte_end":262183,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ the client-side injects values and the server-side extracts them.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262184,"byte_end":262253,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262254,"byte_end":262257,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ `TextMapFormat` MUST expose the APIs that injects values into injectors,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262258,"byte_end":262334,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ and extracts values from extractors.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262335,"byte_end":262375,"line_start":59,"line_end":59,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262376,"byte_end":262379,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ### Fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262380,"byte_end":262394,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262395,"byte_end":262398,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The propagation fields defined. If your injector is reused, you should","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262399,"byte_end":262473,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ delete the fields here before calling `inject`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262474,"byte_end":262525,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262526,"byte_end":262529,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ For example, if the injector is a single-use or immutable request object,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262530,"byte_end":262607,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ you don't need to clear fields as they couldn't have been set before.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262608,"byte_end":262681,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ If it is a mutable, retryable object, successive calls should clear","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262682,"byte_end":262753,"line_start":68,"line_end":68,"column_start":1,"column_end":72}},{"value":"/ these fields first.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262754,"byte_end":262777,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262778,"byte_end":262781,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The use cases of this are:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262782,"byte_end":262812,"line_start":71,"line_end":71,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262813,"byte_end":262816,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ - allow pre-allocation of fields, especially in systems like gRPC","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262817,"byte_end":262886,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ Metadata","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262887,"byte_end":262899,"line_start":74,"line_end":74,"column_start":1,"column_end":13}},{"value":"/ - allow a single-pass over an iterator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262900,"byte_end":262942,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262943,"byte_end":262946,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Returns list of fields that will be used by this formatter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":262947,"byte_end":263010,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263011,"byte_end":263014,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ### Inject","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263015,"byte_end":263029,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263030,"byte_end":263033,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Injects the value downstream. For example, as http headers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263034,"byte_end":263097,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263098,"byte_end":263101,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263102,"byte_end":263125,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263126,"byte_end":263129,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ - the `SpanContext` to be injected.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263130,"byte_end":263169,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/ - the injector that holds propagation fields. For example, an outgoing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263170,"byte_end":263244,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ message or http request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263245,"byte_end":263273,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"/ - the `Setter` invoked for each propagation key to add or remove.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263274,"byte_end":263343,"line_start":88,"line_end":88,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263344,"byte_end":263347,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #### Setter argument","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263348,"byte_end":263372,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263373,"byte_end":263376,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Setter is an argument in `Inject` that puts value into given field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263377,"byte_end":263448,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263449,"byte_end":263452,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ `Setter` allows a `TextMapFormat` to set propagated fields into a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263453,"byte_end":263522,"line_start":94,"line_end":94,"column_start":1,"column_end":70}},{"value":"/ injector.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263523,"byte_end":263536,"line_start":95,"line_end":95,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263537,"byte_end":263540,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ `Setter` MUST be stateless and allowed to be saved as a constant to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263541,"byte_end":263612,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ avoid runtime allocations. One of the ways to implement it is `Setter`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263613,"byte_end":263687,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/ class with `Put` method as described below.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263688,"byte_end":263735,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263736,"byte_end":263739,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ##### Put","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263740,"byte_end":263753,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263754,"byte_end":263757,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Replaces a propagated field with the given value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263758,"byte_end":263811,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263812,"byte_end":263815,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263816,"byte_end":263839,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263840,"byte_end":263843,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ - the injector holds propagation fields. For example, an outgoing message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263844,"byte_end":263921,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ or http request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263922,"byte_end":263942,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/ - the key of the field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263943,"byte_end":263970,"line_start":109,"line_end":109,"column_start":1,"column_end":28}},{"value":"/ - the value of the field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":263971,"byte_end":264000,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264001,"byte_end":264004,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The implementation SHOULD preserve casing (e.g. it should not transform","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264005,"byte_end":264080,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ `Content-Type` to `content-type`) if the used protocol is case insensitive,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264081,"byte_end":264160,"line_start":113,"line_end":113,"column_start":1,"column_end":80}},{"value":"/ otherwise it MUST preserve casing.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264161,"byte_end":264199,"line_start":114,"line_end":114,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264200,"byte_end":264203,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ ### Extract","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264204,"byte_end":264219,"line_start":116,"line_end":116,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264220,"byte_end":264223,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Extracts the value from upstream. For example, as http headers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264224,"byte_end":264291,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264292,"byte_end":264295,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ If the value could not be parsed, the underlying implementation will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264296,"byte_end":264368,"line_start":120,"line_end":120,"column_start":1,"column_end":73}},{"value":"/ decide to return an object representing either an empty value, an invalid","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264369,"byte_end":264446,"line_start":121,"line_end":121,"column_start":1,"column_end":78}},{"value":"/ value, or a valid value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264447,"byte_end":264475,"line_start":122,"line_end":122,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264476,"byte_end":264479,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264480,"byte_end":264503,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264504,"byte_end":264507,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ - the extractor holds propagation fields. For example, an outgoing message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264508,"byte_end":264586,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/ or http request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264587,"byte_end":264607,"line_start":127,"line_end":127,"column_start":1,"column_end":21}},{"value":"/ - the instance of `Getter` invoked for each propagation key to get.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264608,"byte_end":264679,"line_start":128,"line_end":128,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264680,"byte_end":264683,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Returns the non-null extracted value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264684,"byte_end":264725,"line_start":130,"line_end":130,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264726,"byte_end":264729,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ #### Getter argument","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264730,"byte_end":264754,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264755,"byte_end":264758,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Getter is an argument in `Extract` that get value from given field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264759,"byte_end":264829,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264830,"byte_end":264833,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ `Getter` allows a `TextMapFormat` to read propagated fields from a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264834,"byte_end":264904,"line_start":136,"line_end":136,"column_start":1,"column_end":71}},{"value":"/ extractor.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264905,"byte_end":264919,"line_start":137,"line_end":137,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264920,"byte_end":264923,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `Getter` MUST be stateless and allowed to be saved as a constant to avoid","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":264924,"byte_end":265001,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/ runtime allocations. One of the ways to implement it is `Getter` class","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265002,"byte_end":265076,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ with `Get` method as described below.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265077,"byte_end":265118,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265119,"byte_end":265122,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ##### Get","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265123,"byte_end":265136,"line_start":143,"line_end":143,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265137,"byte_end":265140,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ The Get function MUST return the first value of the given propagation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265141,"byte_end":265214,"line_start":145,"line_end":145,"column_start":1,"column_end":74}},{"value":"/ key or return `None` if the key doesn't exist.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265215,"byte_end":265265,"line_start":146,"line_end":146,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265266,"byte_end":265269,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Required arguments:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265270,"byte_end":265293,"line_start":148,"line_end":148,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265294,"byte_end":265297,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ - the extractor of propagation fields, such as an HTTP request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265298,"byte_end":265365,"line_start":150,"line_end":150,"column_start":1,"column_end":68}},{"value":"/ - the key of the field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265366,"byte_end":265393,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265394,"byte_end":265397,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The `get` function is responsible for handling case sensitivity. If","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265398,"byte_end":265469,"line_start":153,"line_end":153,"column_start":1,"column_end":72}},{"value":"/ the getter is intended to work with an HTTP request object, the getter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265470,"byte_end":265544,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ MUST be case insensitive. To improve compatibility with other text-based","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265545,"byte_end":265621,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ protocols, text format implementations MUST ensure to always use the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265622,"byte_end":265694,"line_start":156,"line_end":156,"column_start":1,"column_end":73}},{"value":"/ canonical casing for their attributes. NOTE: Canonical casing for HTTP","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265695,"byte_end":265769,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"/ headers is usually title case (e.g. `Content-Type` instead of `content-type`).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265770,"byte_end":265852,"line_start":158,"line_end":158,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265853,"byte_end":265856,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ##### Keys","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265857,"byte_end":265871,"line_start":160,"line_end":160,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265872,"byte_end":265875,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The Keys function returns a vector of the propagation keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265876,"byte_end":265939,"line_start":162,"line_end":162,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265940,"byte_end":265943,"line_start":163,"line_end":163,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_map_propagator","qualname":"::propagation::text_map_propagator","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","parent":null,"children":[{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":2750},{"krate":0,"index":2754},{"krate":0,"index":1553},{"krate":0,"index":1556}],"decl_id":null,"docs":" # Text Propagator","sig":null,"attributes":[{"value":"/ # Text Propagator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":267949,"byte_end":267970,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":267971,"byte_end":267974,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `TextMapPropagator` is a formatter to serialize and deserialize a value into a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":267975,"byte_end":268057,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/ text format.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268058,"byte_end":268074,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268323,"byte_end":268340,"line_start":14,"line_end":14,"column_start":11,"column_end":28},"name":"TextMapPropagator","qualname":"::propagation::text_map_propagator::TextMapPropagator","value":"TextMapPropagator: Debug","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"decl_id":null,"docs":" Methods to inject and extract a value as text into injectors and extractors that travel\n in-band across process boundaries.\n","sig":null,"attributes":[{"value":"/ Methods to inject and extract a value as text into injectors and extractors that travel","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268182,"byte_end":268273,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ in-band across process boundaries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268274,"byte_end":268312,"line_start":13,"line_end":13,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268563,"byte_end":268569,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"inject","qualname":"::propagation::text_map_propagator::TextMapPropagator::inject","value":"pub fn inject(&Self, &mut dyn Injector)","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Properly encodes the values of the current [`Context`] and injects them into\n the [`Injector`].","sig":null,"attributes":[{"value":"/ Properly encodes the values of the current [`Context`] and injects them into","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268354,"byte_end":268434,"line_start":15,"line_end":15,"column_start":5,"column_end":85}},{"value":"/ the [`Injector`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268439,"byte_end":268460,"line_start":16,"line_end":16,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268465,"byte_end":268468,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268473,"byte_end":268504,"line_start":18,"line_end":18,"column_start":5,"column_end":36}},{"value":"/ [`Injector`]: crate::propagation::Injector","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268509,"byte_end":268555,"line_start":19,"line_end":19,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268879,"byte_end":268893,"line_start":29,"line_end":29,"column_start":8,"column_end":22},"name":"inject_context","qualname":"::propagation::text_map_propagator::TextMapPropagator::inject_context","value":"pub fn inject_context(&Self, &Context, &mut dyn Injector)","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Properly encodes the values of the [`Context`] and injects them into the\n [`Injector`].","sig":null,"attributes":[{"value":"/ Properly encodes the values of the [`Context`] and injects them into the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268678,"byte_end":268754,"line_start":24,"line_end":24,"column_start":5,"column_end":81}},{"value":"/ [`Injector`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268759,"byte_end":268776,"line_start":25,"line_end":25,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268781,"byte_end":268784,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268789,"byte_end":268820,"line_start":27,"line_end":27,"column_start":5,"column_end":36}},{"value":"/ [`Injector`]: crate::propagation::Injector","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268825,"byte_end":268871,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269250,"byte_end":269257,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"extract","qualname":"::propagation::text_map_propagator::TextMapPropagator::extract","value":"pub fn extract(&Self, &dyn Extractor) -> Context","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Retrieves encoded data using the provided [`Extractor`]. If no data for this\n format was retrieved OR if the retrieved data is invalid, then the current\n [`Context`] is returned.","sig":null,"attributes":[{"value":"/ Retrieves encoded data using the provided [`Extractor`]. If no data for this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268950,"byte_end":269030,"line_start":31,"line_end":31,"column_start":5,"column_end":85}},{"value":"/ format was retrieved OR if the retrieved data is invalid, then the current","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269035,"byte_end":269113,"line_start":32,"line_end":32,"column_start":5,"column_end":83}},{"value":"/ [`Context`] is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269118,"byte_end":269146,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269151,"byte_end":269154,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269159,"byte_end":269190,"line_start":35,"line_end":35,"column_start":5,"column_end":36}},{"value":"/ [`Injector`]: crate::propagation::Extractor","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269195,"byte_end":269242,"line_start":36,"line_end":36,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269680,"byte_end":269700,"line_start":47,"line_end":47,"column_start":8,"column_end":28},"name":"extract_with_context","qualname":"::propagation::text_map_propagator::TextMapPropagator::extract_with_context","value":"pub fn extract_with_context(&Self, &Context, &dyn Extractor) -> Context","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Retrieves encoded data using the provided [`Extractor`]. If no data for this\n format was retrieved OR if the retrieved data is invalid, then the given\n [`Context`] is returned.","sig":null,"attributes":[{"value":"/ Retrieves encoded data using the provided [`Extractor`]. If no data for this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269382,"byte_end":269462,"line_start":41,"line_end":41,"column_start":5,"column_end":85}},{"value":"/ format was retrieved OR if the retrieved data is invalid, then the given","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269467,"byte_end":269543,"line_start":42,"line_end":42,"column_start":5,"column_end":81}},{"value":"/ [`Context`] is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269548,"byte_end":269576,"line_start":43,"line_end":43,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269581,"byte_end":269584,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269589,"byte_end":269620,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/ [`Injector`]: crate::propagation::Extractor","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269625,"byte_end":269672,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269838,"byte_end":269844,"line_start":51,"line_end":51,"column_start":8,"column_end":14},"name":"fields","qualname":"::propagation::text_map_propagator::TextMapPropagator::fields","value":"pub fn fields(&Self) -> FieldIter","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":" Returns iter of fields used by [`TextMapPropagator`]","sig":null,"attributes":[{"value":"/ Returns iter of fields used by [`TextMapPropagator`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269766,"byte_end":269822,"line_start":49,"line_end":49,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269827,"byte_end":269830,"line_start":50,"line_end":50,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269960,"byte_end":269969,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"FieldIter","qualname":"::propagation::text_map_propagator::FieldIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over fields of a [`TextMapPropagator`]","sig":null,"attributes":[{"value":"/ An iterator over fields of a [`TextMapPropagator`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269873,"byte_end":269927,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":269928,"byte_end":269931,"line_start":55,"line_end":55,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270104,"byte_end":270107,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldIter>::new","value":"pub fn new(&'a [String]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FieldIter` from a slice of propagator fields\n","sig":null,"attributes":[{"value":"/ Create a new `FieldIter` from a slice of propagator fields","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270030,"byte_end":270092,"line_start":60,"line_end":60,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266159,"byte_end":266167,"line_start":171,"line_end":171,"column_start":11,"column_end":19},"name":"Injector","qualname":"::propagation::Injector","value":"Injector","parent":null,"children":[{"krate":0,"index":1565}],"decl_id":null,"docs":" Injector provides an interface for adding fields from an underlying struct like `HashMap`\n","sig":null,"attributes":[{"value":"/ Injector provides an interface for adding fields from an underlying struct like `HashMap`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266055,"byte_end":266148,"line_start":170,"line_end":170,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1565},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266229,"byte_end":266232,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"set","qualname":"::propagation::Injector::set","value":"pub fn set(&mut Self, &str, String)","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Add a key and value to the underlying data.\n","sig":null,"attributes":[{"value":"/ Add a key and value to the underlying data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266174,"byte_end":266221,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266381,"byte_end":266390,"line_start":177,"line_end":177,"column_start":11,"column_end":20},"name":"Extractor","qualname":"::propagation::Extractor","value":"Extractor","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" Extractor provides an interface for removing fields from an underlying struct like `HashMap`\n","sig":null,"attributes":[{"value":"/ Extractor provides an interface for removing fields from an underlying struct like `HashMap`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266274,"byte_end":266370,"line_start":176,"line_end":176,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266457,"byte_end":266460,"line_start":179,"line_end":179,"column_start":8,"column_end":11},"name":"get","qualname":"::propagation::Extractor::get","value":"pub fn get(&Self, &str) -> Option<&str>","parent":{"krate":0,"index":1566},"children":[],"decl_id":null,"docs":" Get a value from a key from the underlying data.\n","sig":null,"attributes":[{"value":"/ Get a value from a key from the underlying data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266397,"byte_end":266449,"line_start":178,"line_end":178,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266559,"byte_end":266563,"line_start":182,"line_end":182,"column_start":8,"column_end":12},"name":"keys","qualname":"::propagation::Extractor::keys","value":"pub fn keys(&Self) -> Vec<&str>","parent":{"krate":0,"index":1566},"children":[],"decl_id":null,"docs":" Collect all the keys from the underlying data.\n","sig":null,"attributes":[{"value":"/ Collect all the keys from the underlying data.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266501,"byte_end":266551,"line_start":181,"line_end":181,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::trace","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1702},{"krate":0,"index":1776},{"krate":0,"index":1810},{"krate":0,"index":1909},{"krate":0,"index":1993},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3038},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":3072},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3070},{"krate":0,"index":2085},{"krate":0,"index":3075},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":2088},{"krate":0,"index":3088},{"krate":0,"index":3092},{"krate":0,"index":3094},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":2093}],"decl_id":null,"docs":" API for tracing applications and libraries.","sig":null,"attributes":[{"value":"cfg(feature = \"trace\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9497,"byte_end":9522,"line_start":253,"line_end":253,"column_start":1,"column_end":26}},{"value":"/ API for tracing applications and libraries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270351,"byte_end":270398,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270399,"byte_end":270402,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `trace` module includes types for tracking the progression of a single","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270403,"byte_end":270481,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ request while it is handled by services that make up an application. A trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270482,"byte_end":270562,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ is a tree of [`Span`]s which are objects that represent the work being done","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270563,"byte_end":270642,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ by individual services or components involved in a request as it flows","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270643,"byte_end":270717,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ through a system. This module implements the OpenTelemetry [trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270718,"byte_end":270787,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ specification].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270788,"byte_end":270807,"line_start":8,"line_end":8,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270808,"byte_end":270811,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [trace specification]: https://github.com/open-telemetry/opentelemetry-specification/blob/v1.3.0/specification/trace/api.md","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270812,"byte_end":270939,"line_start":10,"line_end":10,"column_start":1,"column_end":128}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270940,"byte_end":270943,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Getting Started","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270944,"byte_end":270966,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270967,"byte_end":270970,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ In application code:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270971,"byte_end":270995,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":270996,"byte_end":270999,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271000,"byte_end":271013,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271014,"byte_end":271045,"line_start":17,"line_end":17,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271046,"byte_end":271053,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, sdk::export::trace::stdout, trace::Tracer};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271054,"byte_end":271129,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271130,"byte_end":271133,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271134,"byte_end":271149,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/     // Create a new trace pipeline that prints to stdout","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271150,"byte_end":271210,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/     let tracer = stdout::new_pipeline().install_simple();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271211,"byte_end":271272,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271273,"byte_end":271276,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tracer.in_span(\"doing_work\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271277,"byte_end":271320,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/         // Traced app logic here...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271321,"byte_end":271360,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271361,"byte_end":271372,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271373,"byte_end":271376,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     // Shutdown trace pipeline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271377,"byte_end":271411,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/     global::shutdown_tracer_provider();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271412,"byte_end":271455,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271456,"byte_end":271461,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271462,"byte_end":271469,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271470,"byte_end":271477,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271478,"byte_end":271481,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In library code:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271482,"byte_end":271502,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271503,"byte_end":271506,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271507,"byte_end":271514,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271515,"byte_end":271546,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271547,"byte_end":271554,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer, TracerProvider}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271555,"byte_end":271626,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271627,"byte_end":271630,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ fn my_library_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271631,"byte_end":271661,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     // Use the global tracer provider to get access to the user-specified","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271662,"byte_end":271739,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/     // tracer configuration","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271740,"byte_end":271771,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/     let tracer_provider = global::tracer_provider();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271772,"byte_end":271828,"line_start":45,"line_end":45,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271829,"byte_end":271832,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     // Get a tracer for this library","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271833,"byte_end":271873,"line_start":47,"line_end":47,"column_start":1,"column_end":41}},{"value":"/     let tracer = tracer_provider.tracer(\"my_name\", Some(env!(\"CARGO_PKG_VERSION\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271874,"byte_end":271962,"line_start":48,"line_end":48,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271963,"byte_end":271966,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     // Create spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271967,"byte_end":271990,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/     let mut span = tracer.start(\"doing_work\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":271991,"byte_end":272041,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272042,"byte_end":272045,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // Do work...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272046,"byte_end":272067,"line_start":53,"line_end":53,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272068,"byte_end":272071,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     // End the span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272072,"byte_end":272095,"line_start":55,"line_end":55,"column_start":1,"column_end":24}},{"value":"/     span.end();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272096,"byte_end":272115,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272116,"byte_end":272121,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272122,"byte_end":272129,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272130,"byte_end":272137,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272138,"byte_end":272141,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272142,"byte_end":272157,"line_start":61,"line_end":61,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272158,"byte_end":272161,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The tracing API consists of a three main traits:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272162,"byte_end":272214,"line_start":63,"line_end":63,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272215,"byte_end":272218,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ * [`TracerProvider`]s are the entry point of the API. They provide access to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272219,"byte_end":272299,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/   `Tracer`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272300,"byte_end":272316,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/ * [`Tracer`]s are types responsible for creating `Span`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272317,"byte_end":272378,"line_start":67,"line_end":67,"column_start":1,"column_end":62}},{"value":"/ * [`Span`]s provide the API to trace an operation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272379,"byte_end":272433,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272434,"byte_end":272437,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ## Working with Async Runtimes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272438,"byte_end":272472,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272473,"byte_end":272476,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Exporting spans often involves sending data over a network or performing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272477,"byte_end":272553,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ other I/O tasks. OpenTelemetry allows you to schedule these tasks using","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272554,"byte_end":272629,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ whichever runtime you area already using such as [Tokio] or [async-std].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272630,"byte_end":272706,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ When using an async runtime it's best to use the [`BatchSpanProcessor`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272707,"byte_end":272782,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ where the spans will be sent in batches as opposed to being sent once ended,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272783,"byte_end":272863,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ which often ends up being more efficient.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272864,"byte_end":272909,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272910,"byte_end":272913,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`BatchSpanProcessor`]: crate::sdk::trace::BatchSpanProcessor","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272914,"byte_end":272979,"line_start":79,"line_end":79,"column_start":1,"column_end":66}},{"value":"/ [Tokio]: https://tokio.rs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":272980,"byte_end":273009,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/ [async-std]: https://async.rs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273010,"byte_end":273043,"line_start":81,"line_end":81,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273044,"byte_end":273047,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Managing Active Spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273048,"byte_end":273076,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273077,"byte_end":273080,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Spans can be marked as \"active\" for a given [`Context`], and all newly","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273081,"byte_end":273155,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ created spans will automatically be children of the currently active span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273156,"byte_end":273234,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273235,"byte_end":273238,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The active span for a given thread can be managed via [`get_active_span`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273239,"byte_end":273316,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ and [`mark_span_as_active`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273317,"byte_end":273349,"line_start":89,"line_end":89,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273350,"byte_end":273353,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273354,"byte_end":273385,"line_start":91,"line_end":91,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273386,"byte_end":273389,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273390,"byte_end":273397,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273398,"byte_end":273429,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273430,"byte_end":273437,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{self, Span, StatusCode, Tracer, TracerProvider}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273438,"byte_end":273527,"line_start":96,"line_end":96,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273528,"byte_end":273531,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ fn may_error(rand: f32) {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273532,"byte_end":273561,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     if rand < 0.5 {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273562,"byte_end":273585,"line_start":99,"line_end":99,"column_start":1,"column_end":24}},{"value":"/         // Get the currently active span to record additional attributes,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273586,"byte_end":273663,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"/         // status, etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273664,"byte_end":273691,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/         trace::get_active_span(|span| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273692,"byte_end":273735,"line_start":102,"line_end":102,"column_start":1,"column_end":44}},{"value":"/             span.set_status(StatusCode::Error, \"value too small\".into());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273736,"byte_end":273813,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/         });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273814,"byte_end":273829,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273830,"byte_end":273839,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273840,"byte_end":273845,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273846,"byte_end":273849,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // Get a tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273850,"byte_end":273869,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"/ let tracer = global::tracer(\"my_tracer\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273870,"byte_end":273915,"line_start":109,"line_end":109,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273916,"byte_end":273919,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ // Create a span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273920,"byte_end":273940,"line_start":111,"line_end":111,"column_start":1,"column_end":21}},{"value":"/ let span = tracer.start(\"parent_span\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273941,"byte_end":273984,"line_start":112,"line_end":112,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273985,"byte_end":273988,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // Mark the span as active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":273989,"byte_end":274019,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ let active = trace::mark_span_as_active(span);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274020,"byte_end":274070,"line_start":115,"line_end":115,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274071,"byte_end":274074,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ // Any span created here will be a child of `parent_span`...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274075,"byte_end":274139,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274140,"byte_end":274143,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ // Drop the guard and the span will no longer be active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274144,"byte_end":274203,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/ drop(active)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274204,"byte_end":274220,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274221,"byte_end":274228,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274229,"byte_end":274236,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274237,"byte_end":274240,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Additionally [`Tracer::with_span`] and [`Tracer::in_span`] can be used as shorthand to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274241,"byte_end":274331,"line_start":124,"line_end":124,"column_start":1,"column_end":91}},{"value":"/ simplify managing the parent context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274332,"byte_end":274373,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274374,"byte_end":274377,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274378,"byte_end":274385,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274386,"byte_end":274417,"line_start":128,"line_end":128,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274418,"byte_end":274425,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::Tracer};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274426,"byte_end":274473,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274474,"byte_end":274477,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ // Get a tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274478,"byte_end":274497,"line_start":132,"line_end":132,"column_start":1,"column_end":20}},{"value":"/ let tracer = global::tracer(\"my_tracer\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274498,"byte_end":274543,"line_start":133,"line_end":133,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274544,"byte_end":274547,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ // Use `in_span` to create a new span and mark it as the parent, dropping it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274548,"byte_end":274628,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"/ // at the end of the block.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274629,"byte_end":274660,"line_start":136,"line_end":136,"column_start":1,"column_end":32}},{"value":"/ tracer.in_span(\"parent_span\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274661,"byte_end":274701,"line_start":137,"line_end":137,"column_start":1,"column_end":41}},{"value":"/     // spans created here will be children of `parent_span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274702,"byte_end":274765,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274766,"byte_end":274773,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274774,"byte_end":274777,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // Use `with_span` to mark a span as active for a given period.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274778,"byte_end":274845,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ let span = tracer.start(\"parent_span\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274846,"byte_end":274889,"line_start":142,"line_end":142,"column_start":1,"column_end":44}},{"value":"/ tracer.with_span(span, |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274890,"byte_end":274923,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/     // spans created here will be children of `parent_span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274924,"byte_end":274987,"line_start":144,"line_end":144,"column_start":1,"column_end":64}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274988,"byte_end":274995,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":274996,"byte_end":275003,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275004,"byte_end":275011,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275012,"byte_end":275015,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ #### Async active spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275016,"byte_end":275043,"line_start":149,"line_end":149,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275044,"byte_end":275047,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Async spans can be propagated with [`TraceContextExt`] and [`FutureExt`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275048,"byte_end":275125,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275126,"byte_end":275129,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275130,"byte_end":275137,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"trace\")]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275138,"byte_end":275169,"line_start":154,"line_end":154,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275170,"byte_end":275177,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{Context, global, trace::{FutureExt, TraceContextExt, Tracer}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275178,"byte_end":275264,"line_start":156,"line_end":156,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275265,"byte_end":275268,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ async fn some_work() { }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275269,"byte_end":275297,"line_start":158,"line_end":158,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275298,"byte_end":275301,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // Get a tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275302,"byte_end":275321,"line_start":160,"line_end":160,"column_start":1,"column_end":20}},{"value":"/ let tracer = global::tracer(\"my_tracer\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275322,"byte_end":275367,"line_start":161,"line_end":161,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275368,"byte_end":275371,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ // Start a span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275372,"byte_end":275391,"line_start":163,"line_end":163,"column_start":1,"column_end":20}},{"value":"/ let span = tracer.start(\"my_span\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275392,"byte_end":275431,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275432,"byte_end":275435,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Perform some async work with this span as the currently active parent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275436,"byte_end":275513,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/ some_work().with_context(Context::current_with_span(span));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275514,"byte_end":275577,"line_start":167,"line_end":167,"column_start":1,"column_end":64}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275578,"byte_end":275585,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275586,"byte_end":275593,"line_start":169,"line_end":169,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":280762,"byte_end":280769,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"SpanRef","qualname":"::trace::context::SpanRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" A reference to the currently active span in this context.\n","sig":null,"attributes":[{"value":"/ A reference to the currently active span in this context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":280672,"byte_end":280733,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281444,"byte_end":281453,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"add_event","qualname":"<SpanRef>::add_event","value":"pub fn add_event(&Self, String, Vec<KeyValue>)","parent":null,"children":[],"decl_id":null,"docs":" An API to record events in the context of a given `Span`.\n","sig":null,"attributes":[{"value":"/ An API to record events in the context of a given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281371,"byte_end":281432,"line_start":42,"line_end":42,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281663,"byte_end":281679,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"record_exception","qualname":"<SpanRef>::record_exception","value":"pub fn record_exception(&Self, &dyn Error)","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to record an exception/error as an `Event`\n","sig":null,"attributes":[{"value":"/ Convenience method to record an exception/error as an `Event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281586,"byte_end":281651,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281881,"byte_end":281913,"line_start":53,"line_end":53,"column_start":12,"column_end":44},"name":"record_exception_with_stacktrace","qualname":"<SpanRef>::record_exception_with_stacktrace","value":"pub fn record_exception_with_stacktrace(&Self, &dyn Error, String)","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to record a exception/error as an `Event` with custom stacktrace\n","sig":null,"attributes":[{"value":"/ Convenience method to record a exception/error as an `Event` with custom stacktrace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281782,"byte_end":281869,"line_start":52,"line_end":52,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282156,"byte_end":282180,"line_start":58,"line_end":58,"column_start":12,"column_end":36},"name":"add_event_with_timestamp","qualname":"<SpanRef>::add_event_with_timestamp","value":"pub fn add_event_with_timestamp(&Self, String, std::time::SystemTime,\nVec<crate::KeyValue>)","parent":null,"children":[],"decl_id":null,"docs":" An API to record events at a specific time in the context of a given `Span`.\n","sig":null,"attributes":[{"value":"/ An API to record events at a specific time in the context of a given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282064,"byte_end":282144,"line_start":57,"line_end":57,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282511,"byte_end":282523,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"span_context","qualname":"<SpanRef>::span_context","value":"pub fn span_context(&Self) -> &SpanContext","parent":null,"children":[],"decl_id":null,"docs":" Returns the `SpanContext` for the given `Span`.\n","sig":null,"attributes":[{"value":"/ Returns the `SpanContext` for the given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282448,"byte_end":282499,"line_start":69,"line_end":69,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282775,"byte_end":282787,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"is_recording","qualname":"<SpanRef>::is_recording","value":"pub fn is_recording(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this `Span` is recording information like events with the `add_event`\n operation, attributes using `set_attributes`, status with `set_status`, etc.\n","sig":null,"attributes":[{"value":"/ Returns true if this `Span` is recording information like events with the `add_event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282589,"byte_end":282678,"line_start":74,"line_end":74,"column_start":5,"column_end":94}},{"value":"/ operation, attributes using `set_attributes`, status with `set_status`, etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282683,"byte_end":282763,"line_start":75,"line_end":75,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283220,"byte_end":283233,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"set_attribute","qualname":"<SpanRef>::set_attribute","value":"pub fn set_attribute(&Self, crate::KeyValue)","parent":null,"children":[],"decl_id":null,"docs":" An API to set a single `Attribute` where the attribute properties are passed\n as arguments. To avoid extra allocations some implementations may offer a separate API for\n each of the possible value types.\n","sig":null,"attributes":[{"value":"/ An API to set a single `Attribute` where the attribute properties are passed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":282987,"byte_end":283067,"line_start":84,"line_end":84,"column_start":5,"column_end":85}},{"value":"/ as arguments. To avoid extra allocations some implementations may offer a separate API for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283072,"byte_end":283166,"line_start":85,"line_end":85,"column_start":5,"column_end":99}},{"value":"/ each of the possible value types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283171,"byte_end":283208,"line_start":86,"line_end":86,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283543,"byte_end":283553,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"set_status","qualname":"<SpanRef>::set_status","value":"pub fn set_status(&Self, super::StatusCode, String)","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Span`. If used, this will override the default `Span`\n status, which is `Unset`. `message` MUST be ignored when the status is `OK` or `Unset`\n","sig":null,"attributes":[{"value":"/ Sets the status of the `Span`. If used, this will override the default `Span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283355,"byte_end":283436,"line_start":91,"line_end":91,"column_start":5,"column_end":86}},{"value":"/ status, which is `Unset`. `message` MUST be ignored when the status is `OK` or `Unset`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283441,"byte_end":283531,"line_start":92,"line_end":92,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1655},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283834,"byte_end":283845,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"update_name","qualname":"<SpanRef>::update_name","value":"pub fn update_name(&Self, String)","parent":null,"children":[],"decl_id":null,"docs":" Updates the `Span`'s name. After this update, any sampling behavior based on the\n name will depend on the implementation.\n","sig":null,"attributes":[{"value":"/ Updates the `Span`'s name. After this update, any sampling behavior based on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283690,"byte_end":283774,"line_start":97,"line_end":97,"column_start":5,"column_end":89}},{"value":"/ name will depend on the implementation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283779,"byte_end":283822,"line_start":98,"line_end":98,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283990,"byte_end":283993,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"end","qualname":"<SpanRef>::end","value":"pub fn end(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the `Span`.\n","sig":null,"attributes":[{"value":"/ Finishes the `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":283954,"byte_end":283978,"line_start":103,"line_end":103,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284123,"byte_end":284141,"line_start":109,"line_end":109,"column_start":12,"column_end":30},"name":"end_with_timestamp","qualname":"<SpanRef>::end_with_timestamp","value":"pub fn end_with_timestamp(&Self, std::time::SystemTime)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the `Span` with given timestamp\n","sig":null,"attributes":[{"value":"/ Finishes the `Span` with given timestamp","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284067,"byte_end":284111,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284346,"byte_end":284361,"line_start":115,"line_end":115,"column_start":11,"column_end":26},"name":"TraceContextExt","qualname":"::trace::context::TraceContextExt","value":"TraceContextExt","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667}],"decl_id":null,"docs":" Methods for storing and retrieving trace data in a context.\n","sig":null,"attributes":[{"value":"/ Methods for storing and retrieving trace data in a context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284272,"byte_end":284335,"line_start":114,"line_end":114,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284495,"byte_end":284512,"line_start":119,"line_end":119,"column_start":8,"column_end":25},"name":"current_with_span","qualname":"::trace::context::TraceContextExt::current_with_span","value":"pub fn current_with_span<T: crate::trace::Span + Send + Sync + 'static>(T)\n-> Self","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Returns a clone of the current context with the included span.","sig":null,"attributes":[{"value":"/ Returns a clone of the current context with the included span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284368,"byte_end":284434,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284439,"byte_end":284442,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is useful for building tracers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284447,"byte_end":284487,"line_start":118,"line_end":118,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284703,"byte_end":284712,"line_start":124,"line_end":124,"column_start":8,"column_end":17},"name":"with_span","qualname":"::trace::context::TraceContextExt::with_span","value":"pub fn with_span<T: crate::trace::Span + Send + Sync + 'static>(&Self, T)\n-> Self","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Returns a clone of this context with the included span.","sig":null,"attributes":[{"value":"/ Returns a clone of this context with the included span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284583,"byte_end":284642,"line_start":121,"line_end":121,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284647,"byte_end":284650,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This is useful for building tracers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284655,"byte_end":284695,"line_start":123,"line_end":123,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285570,"byte_end":285574,"line_start":147,"line_end":147,"column_start":8,"column_end":12},"name":"span","qualname":"::trace::context::TraceContextExt::span","value":"pub fn span(&Self) -> SpanRef","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Returns a reference to this context's span, or the default no-op span if\n none has been set.","sig":null,"attributes":[{"value":"/ Returns a reference to this context's span, or the default no-op span if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284790,"byte_end":284866,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ none has been set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284871,"byte_end":284893,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284898,"byte_end":284901,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284906,"byte_end":284920,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284925,"byte_end":284928,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284933,"byte_end":284940,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284945,"byte_end":284969,"line_start":132,"line_end":132,"column_start":5,"column_end":29}},{"value":"/     sdk,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284974,"byte_end":284986,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/     trace::{SpanContext, TraceContextExt, Tracer, TracerProvider},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":284991,"byte_end":285061,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/     Context,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285066,"byte_end":285082,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285087,"byte_end":285093,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285098,"byte_end":285101,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // returns a reference to an empty span by default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285106,"byte_end":285160,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Context::current().span().span_context(), &SpanContext::empty_context());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285165,"byte_end":285253,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285258,"byte_end":285261,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let provider = sdk::trace::TracerProvider::default();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285266,"byte_end":285323,"line_start":141,"line_end":141,"column_start":5,"column_end":62}},{"value":"/ provider.tracer(\"my-component\", None).in_span(\"my-span\", |cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285328,"byte_end":285395,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/     // Returns a reference to the current span if set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285400,"byte_end":285457,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/     assert_ne!(cx.span().span_context(), &SpanContext::empty_context());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285462,"byte_end":285538,"line_start":144,"line_end":144,"column_start":5,"column_end":81}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285543,"byte_end":285550,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285555,"byte_end":285562,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285715,"byte_end":285730,"line_start":152,"line_end":152,"column_start":8,"column_end":23},"name":"has_active_span","qualname":"::trace::context::TraceContextExt::has_active_span","value":"pub fn has_active_span(&Self) -> bool","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Used to see if a span has been marked as active","sig":null,"attributes":[{"value":"/ Used to see if a span has been marked as active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285603,"byte_end":285654,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285659,"byte_end":285662,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This is useful for building tracers.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285667,"byte_end":285707,"line_start":151,"line_end":151,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285883,"byte_end":285907,"line_start":157,"line_end":157,"column_start":8,"column_end":32},"name":"with_remote_span_context","qualname":"::trace::context::TraceContextExt::with_remote_span_context","value":"pub fn with_remote_span_context(&Self, crate::trace::SpanContext) -> Self","parent":{"krate":0,"index":1660},"children":[],"decl_id":null,"docs":" Returns a copy of this context with the span context included.","sig":null,"attributes":[{"value":"/ Returns a copy of this context with the span context included.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285752,"byte_end":285818,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285823,"byte_end":285826,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This is useful for building propagators.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285831,"byte_end":285875,"line_start":156,"line_end":156,"column_start":5,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288313,"byte_end":288332,"line_start":226,"line_end":226,"column_start":8,"column_end":27},"name":"mark_span_as_active","qualname":"::trace::context::mark_span_as_active","value":"pub fn mark_span_as_active<T: crate::trace::Span + Send + Sync + 'static>(T)\n-> ContextGuard","parent":null,"children":[],"decl_id":null,"docs":" Mark a given `Span` as active.","sig":null,"attributes":[{"value":"/ Mark a given `Span` as active.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287024,"byte_end":287058,"line_start":195,"line_end":195,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287059,"byte_end":287062,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ The `Tracer` MUST provide a way to update its active `Span`, and MAY provide convenience","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287063,"byte_end":287155,"line_start":197,"line_end":197,"column_start":1,"column_end":93}},{"value":"/ methods to manage a `Span`'s lifetime and the scope in which a `Span` is active. When an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287156,"byte_end":287248,"line_start":198,"line_end":198,"column_start":1,"column_end":93}},{"value":"/ active `Span` is made inactive, the previously-active `Span` SHOULD be made active. A `Span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287249,"byte_end":287345,"line_start":199,"line_end":199,"column_start":1,"column_end":97}},{"value":"/ maybe finished (i.e. have a non-null end time) but still be active. A `Span` may be active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287346,"byte_end":287440,"line_start":200,"line_end":200,"column_start":1,"column_end":95}},{"value":"/ on one thread after it has been made inactive on another.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287441,"byte_end":287502,"line_start":201,"line_end":201,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287503,"byte_end":287506,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287507,"byte_end":287521,"line_start":203,"line_end":203,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287522,"byte_end":287525,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287526,"byte_end":287533,"line_start":205,"line_end":205,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer}, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287534,"byte_end":287599,"line_start":206,"line_end":206,"column_start":1,"column_end":66}},{"value":"/ use opentelemetry::trace::{get_active_span, mark_span_as_active};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287600,"byte_end":287669,"line_start":207,"line_end":207,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287670,"byte_end":287673,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ fn my_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287674,"byte_end":287696,"line_start":209,"line_end":209,"column_start":1,"column_end":23}},{"value":"/     let tracer = global::tracer(\"my-component-a\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287697,"byte_end":287751,"line_start":210,"line_end":210,"column_start":1,"column_end":55}},{"value":"/     // start an active span in one function","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287752,"byte_end":287799,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/     let span = tracer.start(\"span-name\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287800,"byte_end":287845,"line_start":212,"line_end":212,"column_start":1,"column_end":46}},{"value":"/     let _guard = mark_span_as_active(span);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287846,"byte_end":287893,"line_start":213,"line_end":213,"column_start":1,"column_end":48}},{"value":"/     // anything happening in functions we call can still access the active span...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287894,"byte_end":287980,"line_start":214,"line_end":214,"column_start":1,"column_end":87}},{"value":"/     my_other_function();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":287981,"byte_end":288009,"line_start":215,"line_end":215,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288010,"byte_end":288015,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288016,"byte_end":288019,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ fn my_other_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288020,"byte_end":288048,"line_start":218,"line_end":218,"column_start":1,"column_end":29}},{"value":"/     // call methods on the current span from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288049,"byte_end":288097,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/     get_active_span(|span| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288098,"byte_end":288130,"line_start":220,"line_end":220,"column_start":1,"column_end":33}},{"value":"/         span.add_event(\"An event!\".to_string(), vec![KeyValue::new(\"happened\", true)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288131,"byte_end":288222,"line_start":221,"line_end":221,"column_start":1,"column_end":92}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288223,"byte_end":288234,"line_start":222,"line_end":222,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288235,"byte_end":288240,"line_start":223,"line_end":223,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288241,"byte_end":288248,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"must_use = \"Dropping the guard detaches the context.\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288249,"byte_end":288305,"line_start":225,"line_end":225,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289211,"byte_end":289226,"line_start":254,"line_end":254,"column_start":8,"column_end":23},"name":"get_active_span","qualname":"::trace::context::get_active_span","value":"pub fn get_active_span<F, T>(F) -> T where F: FnOnce(SpanRef) -> T","parent":null,"children":[],"decl_id":null,"docs":" Executes a closure with a reference to this thread's current span.","sig":null,"attributes":[{"value":"/ Executes a closure with a reference to this thread's current span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288473,"byte_end":288543,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288544,"byte_end":288547,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288548,"byte_end":288562,"line_start":233,"line_end":233,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288563,"byte_end":288566,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288567,"byte_end":288574,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer}, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288575,"byte_end":288640,"line_start":236,"line_end":236,"column_start":1,"column_end":66}},{"value":"/ use opentelemetry::trace::get_active_span;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288641,"byte_end":288687,"line_start":237,"line_end":237,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288688,"byte_end":288691,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ fn my_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288692,"byte_end":288714,"line_start":239,"line_end":239,"column_start":1,"column_end":23}},{"value":"/     // start an active span in one function","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288715,"byte_end":288762,"line_start":240,"line_end":240,"column_start":1,"column_end":48}},{"value":"/     global::tracer(\"my-component\").in_span(\"span-name\", |_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288763,"byte_end":288830,"line_start":241,"line_end":241,"column_start":1,"column_end":68}},{"value":"/         // anything happening in functions we call can still access the active span...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288831,"byte_end":288921,"line_start":242,"line_end":242,"column_start":1,"column_end":91}},{"value":"/         my_other_function();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288922,"byte_end":288954,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288955,"byte_end":288965,"line_start":244,"line_end":244,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288966,"byte_end":288971,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288972,"byte_end":288975,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ fn my_other_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":288976,"byte_end":289004,"line_start":247,"line_end":247,"column_start":1,"column_end":29}},{"value":"/     // call methods on the current span from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289005,"byte_end":289053,"line_start":248,"line_end":248,"column_start":1,"column_end":49}},{"value":"/     get_active_span(|span| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289054,"byte_end":289086,"line_start":249,"line_end":249,"column_start":1,"column_end":33}},{"value":"/         span.add_event(\"An event!\".to_string(), vec![KeyValue::new(\"happened\", true)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289087,"byte_end":289178,"line_start":250,"line_end":250,"column_start":1,"column_end":92}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289179,"byte_end":289189,"line_start":251,"line_end":251,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289190,"byte_end":289195,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289196,"byte_end":289203,"line_start":253,"line_end":253,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289433,"byte_end":289444,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"WithContext","qualname":"::trace::context::WithContext","value":"WithContext {  }","parent":null,"children":[{"krate":0,"index":2828},{"krate":0,"index":2827}],"decl_id":null,"docs":" A future, stream, or sink that has an associated context.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289383,"byte_end":289397,"line_start":262,"line_end":262,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289433,"byte_end":289444,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"__WithContext","qualname":"::trace::context::_::__WithContext","value":"__WithContext {  }","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289383,"byte_end":289397,"line_start":262,"line_end":262,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291426,"byte_end":291435,"line_start":334,"line_end":334,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::trace::context::FutureExt","value":"FutureExt: Sized","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":" Extension trait allowing futures, streams, and sinks to be traced with a span.\n","sig":null,"attributes":[{"value":"/ Extension trait allowing futures, streams, and sinks to be traced with a span.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291333,"byte_end":291415,"line_start":333,"line_end":333,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291741,"byte_end":291753,"line_start":342,"line_end":342,"column_start":8,"column_end":20},"name":"with_context","qualname":"::trace::context::FutureExt::with_context","value":"pub fn with_context(Self, Context) -> WithContext<Self>","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" Attaches the provided [`Context`] to this type, returning a `WithContext`\n wrapper.","sig":null,"attributes":[{"value":"/ Attaches the provided [`Context`] to this type, returning a `WithContext`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291449,"byte_end":291526,"line_start":335,"line_end":335,"column_start":5,"column_end":82}},{"value":"/ wrapper.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291531,"byte_end":291543,"line_start":336,"line_end":336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291548,"byte_end":291551,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291556,"byte_end":291632,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ will be set as current while it is being polled.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291637,"byte_end":291689,"line_start":339,"line_end":339,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291694,"byte_end":291697,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291702,"byte_end":291733,"line_start":341,"line_end":341,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":292185,"byte_end":292205,"line_start":356,"line_end":356,"column_start":8,"column_end":28},"name":"with_current_context","qualname":"::trace::context::FutureExt::with_current_context","value":"pub fn with_current_context(Self) -> WithContext<Self>","parent":{"krate":0,"index":1699},"children":[],"decl_id":null,"docs":" Attaches the current [`Context`] to this type, returning a `WithContext`\n wrapper.","sig":null,"attributes":[{"value":"/ Attaches the current [`Context`] to this type, returning a `WithContext`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291890,"byte_end":291966,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ wrapper.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291971,"byte_end":291983,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291988,"byte_end":291991,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ When the wrapped type is a future, stream, or sink, the attached context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291996,"byte_end":292072,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ will be set as the default while it is being polled.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":292077,"byte_end":292133,"line_start":353,"line_end":353,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":292138,"byte_end":292141,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":292146,"byte_end":292177,"line_start":355,"line_end":355,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"noop","qualname":"::trace::noop","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1742},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":2837},{"krate":0,"index":2839},{"krate":0,"index":2841},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2847},{"krate":0,"index":2849},{"krate":0,"index":1764},{"krate":0,"index":1766},{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2855},{"krate":0,"index":1774},{"krate":0,"index":2857}],"decl_id":null,"docs":" No-op trace impls","sig":null,"attributes":[{"value":"/ No-op trace impls","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292321,"byte_end":292342,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292343,"byte_end":292346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This implementation is returned as the global tracer if no `Tracer`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292347,"byte_end":292418,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ has been set. It is also useful for testing purposes as it is intended","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292419,"byte_end":292493,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ to have minimal resource utilization and runtime impact.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292494,"byte_end":292554,"line_start":5,"line_end":5,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292913,"byte_end":292931,"line_start":18,"line_end":18,"column_start":12,"column_end":30},"name":"NoopTracerProvider","qualname":"::trace::noop::NoopTracerProvider","value":"NoopTracerProvider {  }","parent":null,"children":[{"krate":0,"index":2830}],"decl_id":null,"docs":" A no-op instance of a `TracerProvider`.\n","sig":null,"attributes":[{"value":"/ A no-op instance of a `TracerProvider`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292825,"byte_end":292868,"line_start":16,"line_end":16,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293035,"byte_end":293038,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopTracerProvider>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new no-op tracer provider\n","sig":null,"attributes":[{"value":"/ Create a new no-op tracer provider","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292985,"byte_end":293023,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293595,"byte_end":293603,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"NoopSpan","qualname":"::trace::noop::NoopSpan","value":"NoopSpan {  }","parent":null,"children":[{"krate":0,"index":2838}],"decl_id":null,"docs":" A no-op instance of a `Span`.\n","sig":null,"attributes":[{"value":"/ A no-op instance of a `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293526,"byte_end":293559,"line_start":43,"line_end":43,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293805,"byte_end":293808,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopSpan>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `NoopSpan` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new `NoopSpan` instance.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293755,"byte_end":293793,"line_start":56,"line_end":56,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295288,"byte_end":295298,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"NoopTracer","qualname":"::trace::noop::NoopTracer","value":"NoopTracer {  }","parent":null,"children":[{"krate":0,"index":2844}],"decl_id":null,"docs":" A no-op instance of a `Tracer`.\n","sig":null,"attributes":[{"value":"/ A no-op instance of a `Tracer`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295208,"byte_end":295243,"line_start":117,"line_end":117,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295385,"byte_end":295388,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopTracer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new no-op tracer\n","sig":null,"attributes":[{"value":"/ Create a new no-op tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295344,"byte_end":295373,"line_start":124,"line_end":124,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296820,"byte_end":296836,"line_start":176,"line_end":176,"column_start":12,"column_end":28},"name":"NoopSpanExporter","qualname":"::trace::noop::NoopSpanExporter","value":"NoopSpanExporter {  }","parent":null,"children":[{"krate":0,"index":2852}],"decl_id":null,"docs":" A no-op instance of an [`SpanExporter`].","sig":null,"attributes":[{"value":"/ A no-op instance of an [`SpanExporter`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296672,"byte_end":296716,"line_start":172,"line_end":172,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296717,"byte_end":296720,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [`SpanExporter`]: crate::sdk::export::trace::SpanExporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296721,"byte_end":296782,"line_start":174,"line_end":174,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296935,"byte_end":296938,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopSpanExporter>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new noop span exporter\n","sig":null,"attributes":[{"value":"/ Create a new noop span exporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296888,"byte_end":296923,"line_start":181,"line_end":181,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1793},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300220,"byte_end":300224,"line_start":26,"line_end":26,"column_start":11,"column_end":15},"name":"Span","qualname":"::trace::span::Span","value":"Span: fmt::Debug","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" Interface for a single operation within a trace.\n","sig":null,"attributes":[{"value":"/ Interface for a single operation within a trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300157,"byte_end":300209,"line_start":25,"line_end":25,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300849,"byte_end":300858,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"add_event","qualname":"::trace::span::Span::add_event","value":"pub fn add_event(&mut Self, String, Vec<KeyValue>)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" An API to record events in the context of a given `Span`.","sig":null,"attributes":[{"value":"/ An API to record events in the context of a given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300243,"byte_end":300304,"line_start":27,"line_end":27,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300309,"byte_end":300312,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Events have a time associated with the moment when they are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300317,"byte_end":300380,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/ added to the `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300385,"byte_end":300409,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300414,"byte_end":300417,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Events SHOULD preserve the order in which they're set. This will typically match","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300422,"byte_end":300506,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ the ordering of the events' timestamps.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300511,"byte_end":300554,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300559,"byte_end":300562,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Note that the OpenTelemetry project documents certain [\"standard event names and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300567,"byte_end":300651,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ keys\"](https://github.com/open-telemetry/opentelemetry-specification/tree/v0.5.0/specification/trace/semantic_conventions/README.md)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300656,"byte_end":300792,"line_start":36,"line_end":36,"column_start":5,"column_end":141}},{"value":"/ which have prescribed semantic meanings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300797,"byte_end":300841,"line_start":37,"line_end":37,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301826,"byte_end":301842,"line_start":55,"line_end":55,"column_start":8,"column_end":24},"name":"record_exception","qualname":"::trace::span::Span::record_exception","value":"pub fn record_exception(&mut Self, &dyn Error)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Convenience method to record an exception/error as an `Event`","sig":null,"attributes":[{"value":"/ Convenience method to record an exception/error as an `Event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301000,"byte_end":301065,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301070,"byte_end":301073,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ An exception SHOULD be recorded as an Event on the span during which it occurred.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301078,"byte_end":301163,"line_start":44,"line_end":44,"column_start":5,"column_end":90}},{"value":"/ The name of the event MUST be \"exception\".","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301168,"byte_end":301214,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301219,"byte_end":301222,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The semantic conventions for Errors are described in [\"Semantic Conventions for Exceptions\"](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/exceptions.md)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301227,"byte_end":301453,"line_start":47,"line_end":47,"column_start":5,"column_end":231}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301458,"byte_end":301461,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ For now we will not set `exception.stacktrace` attribute since the `Error::backtrace`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301466,"byte_end":301555,"line_start":49,"line_end":49,"column_start":5,"column_end":94}},{"value":"/ method is still in nightly. Users can provide a stacktrace by using the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301560,"byte_end":301635,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ `record_exception_with_stacktrace` method.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301640,"byte_end":301686,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301691,"byte_end":301694,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Users can custom the exception message by overriding the `fmt::Display` trait's `fmt` method","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301699,"byte_end":301795,"line_start":53,"line_end":53,"column_start":5,"column_end":101}},{"value":"/ for the error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":301800,"byte_end":301818,"line_start":54,"line_end":54,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302194,"byte_end":302226,"line_start":64,"line_end":64,"column_start":8,"column_end":40},"name":"record_exception_with_stacktrace","qualname":"::trace::span::Span::record_exception_with_stacktrace","value":"pub fn record_exception_with_stacktrace(&mut Self, &dyn Error, String)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Convenience method to record a exception/error as an `Event` with custom stacktrace","sig":null,"attributes":[{"value":"/ Convenience method to record a exception/error as an `Event` with custom stacktrace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302030,"byte_end":302117,"line_start":61,"line_end":61,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302122,"byte_end":302125,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ See `Span:record_exception` method for more details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302130,"byte_end":302186,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303040,"byte_end":303064,"line_start":81,"line_end":81,"column_start":8,"column_end":32},"name":"add_event_with_timestamp","qualname":"::trace::span::Span::add_event_with_timestamp","value":"pub fn add_event_with_timestamp(&mut Self, String, SystemTime, Vec<KeyValue>)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" An API to record events at a specific time in the context of a given `Span`.","sig":null,"attributes":[{"value":"/ An API to record events at a specific time in the context of a given `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302520,"byte_end":302600,"line_start":73,"line_end":73,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302605,"byte_end":302608,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Events SHOULD preserve the order in which they're set. This will typically match","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302613,"byte_end":302697,"line_start":75,"line_end":75,"column_start":5,"column_end":89}},{"value":"/ the ordering of the events' timestamps.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302702,"byte_end":302745,"line_start":76,"line_end":76,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302750,"byte_end":302753,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Note that the OpenTelemetry project documents certain [\"standard event names and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302758,"byte_end":302842,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ keys\"](https://github.com/open-telemetry/opentelemetry-specification/tree/v0.5.0/specification/trace/semantic_conventions/README.md)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302847,"byte_end":302983,"line_start":79,"line_end":79,"column_start":5,"column_end":141}},{"value":"/ which have prescribed semantic meanings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":302988,"byte_end":303032,"line_start":80,"line_end":80,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303385,"byte_end":303397,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"span_context","qualname":"::trace::span::Span::span_context","value":"pub fn span_context(&Self) -> &SpanContext","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Returns the `SpanContext` for the given `Span`. The returned value may be used even after\n the `Span is finished. The returned value MUST be the same for the entire `Span` lifetime.\n","sig":null,"attributes":[{"value":"/ Returns the `SpanContext` for the given `Span`. The returned value may be used even after","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303185,"byte_end":303278,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/ the `Span is finished. The returned value MUST be the same for the entire `Span` lifetime.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303283,"byte_end":303377,"line_start":89,"line_end":89,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304605,"byte_end":304617,"line_start":108,"line_end":108,"column_start":8,"column_end":20},"name":"is_recording","qualname":"::trace::span::Span::is_recording","value":"pub fn is_recording(&Self) -> bool","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Returns true if this `Span` is recording information like events with the `add_event`\n operation, attributes using `set_attributes`, status with `set_status`, etc.","sig":null,"attributes":[{"value":"/ Returns true if this `Span` is recording information like events with the `add_event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303427,"byte_end":303516,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ operation, attributes using `set_attributes`, status with `set_status`, etc.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303521,"byte_end":303601,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303606,"byte_end":303609,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This flag SHOULD be used to avoid expensive computations of a `Span` attributes or events in","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303614,"byte_end":303710,"line_start":95,"line_end":95,"column_start":5,"column_end":101}},{"value":"/ case when a `Span` is definitely not recorded. Note that any child span's recording is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303715,"byte_end":303805,"line_start":96,"line_end":96,"column_start":5,"column_end":95}},{"value":"/ determined independently from the value of this flag (typically based on the sampled flag of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303810,"byte_end":303906,"line_start":97,"line_end":97,"column_start":5,"column_end":101}},{"value":"/ a `TraceFlag` on `SpanContext`).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303911,"byte_end":303947,"line_start":98,"line_end":98,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303952,"byte_end":303955,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This flag may be true despite the entire trace being sampled out. This allows to record and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":303960,"byte_end":304055,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/ process information about the individual Span without sending it to the backend. An example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304060,"byte_end":304155,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ of this scenario may be recording and processing of all incoming requests for the processing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304160,"byte_end":304256,"line_start":102,"line_end":102,"column_start":5,"column_end":101}},{"value":"/ and building of SLA/SLO latency charts while sending only a subset - sampled spans - to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304261,"byte_end":304356,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/ backend. See also the sampling section of SDK design.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304361,"byte_end":304418,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304423,"byte_end":304426,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Users of the API should only access the `is_recording` property when instrumenting code and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304431,"byte_end":304526,"line_start":106,"line_end":106,"column_start":5,"column_end":100}},{"value":"/ never access `SampledFlag` unless used in context propagators.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304531,"byte_end":304597,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305412,"byte_end":305425,"line_start":123,"line_end":123,"column_start":8,"column_end":21},"name":"set_attribute","qualname":"::trace::span::Span::set_attribute","value":"pub fn set_attribute(&mut Self, KeyValue)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" An API to set a single `Attribute` where the attribute properties are passed\n as arguments. To avoid extra allocations some implementations may offer a separate API for\n each of the possible value types.","sig":null,"attributes":[{"value":"/ An API to set a single `Attribute` where the attribute properties are passed","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304639,"byte_end":304719,"line_start":110,"line_end":110,"column_start":5,"column_end":85}},{"value":"/ as arguments. To avoid extra allocations some implementations may offer a separate API for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304724,"byte_end":304818,"line_start":111,"line_end":111,"column_start":5,"column_end":99}},{"value":"/ each of the possible value types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304823,"byte_end":304860,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304865,"byte_end":304868,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ An `Attribute` is defined as a `KeyValue` pair.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304873,"byte_end":304924,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304929,"byte_end":304932,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Attributes SHOULD preserve the order in which they're set. Setting an attribute","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":304937,"byte_end":305020,"line_start":116,"line_end":116,"column_start":5,"column_end":88}},{"value":"/ with the same key as an existing attribute SHOULD overwrite the existing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305025,"byte_end":305101,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/ attribute's value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305106,"byte_end":305128,"line_start":118,"line_end":118,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305133,"byte_end":305136,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the OpenTelemetry project documents certain [\"standard","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305141,"byte_end":305209,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ attributes\"](https://github.com/open-telemetry/opentelemetry-specification/tree/v0.5.0/specification/trace/semantic_conventions/README.md)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305214,"byte_end":305356,"line_start":121,"line_end":121,"column_start":5,"column_end":147}},{"value":"/ that have prescribed semantic meanings.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305361,"byte_end":305404,"line_start":122,"line_end":122,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305896,"byte_end":305906,"line_start":132,"line_end":132,"column_start":8,"column_end":18},"name":"set_status","qualname":"::trace::span::Span::set_status","value":"pub fn set_status(&mut Self, StatusCode, String)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Sets the status of the `Span`. `message` MUST be ignored when the status is `OK` or\n `Unset`.","sig":null,"attributes":[{"value":"/ Sets the status of the `Span`. `message` MUST be ignored when the status is `OK` or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305464,"byte_end":305551,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ `Unset`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305556,"byte_end":305568,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305573,"byte_end":305576,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The order of status is `Ok` > `Error` > `Unset`. That's means set the status","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305581,"byte_end":305661,"line_start":128,"line_end":128,"column_start":5,"column_end":85}},{"value":"/ to `Unset` will always be ignore, set the status to `Error` only works when current","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305666,"byte_end":305753,"line_start":129,"line_end":129,"column_start":5,"column_end":92}},{"value":"/ status is `Unset`, set the status to `Ok` will be consider final and any further call","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305758,"byte_end":305847,"line_start":130,"line_end":130,"column_start":5,"column_end":94}},{"value":"/ to this function will be ignore.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305852,"byte_end":305888,"line_start":131,"line_end":131,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306769,"byte_end":306780,"line_start":146,"line_end":146,"column_start":8,"column_end":19},"name":"update_name","qualname":"::trace::span::Span::update_name","value":"pub fn update_name(&mut Self, String)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Updates the `Span`'s name. After this update, any sampling behavior based on the\n name will depend on the implementation.","sig":null,"attributes":[{"value":"/ Updates the `Span`'s name. After this update, any sampling behavior based on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":305959,"byte_end":306043,"line_start":134,"line_end":134,"column_start":5,"column_end":89}},{"value":"/ name will depend on the implementation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306048,"byte_end":306091,"line_start":135,"line_end":135,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306096,"byte_end":306099,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ It is highly discouraged to update the name of a `Span` after its creation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306104,"byte_end":306183,"line_start":137,"line_end":137,"column_start":5,"column_end":84}},{"value":"/ `Span` name is often used to group, filter and identify the logical groups of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306188,"byte_end":306269,"line_start":138,"line_end":138,"column_start":5,"column_end":86}},{"value":"/ spans. Often, filtering logic will be implemented before the `Span` creation","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306274,"byte_end":306354,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/ for performance reasons, and the name update may interfere with this logic.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306359,"byte_end":306438,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306443,"byte_end":306446,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The method name is called `update_name` to differentiate this method from the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306451,"byte_end":306532,"line_start":142,"line_end":142,"column_start":5,"column_end":86}},{"value":"/ regular property. It emphasizes that this operation signifies a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306537,"byte_end":306604,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ major change for a `Span` and may lead to re-calculation of sampling or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306609,"byte_end":306684,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ filtering decisions made previously depending on the implementation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306689,"byte_end":306761,"line_start":145,"line_end":145,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307242,"byte_end":307245,"line_start":158,"line_end":158,"column_start":8,"column_end":11},"name":"end","qualname":"::trace::span::Span::end","value":"pub fn end(&mut Self)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Finishes the `Span`.","sig":null,"attributes":[{"value":"/ Finishes the `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306816,"byte_end":306840,"line_start":148,"line_end":148,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306845,"byte_end":306848,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Implementations MUST ignore all subsequent calls to `end` (there might be","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306853,"byte_end":306930,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/ exceptions when the tracer is streaming events and has no mutable state","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":306935,"byte_end":307010,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ associated with the Span).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307015,"byte_end":307045,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307050,"byte_end":307053,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Calls to `end` a Span MUST not have any effects on child `Span`s as they may","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307058,"byte_end":307138,"line_start":154,"line_end":154,"column_start":5,"column_end":85}},{"value":"/ still be running and can be ended later.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307143,"byte_end":307187,"line_start":155,"line_end":155,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307192,"byte_end":307195,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This API MUST be non-blocking.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307200,"byte_end":307234,"line_start":157,"line_end":157,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307475,"byte_end":307493,"line_start":167,"line_end":167,"column_start":8,"column_end":26},"name":"end_with_timestamp","qualname":"::trace::span::Span::end_with_timestamp","value":"pub fn end_with_timestamp(&mut Self, SystemTime)","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":" Finishes the `Span` with given timestamp","sig":null,"attributes":[{"value":"/ Finishes the `Span` with given timestamp","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307323,"byte_end":307367,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307372,"byte_end":307375,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ For more details, refer to [`Span::end`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307380,"byte_end":307424,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307429,"byte_end":307432,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ [`Span::end`]: Span::end()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307437,"byte_end":307467,"line_start":166,"line_end":166,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309576,"byte_end":309582,"line_start":209,"line_end":209,"column_start":5,"column_end":11},"name":"Client","qualname":"::trace::span::SpanKind::Client","value":"SpanKind::Client","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Indicates that the span describes a synchronous request to\n some remote service.  This span is the parent of a remote `Server`\n span and waits for its response.\n","sig":null,"attributes":[{"value":"/ Indicates that the span describes a synchronous request to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309393,"byte_end":309455,"line_start":206,"line_end":206,"column_start":5,"column_end":67}},{"value":"/ some remote service.  This span is the parent of a remote `Server`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309460,"byte_end":309530,"line_start":207,"line_end":207,"column_start":5,"column_end":75}},{"value":"/ span and waits for its response.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309535,"byte_end":309571,"line_start":208,"line_end":208,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309802,"byte_end":309808,"line_start":213,"line_end":213,"column_start":5,"column_end":11},"name":"Server","qualname":"::trace::span::SpanKind::Server","value":"SpanKind::Server","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Indicates that the span covers server-side handling of a\n synchronous RPC or other remote request.  This span is the child of\n a remote `Client` span that was expected to wait for a response.\n","sig":null,"attributes":[{"value":"/ Indicates that the span covers server-side handling of a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309588,"byte_end":309648,"line_start":210,"line_end":210,"column_start":5,"column_end":65}},{"value":"/ synchronous RPC or other remote request.  This span is the child of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309653,"byte_end":309724,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/ a remote `Client` span that was expected to wait for a response.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309729,"byte_end":309797,"line_start":212,"line_end":212,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310188,"byte_end":310196,"line_start":220,"line_end":220,"column_start":5,"column_end":13},"name":"Producer","qualname":"::trace::span::SpanKind::Producer","value":"SpanKind::Producer","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Indicates that the span describes the parent of an\n asynchronous request.  This parent span is expected to end before\n the corresponding child `Consumer` span, possibly even before the\n child span starts. In messaging scenarios with batching, tracing\n individual messages requires a new `Producer` span per message to\n be created.\n","sig":null,"attributes":[{"value":"/ Indicates that the span describes the parent of an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309814,"byte_end":309868,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ asynchronous request.  This parent span is expected to end before","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309873,"byte_end":309942,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ the corresponding child `Consumer` span, possibly even before the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309947,"byte_end":310016,"line_start":216,"line_end":216,"column_start":5,"column_end":74}},{"value":"/ child span starts. In messaging scenarios with batching, tracing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310021,"byte_end":310089,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ individual messages requires a new `Producer` span per message to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310094,"byte_end":310163,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/ be created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310168,"byte_end":310183,"line_start":219,"line_end":219,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310301,"byte_end":310309,"line_start":223,"line_end":223,"column_start":5,"column_end":13},"name":"Consumer","qualname":"::trace::span::SpanKind::Consumer","value":"SpanKind::Consumer","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Indicates that the span describes the child of an\n asynchronous `Producer` request.\n","sig":null,"attributes":[{"value":"/ Indicates that the span describes the child of an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310202,"byte_end":310255,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ asynchronous `Producer` request.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310260,"byte_end":310296,"line_start":222,"line_end":222,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310495,"byte_end":310503,"line_start":227,"line_end":227,"column_start":5,"column_end":13},"name":"Internal","qualname":"::trace::span::SpanKind::Internal","value":"SpanKind::Internal","parent":{"krate":0,"index":2862},"children":[],"decl_id":null,"docs":" Default value. Indicates that the span represents an\n internal operation within an application, as opposed to an\n operations with remote parents or children.\n","sig":null,"attributes":[{"value":"/ Default value. Indicates that the span represents an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310315,"byte_end":310371,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/ internal operation within an application, as opposed to an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310376,"byte_end":310438,"line_start":225,"line_end":225,"column_start":5,"column_end":67}},{"value":"/ operations with remote parents or children.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310443,"byte_end":310490,"line_start":226,"line_end":226,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309378,"byte_end":309386,"line_start":205,"line_end":205,"column_start":10,"column_end":18},"name":"SpanKind","qualname":"::trace::span::SpanKind","value":"pub enum SpanKind { Client, Server, Producer, Consumer, Internal, }","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2871}],"decl_id":null,"docs":" `SpanKind` describes the relationship between the Span, its parents,\n and its children in a `Trace`. `SpanKind` describes two independent\n properties that benefit tracing systems during analysis.","sig":null,"attributes":[{"value":"/ `SpanKind` describes the relationship between the Span, its parents,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307532,"byte_end":307604,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ and its children in a `Trace`. `SpanKind` describes two independent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307605,"byte_end":307676,"line_start":171,"line_end":171,"column_start":1,"column_end":72}},{"value":"/ properties that benefit tracing systems during analysis.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307677,"byte_end":307737,"line_start":172,"line_end":172,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307738,"byte_end":307741,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The first property described by `SpanKind` reflects whether the `Span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307742,"byte_end":307816,"line_start":174,"line_end":174,"column_start":1,"column_end":75}},{"value":"/ is a remote child or parent. `Span`s with a remote parent are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307817,"byte_end":307882,"line_start":175,"line_end":175,"column_start":1,"column_end":66}},{"value":"/ interesting because they are sources of external load. `Span`s with a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307883,"byte_end":307956,"line_start":176,"line_end":176,"column_start":1,"column_end":74}},{"value":"/ remote child are interesting because they reflect a non-local system","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":307957,"byte_end":308029,"line_start":177,"line_end":177,"column_start":1,"column_end":73}},{"value":"/ dependency.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308030,"byte_end":308045,"line_start":178,"line_end":178,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308046,"byte_end":308049,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ The second property described by `SpanKind` reflects whether a child","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308050,"byte_end":308122,"line_start":180,"line_end":180,"column_start":1,"column_end":73}},{"value":"/ `Span` represents a synchronous call.  When a child span is synchronous,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308123,"byte_end":308199,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ the parent is expected to wait for it to complete under ordinary","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308200,"byte_end":308268,"line_start":182,"line_end":182,"column_start":1,"column_end":69}},{"value":"/ circumstances.  It can be useful for tracing systems to know this","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308269,"byte_end":308338,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"/ property, since synchronous `Span`s may contribute to the overall trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308339,"byte_end":308414,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/ latency. Asynchronous scenarios can be remote or local.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308415,"byte_end":308474,"line_start":185,"line_end":185,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308475,"byte_end":308478,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In order for `SpanKind` to be meaningful, callers should arrange that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308479,"byte_end":308552,"line_start":187,"line_end":187,"column_start":1,"column_end":74}},{"value":"/ a single `Span` does not serve more than one purpose.  For example, a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308553,"byte_end":308626,"line_start":188,"line_end":188,"column_start":1,"column_end":74}},{"value":"/ server-side span should not be used directly as the parent of another","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308627,"byte_end":308700,"line_start":189,"line_end":189,"column_start":1,"column_end":74}},{"value":"/ remote span.  As a simple guideline, instrumentation should create a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308701,"byte_end":308773,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"/ new `Span` prior to extracting and serializing the span context for a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308774,"byte_end":308847,"line_start":191,"line_end":191,"column_start":1,"column_end":74}},{"value":"/ remote call.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308848,"byte_end":308864,"line_start":192,"line_end":192,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308865,"byte_end":308868,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ To summarize the interpretation of these kinds:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308869,"byte_end":308920,"line_start":194,"line_end":194,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308921,"byte_end":308924,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ | `SpanKind` | Synchronous | Asynchronous | Remote Incoming | Remote Outgoing |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":308925,"byte_end":309008,"line_start":196,"line_end":196,"column_start":1,"column_end":84}},{"value":"/ |------------|-----|-----|-----|-----|","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309009,"byte_end":309051,"line_start":197,"line_end":197,"column_start":1,"column_end":43}},{"value":"/ | `Client`   | yes |     |     | yes |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309052,"byte_end":309094,"line_start":198,"line_end":198,"column_start":1,"column_end":43}},{"value":"/ | `Server`   | yes |     | yes |     |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309095,"byte_end":309137,"line_start":199,"line_end":199,"column_start":1,"column_end":43}},{"value":"/ | `Producer` |     | yes |     | yes |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309138,"byte_end":309180,"line_start":200,"line_end":200,"column_start":1,"column_end":43}},{"value":"/ | `Consumer` |     | yes | yes |     |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309181,"byte_end":309223,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/ | `Internal` |     |     |     |     |","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":309224,"byte_end":309266,"line_start":202,"line_end":202,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311253,"byte_end":311258,"line_start":249,"line_end":249,"column_start":5,"column_end":10},"name":"Unset","qualname":"::trace::span::StatusCode::Unset","value":"StatusCode::Unset","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" The default status.\n","sig":null,"attributes":[{"value":"/ The default status.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311225,"byte_end":311248,"line_start":248,"line_end":248,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311299,"byte_end":311301,"line_start":251,"line_end":251,"column_start":5,"column_end":7},"name":"Ok","qualname":"::trace::span::StatusCode::Ok","value":"StatusCode::Ok","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" OK is returned on success.\n","sig":null,"attributes":[{"value":"/ OK is returned on success.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311264,"byte_end":311294,"line_start":250,"line_end":250,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311348,"byte_end":311353,"line_start":253,"line_end":253,"column_start":5,"column_end":10},"name":"Error","qualname":"::trace::span::StatusCode::Error","value":"StatusCode::Error","parent":{"krate":0,"index":2880},"children":[],"decl_id":null,"docs":" The operation contains an error.\n","sig":null,"attributes":[{"value":"/ The operation contains an error.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311307,"byte_end":311343,"line_start":252,"line_end":252,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":2880},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311208,"byte_end":311218,"line_start":247,"line_end":247,"column_start":10,"column_end":20},"name":"StatusCode","qualname":"::trace::span::StatusCode","value":"pub enum StatusCode { Unset, Ok, Error, }","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2883},{"krate":0,"index":2885}],"decl_id":null,"docs":" The `StatusCode` interface represents the status of a finished `Span`.\n It's composed of a canonical code in conjunction with an optional\n descriptive message.\n","sig":null,"attributes":[{"value":"/ The `StatusCode` interface represents the status of a finished `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310921,"byte_end":310995,"line_start":242,"line_end":242,"column_start":1,"column_end":75}},{"value":"/ It's composed of a canonical code in conjunction with an optional","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310996,"byte_end":311065,"line_start":243,"line_end":243,"column_start":1,"column_end":70}},{"value":"/ descriptive message.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311066,"byte_end":311090,"line_start":244,"line_end":244,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311446,"byte_end":311452,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"name":"as_str","qualname":"<StatusCode>::as_str","value":"pub fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Return a static str that represent the status code\n","sig":null,"attributes":[{"value":"/ Return a static str that represent the status code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311380,"byte_end":311434,"line_start":257,"line_end":257,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313299,"byte_end":313309,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"TraceFlags","qualname":"::trace::span_context::TraceFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":" Flags that can be set on a [`SpanContext`].","sig":null,"attributes":[{"value":"/ Flags that can be set on a [`SpanContext`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":312857,"byte_end":312904,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":312905,"byte_end":312908,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The current version of the specification only supports a single flag called `sampled`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":312909,"byte_end":312999,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313000,"byte_end":313003,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See the W3C TraceContext specification's [trace-flags] section for more details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313004,"byte_end":313088,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313089,"byte_end":313092,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [trace-flags]: https://www.w3.org/TR/trace-context/#trace-flags","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313093,"byte_end":313160,"line_start":28,"line_end":28,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313673,"byte_end":313680,"line_start":40,"line_end":40,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::trace::span_context::TraceFlags::SAMPLED","value":"TraceFlags","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" Trace flags with the `sampled` flag set to `1`.","sig":null,"attributes":[{"value":"/ Trace flags with the `sampled` flag set to `1`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313338,"byte_end":313389,"line_start":34,"line_end":34,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313394,"byte_end":313397,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Spans that are not sampled will be ignored by most tracing tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313402,"byte_end":313471,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ See the `sampled` section of the [W3C TraceContext specification] for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313476,"byte_end":313558,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313563,"byte_end":313566,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [W3C TraceContext specification]: https://www.w3.org/TR/trace-context/#sampled-flag","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313571,"byte_end":313658,"line_start":39,"line_end":39,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313765,"byte_end":313768,"line_start":43,"line_end":43,"column_start":18,"column_end":21},"name":"new","qualname":"<TraceFlags>::new","value":"pub const fn new(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct new trace flags\n","sig":null,"attributes":[{"value":"/ Construct new trace flags","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313718,"byte_end":313747,"line_start":42,"line_end":42,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313886,"byte_end":313896,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"is_sampled","qualname":"<TraceFlags>::is_sampled","value":"pub fn is_sampled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `sampled` flag is set\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `sampled` flag is set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313827,"byte_end":313874,"line_start":47,"line_end":47,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314064,"byte_end":314076,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"with_sampled","qualname":"<TraceFlags>::with_sampled","value":"pub fn with_sampled(&Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns copy of the current flags with the `sampled` flag set.\n","sig":null,"attributes":[{"value":"/ Returns copy of the current flags with the `sampled` flag set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313986,"byte_end":314052,"line_start":52,"line_end":52,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314292,"byte_end":314297,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<TraceFlags>::to_u8","value":"pub fn to_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the flags as a `u8`\n","sig":null,"attributes":[{"value":"/ Returns the flags as a `u8`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314249,"byte_end":314280,"line_start":61,"line_end":61,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2915},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315179,"byte_end":315186,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"TraceId","qualname":"::trace::span_context::TraceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" TraceId is an 16-byte value which uniquely identifies a given trace\n The actual `u128` value is wrapped in a tuple struct in order to leverage the newtype pattern\n","sig":null,"attributes":[{"value":"/ TraceId is an 16-byte value which uniquely identifies a given trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314880,"byte_end":314951,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/ The actual `u128` value is wrapped in a tuple struct in order to leverage the newtype pattern","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314952,"byte_end":315049,"line_start":98,"line_end":98,"column_start":1,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315275,"byte_end":315282,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"invalid","qualname":"<TraceId>::invalid","value":"pub fn invalid() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new invalid (zero-valued) TraceId\n","sig":null,"attributes":[{"value":"/ Construct a new invalid (zero-valued) TraceId","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315214,"byte_end":315263,"line_start":104,"line_end":104,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315369,"byte_end":315378,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"from_u128","qualname":"<TraceId>::from_u128","value":"pub fn from_u128(u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from u128 to TraceId\n","sig":null,"attributes":[{"value":"/ Convert from u128 to TraceId","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315325,"byte_end":315357,"line_start":109,"line_end":109,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315478,"byte_end":315485,"line_start":115,"line_end":115,"column_start":12,"column_end":19},"name":"to_u128","qualname":"<TraceId>::to_u128","value":"pub fn to_u128(Self) -> u128","parent":null,"children":[],"decl_id":null,"docs":" Convert from TraceId to u128\n","sig":null,"attributes":[{"value":"/ Convert from TraceId to u128","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315434,"byte_end":315466,"line_start":114,"line_end":114,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315586,"byte_end":315592,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<TraceId>::to_hex","value":"pub fn to_hex(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert from TraceId to Hexadecimal String\n","sig":null,"attributes":[{"value":"/ Convert from TraceId to Hexadecimal String","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315528,"byte_end":315574,"line_start":119,"line_end":119,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315718,"byte_end":315731,"line_start":125,"line_end":125,"column_start":12,"column_end":25},"name":"to_byte_array","qualname":"<TraceId>::to_byte_array","value":"pub fn to_byte_array(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert from TraceId to Big-Endian byte array\n","sig":null,"attributes":[{"value":"/ Convert from TraceId to Big-Endian byte array","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315657,"byte_end":315706,"line_start":124,"line_end":124,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315855,"byte_end":315863,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"from_hex","qualname":"<TraceId>::from_hex","value":"pub fn from_hex(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new TraceId from Hexadecimal String\n","sig":null,"attributes":[{"value":"/ Construct a new TraceId from Hexadecimal String","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315792,"byte_end":315843,"line_start":129,"line_end":129,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316022,"byte_end":316037,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"from_byte_array","qualname":"<TraceId>::from_byte_array","value":"pub fn from_byte_array([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new TraceId from Big-Endian byte array\n","sig":null,"attributes":[{"value":"/ Construct a new TraceId from Big-Endian byte array","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315956,"byte_end":316010,"line_start":134,"line_end":134,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316438,"byte_end":316444,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"SpanId","qualname":"::trace::span_context::SpanId","value":"","parent":null,"children":[],"decl_id":null,"docs":" SpanId is an 8-byte value which uniquely identifies a given span within a trace\n The actual `u64` value is wrapped in a tuple struct in order to leverage the newtype pattern\n","sig":null,"attributes":[{"value":"/ SpanId is an 8-byte value which uniquely identifies a given span within a trace","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316128,"byte_end":316211,"line_start":140,"line_end":140,"column_start":1,"column_end":84}},{"value":"/ The actual `u64` value is wrapped in a tuple struct in order to leverage the newtype pattern","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316212,"byte_end":316308,"line_start":141,"line_end":141,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316530,"byte_end":316537,"line_start":148,"line_end":148,"column_start":12,"column_end":19},"name":"invalid","qualname":"<SpanId>::invalid","value":"pub fn invalid() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new invalid (zero-valued) SpanId\n","sig":null,"attributes":[{"value":"/ Construct a new invalid (zero-valued) SpanId","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316470,"byte_end":316518,"line_start":147,"line_end":147,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316621,"byte_end":316629,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"from_u64","qualname":"<SpanId>::from_u64","value":"pub fn from_u64(u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from u64 to SpanId\n","sig":null,"attributes":[{"value":"/ Convert from u64 to SpanId","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316579,"byte_end":316609,"line_start":152,"line_end":152,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316725,"byte_end":316731,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<SpanId>::to_u64","value":"pub fn to_u64(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Convert from SpanId to u64\n","sig":null,"attributes":[{"value":"/ Convert from SpanId to u64","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316683,"byte_end":316713,"line_start":157,"line_end":157,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316830,"byte_end":316836,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<SpanId>::to_hex","value":"pub fn to_hex(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Convert from SpanId to Hexadecimal String\n","sig":null,"attributes":[{"value":"/ Convert from SpanId to Hexadecimal String","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316773,"byte_end":316818,"line_start":162,"line_end":162,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316961,"byte_end":316974,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"to_byte_array","qualname":"<SpanId>::to_byte_array","value":"pub fn to_byte_array(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Convert from SpanId to Big-Endian byte array\n","sig":null,"attributes":[{"value":"/ Convert from SpanId to Big-Endian byte array","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316901,"byte_end":316949,"line_start":167,"line_end":167,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317096,"byte_end":317104,"line_start":173,"line_end":173,"column_start":12,"column_end":20},"name":"from_hex","qualname":"<SpanId>::from_hex","value":"pub fn from_hex(&str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new SpanId from Hexadecimal String\n","sig":null,"attributes":[{"value":"/ Construct a new SpanId from Hexadecimal String","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317034,"byte_end":317084,"line_start":172,"line_end":172,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317260,"byte_end":317275,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"from_byte_array","qualname":"<SpanId>::from_byte_array","value":"pub fn from_byte_array([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new SpanId from Big-Endian byte array\n","sig":null,"attributes":[{"value":"/ Construct a new SpanId from Big-Endian byte array","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317195,"byte_end":317248,"line_start":177,"line_end":177,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317838,"byte_end":317848,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"TraceState","qualname":"::trace::span_context::TraceState","value":"","parent":null,"children":[],"decl_id":null,"docs":" TraceState carries system-specific configuration data, represented as a list\n of key-value pairs. TraceState allows multiple tracing systems to\n participate in the same trace.","sig":null,"attributes":[{"value":"/ TraceState carries system-specific configuration data, represented as a list","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317363,"byte_end":317443,"line_start":183,"line_end":183,"column_start":1,"column_end":81}},{"value":"/ of key-value pairs. TraceState allows multiple tracing systems to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317444,"byte_end":317513,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/ participate in the same trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317514,"byte_end":317548,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317549,"byte_end":317552,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ Please review the [W3C specification] for details on this field.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317553,"byte_end":317621,"line_start":187,"line_end":187,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317622,"byte_end":317625,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ [W3C specification]: https://www.w3.org/TR/trace-context/#tracestate-header","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317626,"byte_end":317705,"line_start":189,"line_end":189,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319874,"byte_end":319888,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"from_key_value","qualname":"<TraceState>::from_key_value","value":"pub fn from_key_value<T, K, V>(T) -> Result<Self, TraceStateError> where\nT: IntoIterator<Item = (K, V)>, K: ToString, V: ToString","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TraceState` from the given key-value collection.","sig":null,"attributes":[{"value":"/ Creates a new `TraceState` from the given key-value collection.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319372,"byte_end":319439,"line_start":238,"line_end":238,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319444,"byte_end":319447,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319452,"byte_end":319466,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319471,"byte_end":319474,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319479,"byte_end":319486,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::trace::{TraceState, TraceStateError};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319491,"byte_end":319551,"line_start":243,"line_end":243,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319556,"byte_end":319559,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let kvs = vec![(\"foo\", \"bar\"), (\"apple\", \"banana\")];","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319564,"byte_end":319620,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ let trace_state: Result<TraceState, TraceStateError> = TraceState::from_key_value(kvs);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319625,"byte_end":319716,"line_start":246,"line_end":246,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319721,"byte_end":319724,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert!(trace_state.is_ok());","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319729,"byte_end":319762,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(trace_state.unwrap().header(), String::from(\"foo=bar,apple=banana\"))","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319767,"byte_end":319850,"line_start":249,"line_end":249,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":319855,"byte_end":319862,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":320863,"byte_end":320866,"line_start":280,"line_end":280,"column_start":12,"column_end":15},"name":"get","qualname":"<TraceState>::get","value":"pub fn get(&Self, &str) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a value for a given key from the `TraceState` if it exists.\n","sig":null,"attributes":[{"value":"/ Retrieves a value for a given key from the `TraceState` if it exists.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":320778,"byte_end":320851,"line_start":279,"line_end":279,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321603,"byte_end":321609,"line_start":298,"line_end":298,"column_start":12,"column_end":18},"name":"insert","qualname":"<TraceState>::insert","value":"pub fn insert<K, V>(&Self, K, V) -> Result<TraceState, TraceStateError> where\nK: Into<String>, V: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given key-value pair into the `TraceState`. If a value already exists for the\n given key, this updates the value and updates the value's position. If the key or value are\n invalid per the [W3 Spec] an `Err` is returned, else a new `TraceState` with the\n updated key/value is returned.","sig":null,"attributes":[{"value":"/ Inserts the given key-value pair into the `TraceState`. If a value already exists for the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321176,"byte_end":321269,"line_start":292,"line_end":292,"column_start":5,"column_end":98}},{"value":"/ given key, this updates the value and updates the value's position. If the key or value are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321274,"byte_end":321369,"line_start":293,"line_end":293,"column_start":5,"column_end":100}},{"value":"/ invalid per the [W3 Spec] an `Err` is returned, else a new `TraceState` with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321374,"byte_end":321458,"line_start":294,"line_end":294,"column_start":5,"column_end":89}},{"value":"/ updated key/value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321463,"byte_end":321497,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321502,"byte_end":321505,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [W3 Spec]: https://www.w3.org/TR/trace-context/#mutating-the-tracestate-field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":321510,"byte_end":321591,"line_start":297,"line_end":297,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322673,"byte_end":322679,"line_start":326,"line_end":326,"column_start":12,"column_end":18},"name":"delete","qualname":"<TraceState>::delete","value":"pub fn delete<K: Into<String>>(&Self, K)\n-> Result<TraceState, TraceStateError>","parent":null,"children":[],"decl_id":null,"docs":" Removes the given key-value pair from the `TraceState`. If the key is invalid per the\n [W3 Spec] an `Err` is returned. Else, a new `TraceState`\n with the removed entry is returned.","sig":null,"attributes":[{"value":"/ Removes the given key-value pair from the `TraceState`. If the key is invalid per the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322263,"byte_end":322352,"line_start":319,"line_end":319,"column_start":5,"column_end":94}},{"value":"/ [W3 Spec] an `Err` is returned. Else, a new `TraceState`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322357,"byte_end":322417,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ with the removed entry is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322422,"byte_end":322461,"line_start":321,"line_end":321,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322466,"byte_end":322469,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ If the key is not in `TraceState`. The original `TraceState` will be cloned and returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322474,"byte_end":322567,"line_start":323,"line_end":323,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322572,"byte_end":322575,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [W3 Spec]: https://www.w3.org/TR/trace-context/#mutating-the-tracestate-field","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":322580,"byte_end":322661,"line_start":325,"line_end":325,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":323451,"byte_end":323457,"line_start":348,"line_end":348,"column_start":12,"column_end":18},"name":"header","qualname":"<TraceState>::header","value":"pub fn header(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TraceState` header string, delimiting each key and value with a `=` and each\n entry with a `,`.\n","sig":null,"attributes":[{"value":"/ Creates a new `TraceState` header string, delimiting each key and value with a `=` and each","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":323318,"byte_end":323413,"line_start":346,"line_end":346,"column_start":5,"column_end":100}},{"value":"/ entry with a `,`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":323418,"byte_end":323439,"line_start":347,"line_end":347,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":323641,"byte_end":323657,"line_start":353,"line_end":353,"column_start":12,"column_end":28},"name":"header_delimited","qualname":"<TraceState>::header_delimited","value":"pub fn header_delimited(&Self, &str, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TraceState` header string, with the given key/value delimiter and entry delimiter.\n","sig":null,"attributes":[{"value":"/ Creates a new `TraceState` header string, with the given key/value delimiter and entry delimiter.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":323528,"byte_end":323629,"line_start":352,"line_end":352,"column_start":5,"column_end":106}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2983},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325198,"byte_end":325208,"line_start":394,"line_end":394,"column_start":5,"column_end":15},"name":"InvalidKey","qualname":"::trace::span_context::TraceStateError::InvalidKey","value":"TraceStateError::InvalidKey(String)","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" The key is invalid. See <https://www.w3.org/TR/trace-context/#key> for requirement for keys.\n","sig":null,"attributes":[{"value":"/ The key is invalid. See <https://www.w3.org/TR/trace-context/#key> for requirement for keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324981,"byte_end":325077,"line_start":392,"line_end":392,"column_start":5,"column_end":101}},{"value":"error(\"{0} is not a valid key in TraceState, see https://www.w3.org/TR/trace-context/#key for more details\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325082,"byte_end":325193,"line_start":393,"line_end":393,"column_start":5,"column_end":116}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325450,"byte_end":325462,"line_start":398,"line_end":398,"column_start":5,"column_end":17},"name":"InvalidValue","qualname":"::trace::span_context::TraceStateError::InvalidValue","value":"TraceStateError::InvalidValue(String)","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" The value is invalid. See <https://www.w3.org/TR/trace-context/#value> for requirement for values.\n","sig":null,"attributes":[{"value":"/ The value is invalid. See <https://www.w3.org/TR/trace-context/#value> for requirement for values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325223,"byte_end":325325,"line_start":396,"line_end":396,"column_start":5,"column_end":107}},{"value":"error(\"{0} is not a valid value in TraceState, see https://www.w3.org/TR/trace-context/#value for more details\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325330,"byte_end":325445,"line_start":397,"line_end":397,"column_start":5,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2989},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325714,"byte_end":325725,"line_start":402,"line_end":402,"column_start":5,"column_end":16},"name":"InvalidList","qualname":"::trace::span_context::TraceStateError::InvalidList","value":"TraceStateError::InvalidList(String)","parent":{"krate":0,"index":2970},"children":[],"decl_id":null,"docs":" The value is invalid. See <https://www.w3.org/TR/trace-context/#list> for requirement for list members.\n","sig":null,"attributes":[{"value":"/ The value is invalid. See <https://www.w3.org/TR/trace-context/#list> for requirement for list members.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325477,"byte_end":325584,"line_start":400,"line_end":400,"column_start":5,"column_end":112}},{"value":"error(\"{0} is not a valid list member in TraceState, see https://www.w3.org/TR/trace-context/#list for more details\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325589,"byte_end":325709,"line_start":401,"line_end":401,"column_start":5,"column_end":125}}]},{"kind":"Enum","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324959,"byte_end":324974,"line_start":391,"line_end":391,"column_start":10,"column_end":25},"name":"TraceStateError","qualname":"::trace::span_context::TraceStateError","value":"pub enum TraceStateError {\n    InvalidKey(String),\n    InvalidValue(String),\n    InvalidList(String),\n}","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":2989}],"decl_id":null,"docs":" Error returned by `TraceState` operations.\n","sig":null,"attributes":[{"value":"/ Error returned by `TraceState` operations.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324861,"byte_end":324907,"line_start":388,"line_end":388,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324932,"byte_end":324949,"line_start":390,"line_end":390,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326056,"byte_end":326067,"line_start":411,"line_end":411,"column_start":12,"column_end":23},"name":"SpanContext","qualname":"::trace::span_context::SpanContext","value":"SpanContext {  }","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997}],"decl_id":null,"docs":" Immutable portion of a `Span` which can be serialized and propagated.","sig":null,"attributes":[{"value":"/ Immutable portion of a `Span` which can be serialized and propagated.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325738,"byte_end":325811,"line_start":405,"line_end":405,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325812,"byte_end":325815,"line_start":406,"line_end":406,"column_start":1,"column_end":4}},{"value":"/ Spans that do not have the `sampled` flag set in their [`TraceFlags`] will","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325816,"byte_end":325894,"line_start":407,"line_end":407,"column_start":1,"column_end":79}},{"value":"/ be ignored by most tracing tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":325895,"byte_end":325932,"line_start":408,"line_end":408,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326271,"byte_end":326284,"line_start":421,"line_end":421,"column_start":12,"column_end":25},"name":"empty_context","qualname":"<SpanContext>::empty_context","value":"pub fn empty_context() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an invalid empty span context\n","sig":null,"attributes":[{"value":"/ Create an invalid empty span context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326219,"byte_end":326259,"line_start":420,"line_end":420,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326541,"byte_end":326544,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"new","qualname":"<SpanContext>::new","value":"pub fn new(TraceId, SpanId, TraceFlags, bool, TraceState) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SpanContext`\n","sig":null,"attributes":[{"value":"/ Construct a new `SpanContext`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326496,"byte_end":326529,"line_start":431,"line_end":431,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326926,"byte_end":326934,"line_start":449,"line_end":449,"column_start":12,"column_end":20},"name":"trace_id","qualname":"<SpanContext>::trace_id","value":"pub fn trace_id(&Self) -> TraceId","parent":null,"children":[],"decl_id":null,"docs":" A valid trace identifier is a non-zero `u128`.\n","sig":null,"attributes":[{"value":"/ A valid trace identifier is a non-zero `u128`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326864,"byte_end":326914,"line_start":448,"line_end":448,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327048,"byte_end":327055,"line_start":454,"line_end":454,"column_start":12,"column_end":19},"name":"span_id","qualname":"<SpanContext>::span_id","value":"pub fn span_id(&Self) -> SpanId","parent":null,"children":[],"decl_id":null,"docs":" A valid span identifier is a non-zero `u64`.\n","sig":null,"attributes":[{"value":"/ A valid span identifier is a non-zero `u64`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326988,"byte_end":327036,"line_start":453,"line_end":453,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327278,"byte_end":327289,"line_start":460,"line_end":460,"column_start":12,"column_end":23},"name":"trace_flags","qualname":"<SpanContext>::trace_flags","value":"pub fn trace_flags(&Self) -> TraceFlags","parent":null,"children":[],"decl_id":null,"docs":" Returns details about the trace. Unlike `TraceState` values, these are\n present in all traces. Currently, the only option is a boolean sampled flag.\n","sig":null,"attributes":[{"value":"/ Returns details about the trace. Unlike `TraceState` values, these are","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327107,"byte_end":327181,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"/ present in all traces. Currently, the only option is a boolean sampled flag.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327186,"byte_end":327266,"line_start":459,"line_end":459,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327495,"byte_end":327503,"line_start":466,"line_end":466,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<SpanContext>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns a bool flag which is true if the `SpanContext` has a valid (non-zero) `trace_id`\n and a valid (non-zero) `span_id`.\n","sig":null,"attributes":[{"value":"/ Returns a bool flag which is true if the `SpanContext` has a valid (non-zero) `trace_id`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327349,"byte_end":327441,"line_start":464,"line_end":464,"column_start":5,"column_end":97}},{"value":"/ and a valid (non-zero) `span_id`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327446,"byte_end":327483,"line_start":465,"line_end":465,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327670,"byte_end":327679,"line_start":471,"line_end":471,"column_start":12,"column_end":21},"name":"is_remote","qualname":"<SpanContext>::is_remote","value":"pub fn is_remote(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `SpanContext` was propagated from a remote parent.\n","sig":null,"attributes":[{"value":"/ Returns true if the `SpanContext` was propagated from a remote parent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327584,"byte_end":327658,"line_start":470,"line_end":470,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327879,"byte_end":327889,"line_start":478,"line_end":478,"column_start":12,"column_end":22},"name":"is_sampled","qualname":"<SpanContext>::is_sampled","value":"pub fn is_sampled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `sampled` trace flag is set.","sig":null,"attributes":[{"value":"/ Returns `true` if the `sampled` trace flag is set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327731,"byte_end":327785,"line_start":475,"line_end":475,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327790,"byte_end":327793,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Spans that are not sampled will be ignored by most tracing tools.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327798,"byte_end":327867,"line_start":477,"line_end":477,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":328007,"byte_end":328018,"line_start":483,"line_end":483,"column_start":12,"column_end":23},"name":"trace_state","qualname":"<SpanContext>::trace_state","value":"pub fn trace_state(&Self) -> &TraceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the context's `TraceState`.\n","sig":null,"attributes":[{"value":"/ Returns the context's `TraceState`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":327956,"byte_end":327995,"line_start":482,"line_end":482,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336920,"byte_end":336926,"line_start":159,"line_end":159,"column_start":11,"column_end":17},"name":"Tracer","qualname":"::trace::tracer::Tracer","value":"Tracer: fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1967}],"decl_id":null,"docs":" Interface for constructing `Span`s.","sig":null,"attributes":[{"value":"/ Interface for constructing `Span`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331810,"byte_end":331849,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331850,"byte_end":331853,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The OpenTelemetry library achieves in-process context propagation of `Span`s","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331854,"byte_end":331934,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ by way of the `Tracer`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331935,"byte_end":331962,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331963,"byte_end":331966,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `Tracer` is responsible for tracking the currently active `Span`, and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":331967,"byte_end":332044,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ exposes methods for creating and activating new `Spans`. The `Tracer` is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332045,"byte_end":332121,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ configured with `Propagators` which support transferring span context across","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332122,"byte_end":332202,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ process boundaries.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332203,"byte_end":332226,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332227,"byte_end":332230,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Tracer`s are generally expected to be used as singletons. Implementations","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332231,"byte_end":332309,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ SHOULD provide a single global default Tracer.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332310,"byte_end":332360,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332361,"byte_end":332364,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Some applications may require multiple `Tracer` instances, e.g. to create","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332365,"byte_end":332442,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ `Span`s on behalf of other applications. Implementations MAY provide a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332443,"byte_end":332517,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ global registry of Tracers for such applications.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332518,"byte_end":332571,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332572,"byte_end":332575,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The `Tracer` SHOULD allow end users to configure other tracing components","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332576,"byte_end":332653,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ that control how `Span`s are passed across process boundaries, including the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332654,"byte_end":332734,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ binary and text format `Propagator`s used to serialize `Span`s created by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332735,"byte_end":332812,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ the `Tracer`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332813,"byte_end":332830,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332831,"byte_end":332834,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## In Synchronous Code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332835,"byte_end":332861,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332862,"byte_end":332865,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Spans can be created and nested manually:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332866,"byte_end":332911,"line_start":34,"line_end":34,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332912,"byte_end":332915,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332916,"byte_end":332923,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer, TraceContextExt}, Context};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":332924,"byte_end":333005,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333006,"byte_end":333009,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let tracer = global::tracer(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333010,"byte_end":333058,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333059,"byte_end":333062,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let parent = tracer.start(\"foo\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333063,"byte_end":333100,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ let parent_cx = Context::current_with_span(parent);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333101,"byte_end":333156,"line_start":42,"line_end":42,"column_start":1,"column_end":56}},{"value":"/ let mut child = tracer.span_builder(\"bar\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333157,"byte_end":333203,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/     .with_parent_context(parent_cx.clone())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333204,"byte_end":333251,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/     .start(&tracer);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333252,"byte_end":333276,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333277,"byte_end":333280,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333281,"byte_end":333291,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333292,"byte_end":333295,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ child.end();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333296,"byte_end":333312,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ drop(parent_cx) // end parent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333313,"byte_end":333346,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333347,"byte_end":333354,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333355,"byte_end":333358,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Spans can also use the current thread's [`Context`] to track which span is active:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333359,"byte_end":333445,"line_start":53,"line_end":53,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333446,"byte_end":333449,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333450,"byte_end":333457,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{SpanKind, Tracer}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333458,"byte_end":333517,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333518,"byte_end":333521,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let tracer = global::tracer(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333522,"byte_end":333570,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333571,"byte_end":333574,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Create simple spans with `in_span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333575,"byte_end":333616,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ tracer.in_span(\"foo\", |_foo_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333617,"byte_end":333654,"line_start":61,"line_end":61,"column_start":1,"column_end":38}},{"value":"/     // parent span is active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333655,"byte_end":333687,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/     tracer.in_span(\"bar\", |_bar_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333688,"byte_end":333729,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/         // child span is now the active span and associated with the parent span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333730,"byte_end":333814,"line_start":64,"line_end":64,"column_start":1,"column_end":85}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333815,"byte_end":333826,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/     // child has ended, parent now the active span again","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333827,"byte_end":333887,"line_start":66,"line_end":66,"column_start":1,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333888,"byte_end":333895,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ // parent has ended, no active spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333896,"byte_end":333936,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333937,"byte_end":333940,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // -- OR --","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333941,"byte_end":333956,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333957,"byte_end":333960,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ // create complex spans with span builder and `with_span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":333961,"byte_end":334022,"line_start":72,"line_end":72,"column_start":1,"column_end":62}},{"value":"/ let parent_span = tracer.span_builder(\"foo\").with_kind(SpanKind::Server).start(&tracer);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334023,"byte_end":334115,"line_start":73,"line_end":73,"column_start":1,"column_end":93}},{"value":"/ tracer.with_span(parent_span, |_foo_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334116,"byte_end":334161,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/     // parent span is active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334162,"byte_end":334194,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/     let child_span = tracer.span_builder(\"bar\").with_kind(SpanKind::Client).start(&tracer);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334195,"byte_end":334290,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/     tracer.with_span(child_span, |_bar_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334291,"byte_end":334339,"line_start":77,"line_end":77,"column_start":1,"column_end":49}},{"value":"/         // child span is now the active span and associated with the parent span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334340,"byte_end":334424,"line_start":78,"line_end":78,"column_start":1,"column_end":85}},{"value":"/     });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334425,"byte_end":334436,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/     // child has ended, parent now the active span again","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334437,"byte_end":334497,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334498,"byte_end":334505,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ // parent has ended, no active spans","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334506,"byte_end":334546,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334547,"byte_end":334554,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334555,"byte_end":334558,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Spans can also be marked as active, and the resulting guard allows for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334559,"byte_end":334633,"line_start":85,"line_end":85,"column_start":1,"column_end":75}},{"value":"/ greater control over when the span is no longer considered active.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334634,"byte_end":334704,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334705,"byte_end":334708,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334709,"byte_end":334716,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer, mark_span_as_active}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334717,"byte_end":334793,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ let tracer = global::tracer(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334794,"byte_end":334842,"line_start":90,"line_end":90,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334843,"byte_end":334846,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ let parent_span = tracer.start(\"foo\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334847,"byte_end":334889,"line_start":92,"line_end":92,"column_start":1,"column_end":43}},{"value":"/ let parent_active = mark_span_as_active(parent_span);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334890,"byte_end":334947,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334948,"byte_end":334951,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334952,"byte_end":334957,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/     let child = tracer.start(\"bar\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334958,"byte_end":334998,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/     let _child_active = mark_span_as_active(child);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":334999,"byte_end":335054,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335055,"byte_end":335058,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/     // do work in the context of the child span...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335059,"byte_end":335113,"line_start":99,"line_end":99,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335114,"byte_end":335117,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/     // exiting the scope drops the guard, child is no longer active","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335118,"byte_end":335189,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335190,"byte_end":335195,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ // Parent is active span again","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335196,"byte_end":335230,"line_start":103,"line_end":103,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335231,"byte_end":335234,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ // Parent can be dropped manually, or allowed to go out of scope as well.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335235,"byte_end":335312,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/ drop(parent_active);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335313,"byte_end":335337,"line_start":106,"line_end":106,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335338,"byte_end":335341,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ // no active span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335342,"byte_end":335363,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335364,"byte_end":335371,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335372,"byte_end":335375,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ## In Asynchronous Code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335376,"byte_end":335403,"line_start":111,"line_end":111,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335404,"byte_end":335407,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ If you are instrumenting code that make use of [`std::future::Future`] or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335408,"byte_end":335485,"line_start":113,"line_end":113,"column_start":1,"column_end":78}},{"value":"/ async/await, be sure to use the [`FutureExt`] trait. This is needed because","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335486,"byte_end":335565,"line_start":114,"line_end":114,"column_start":1,"column_end":80}},{"value":"/ the following example _will not_ work:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335566,"byte_end":335608,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335609,"byte_end":335612,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335613,"byte_end":335626,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/ # use opentelemetry::{global, trace::{Tracer, mark_span_as_active}};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335627,"byte_end":335699,"line_start":118,"line_end":118,"column_start":1,"column_end":73}},{"value":"/ # let tracer = global::tracer(\"foo\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335700,"byte_end":335741,"line_start":119,"line_end":119,"column_start":1,"column_end":42}},{"value":"/ # let span = tracer.start(\"foo-span\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335742,"byte_end":335784,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ async {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335785,"byte_end":335796,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/     // Does not work","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335797,"byte_end":335821,"line_start":122,"line_end":122,"column_start":1,"column_end":25}},{"value":"/     let _g = mark_span_as_active(span);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335822,"byte_end":335865,"line_start":123,"line_end":123,"column_start":1,"column_end":44}},{"value":"/     // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335866,"byte_end":335880,"line_start":124,"line_end":124,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335881,"byte_end":335887,"line_start":125,"line_end":125,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335888,"byte_end":335895,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335896,"byte_end":335899,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ The context guard `_g` will not exit until the future generated by the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335900,"byte_end":335974,"line_start":128,"line_end":128,"column_start":1,"column_end":75}},{"value":"/ `async` block is complete. Since futures can be entered and exited","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":335975,"byte_end":336045,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/ _multiple_ times without them completing, the span remains active for as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336046,"byte_end":336122,"line_start":130,"line_end":130,"column_start":1,"column_end":77}},{"value":"/ long as the future exists, rather than only when it is polled, leading to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336123,"byte_end":336200,"line_start":131,"line_end":131,"column_start":1,"column_end":78}},{"value":"/ very confusing and incorrect output.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336201,"byte_end":336241,"line_start":132,"line_end":132,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336242,"byte_end":336245,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ In order to trace asynchronous code, the [`Future::with_context`] combinator","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336246,"byte_end":336326,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ can be used:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336327,"byte_end":336343,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336344,"byte_end":336347,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336348,"byte_end":336355,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # async fn run() -> Result<(), ()> {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336356,"byte_end":336396,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/ use opentelemetry::{trace::FutureExt, Context};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336397,"byte_end":336448,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/ let cx = Context::current();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336449,"byte_end":336481,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336482,"byte_end":336485,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let my_future = async {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336486,"byte_end":336513,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"/     // ...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336514,"byte_end":336528,"line_start":143,"line_end":143,"column_start":1,"column_end":15}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336529,"byte_end":336535,"line_start":144,"line_end":144,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336536,"byte_end":336539,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ my_future","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336540,"byte_end":336553,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     .with_context(cx)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336554,"byte_end":336579,"line_start":147,"line_end":147,"column_start":1,"column_end":26}},{"value":"/     .await;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336580,"byte_end":336595,"line_start":148,"line_end":148,"column_start":1,"column_end":16}},{"value":"/ # Ok(())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336596,"byte_end":336608,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336609,"byte_end":336616,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336617,"byte_end":336624,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336625,"byte_end":336628,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ [`Future::with_context`] attaches a context to the future, ensuring that the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336629,"byte_end":336709,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ context's lifetime is as long as the future's.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336710,"byte_end":336760,"line_start":154,"line_end":154,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336761,"byte_end":336764,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`FutureExt`]: crate::trace::FutureExt","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336765,"byte_end":336807,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ [`Future::with_context`]: crate::trace::FutureExt::with_context()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336808,"byte_end":336877,"line_start":157,"line_end":157,"column_start":1,"column_end":70}},{"value":"/ [`Context`]: crate::Context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336878,"byte_end":336909,"line_start":158,"line_end":158,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337007,"byte_end":337011,"line_start":161,"line_end":161,"column_start":10,"column_end":14},"name":"Span","qualname":"::trace::tracer::Tracer::Span","value":"type Span: Span + Send + Sync;","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" The `Span` type used by this `Tracer`.\n","sig":null,"attributes":[{"value":"/ The `Span` type used by this `Tracer`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336955,"byte_end":336997,"line_start":160,"line_end":160,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337202,"byte_end":337209,"line_start":165,"line_end":165,"column_start":8,"column_end":15},"name":"invalid","qualname":"::trace::tracer::Tracer::invalid","value":"pub fn invalid(&Self) -> Self::Span","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Returns a span with an invalid `SpanContext`. Used by functions that\n need to return a default span like `get_active_span` if no span is present.\n","sig":null,"attributes":[{"value":"/ Returns a span with an invalid `SpanContext`. Used by functions that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337038,"byte_end":337110,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ need to return a default span like `get_active_span` if no span is present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337115,"byte_end":337194,"line_start":164,"line_end":164,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338623,"byte_end":338628,"line_start":190,"line_end":190,"column_start":8,"column_end":13},"name":"start","qualname":"::trace::tracer::Tracer::start","value":"pub fn start<T>(&Self, T) -> Self::Span where T: Into<Cow>","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Starts a new `Span`.","sig":null,"attributes":[{"value":"/ Starts a new `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337237,"byte_end":337261,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337266,"byte_end":337269,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ By default the currently active `Span` is set as the new `Span`'s","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337274,"byte_end":337343,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ parent. The `Tracer` MAY provide other default options for newly","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337348,"byte_end":337416,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ created `Span`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337421,"byte_end":337441,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337446,"byte_end":337449,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ `Span` creation MUST NOT set the newly created `Span` as the currently","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337454,"byte_end":337528,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ active `Span` by default, but this functionality MAY be offered additionally","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337533,"byte_end":337613,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ as a separate operation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337618,"byte_end":337646,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337651,"byte_end":337654,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Each span has zero or one parent spans and zero or more child spans, which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337659,"byte_end":337737,"line_start":177,"line_end":177,"column_start":5,"column_end":83}},{"value":"/ represent causally related operations. A tree of related spans comprises a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337742,"byte_end":337820,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ trace. A span is said to be a _root span_ if it does not have a parent. Each","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337825,"byte_end":337905,"line_start":179,"line_end":179,"column_start":5,"column_end":85}},{"value":"/ trace includes a single root span, which is the shared ancestor of all other","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337910,"byte_end":337990,"line_start":180,"line_end":180,"column_start":5,"column_end":85}},{"value":"/ spans in the trace. Implementations MUST provide an option to create a `Span` as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":337995,"byte_end":338079,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ a root span, and MUST generate a new `TraceId` for each root span created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338084,"byte_end":338162,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ For a Span with a parent, the `TraceId` MUST be the same as the parent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338167,"byte_end":338242,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ Also, the child span MUST inherit all `TraceState` values of its parent by default.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338247,"byte_end":338334,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338339,"byte_end":338342,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ A `Span` is said to have a _remote parent_ if it is the child of a `Span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338347,"byte_end":338424,"line_start":186,"line_end":186,"column_start":5,"column_end":82}},{"value":"/ created in another process. Each propagators' deserialization must set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338429,"byte_end":338503,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ `is_remote` to true on a parent `SpanContext` so `Span` creation knows if the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338508,"byte_end":338589,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/ parent is remote.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338594,"byte_end":338615,"line_start":189,"line_end":189,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340189,"byte_end":340207,"line_start":220,"line_end":220,"column_start":8,"column_end":26},"name":"start_with_context","qualname":"::trace::tracer::Tracer::start_with_context","value":"pub fn start_with_context<T>(&Self, T, Context) -> Self::Span where\nT: Into<Cow>","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Starts a new `Span` with a given context","sig":null,"attributes":[{"value":"/ Starts a new `Span` with a given context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338783,"byte_end":338827,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338832,"byte_end":338835,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ By default the currently active `Span` is set as the new `Span`'s","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338840,"byte_end":338909,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/ parent. The `Tracer` MAY provide other default options for newly","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338914,"byte_end":338982,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ created `Span`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":338987,"byte_end":339007,"line_start":201,"line_end":201,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339012,"byte_end":339015,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ `Span` creation MUST NOT set the newly created `Span` as the currently","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339020,"byte_end":339094,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ active `Span` by default, but this functionality MAY be offered additionally","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339099,"byte_end":339179,"line_start":204,"line_end":204,"column_start":5,"column_end":85}},{"value":"/ as a separate operation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339184,"byte_end":339212,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339217,"byte_end":339220,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Each span has zero or one parent spans and zero or more child spans, which","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339225,"byte_end":339303,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ represent causally related operations. A tree of related spans comprises a","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339308,"byte_end":339386,"line_start":208,"line_end":208,"column_start":5,"column_end":83}},{"value":"/ trace. A span is said to be a _root span_ if it does not have a parent. Each","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339391,"byte_end":339471,"line_start":209,"line_end":209,"column_start":5,"column_end":85}},{"value":"/ trace includes a single root span, which is the shared ancestor of all other","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339476,"byte_end":339556,"line_start":210,"line_end":210,"column_start":5,"column_end":85}},{"value":"/ spans in the trace. Implementations MUST provide an option to create a `Span` as","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339561,"byte_end":339645,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ a root span, and MUST generate a new `TraceId` for each root span created.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339650,"byte_end":339728,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"/ For a Span with a parent, the `TraceId` MUST be the same as the parent.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339733,"byte_end":339808,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ Also, the child span MUST inherit all `TraceState` values of its parent by default.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339813,"byte_end":339900,"line_start":214,"line_end":214,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339905,"byte_end":339908,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ A `Span` is said to have a _remote parent_ if it is the child of a `Span`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339913,"byte_end":339990,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ created in another process. Each propagators' deserialization must set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":339995,"byte_end":340069,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ `is_remote` to true on a parent `SpanContext` so `Span` creation knows if the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340074,"byte_end":340155,"line_start":218,"line_end":218,"column_start":5,"column_end":86}},{"value":"/ parent is remote.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340160,"byte_end":340181,"line_start":219,"line_end":219,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340439,"byte_end":340451,"line_start":227,"line_end":227,"column_start":8,"column_end":20},"name":"span_builder","qualname":"::trace::tracer::Tracer::span_builder","value":"pub fn span_builder<T>(&Self, T) -> SpanBuilder where T: Into<Cow>","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Creates a span builder","sig":null,"attributes":[{"value":"/ Creates a span builder","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340310,"byte_end":340336,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340341,"byte_end":340344,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ An ergonomic way for attributes to be configured before the `Span` is started.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340349,"byte_end":340431,"line_start":226,"line_end":226,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340583,"byte_end":340588,"line_start":232,"line_end":232,"column_start":8,"column_end":13},"name":"build","qualname":"::trace::tracer::Tracer::build","value":"pub fn build(&Self, SpanBuilder) -> Self::Span","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Create a span from a `SpanBuilder`\n","sig":null,"attributes":[{"value":"/ Create a span from a `SpanBuilder`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340537,"byte_end":340575,"line_start":231,"line_end":231,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341658,"byte_end":341665,"line_start":261,"line_end":261,"column_start":8,"column_end":15},"name":"in_span","qualname":"::trace::tracer::Tracer::in_span","value":"pub fn in_span<T, F>(&Self, &'static str, F) -> T where F: FnOnce(Context) ->\nT, Self::Span: Send + Sync","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Start a new span and execute the given closure with reference to the span's\n context.","sig":null,"attributes":[{"value":"/ Start a new span and execute the given closure with reference to the span's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340638,"byte_end":340717,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340722,"byte_end":340734,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340739,"byte_end":340742,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ This method starts a new span and sets it as the active span for the given","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340747,"byte_end":340825,"line_start":237,"line_end":237,"column_start":5,"column_end":83}},{"value":"/ function. It then executes the body. It closes the span before returning the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340830,"byte_end":340910,"line_start":238,"line_end":238,"column_start":5,"column_end":85}},{"value":"/ execution result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340915,"byte_end":340936,"line_start":239,"line_end":239,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340941,"byte_end":340944,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340949,"byte_end":340963,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340968,"byte_end":340971,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340976,"byte_end":340983,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{global, trace::{Span, Tracer, get_active_span}, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":340988,"byte_end":341070,"line_start":244,"line_end":244,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341075,"byte_end":341078,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ fn my_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341083,"byte_end":341105,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/     // start an active span in one function","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341110,"byte_end":341157,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/     global::tracer(\"my-component\").in_span(\"span-name\", |_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341162,"byte_end":341229,"line_start":248,"line_end":248,"column_start":5,"column_end":72}},{"value":"/         // anything happening in functions we call can still access the active span...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341234,"byte_end":341324,"line_start":249,"line_end":249,"column_start":5,"column_end":95}},{"value":"/         my_other_function();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341329,"byte_end":341361,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341366,"byte_end":341376,"line_start":251,"line_end":251,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341381,"byte_end":341386,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341391,"byte_end":341394,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341399,"byte_end":341427,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/     // call methods on the current span from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341432,"byte_end":341480,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/     get_active_span(|span| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341485,"byte_end":341517,"line_start":256,"line_end":256,"column_start":5,"column_end":37}},{"value":"/         span.add_event(\"An event!\".to_string(), vec![KeyValue::new(\"happened\", true)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341522,"byte_end":341613,"line_start":257,"line_end":257,"column_start":5,"column_end":96}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341618,"byte_end":341628,"line_start":258,"line_end":258,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341633,"byte_end":341638,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341643,"byte_end":341650,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343215,"byte_end":343224,"line_start":302,"line_end":302,"column_start":8,"column_end":17},"name":"with_span","qualname":"::trace::tracer::Tracer::with_span","value":"pub fn with_span<T, F>(&Self, Self::Span, F) -> T where F: FnOnce(Context) ->\nT, Self::Span: Send + Sync","parent":{"krate":0,"index":1954},"children":[],"decl_id":null,"docs":" Start a new span and execute the given closure with reference to the span's\n context.","sig":null,"attributes":[{"value":"/ Start a new span and execute the given closure with reference to the span's","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":341947,"byte_end":342026,"line_start":272,"line_end":272,"column_start":5,"column_end":84}},{"value":"/ context.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342031,"byte_end":342043,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342048,"byte_end":342051,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This method starts a new span and sets it as the active span for the given","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342056,"byte_end":342134,"line_start":275,"line_end":275,"column_start":5,"column_end":83}},{"value":"/ function. It then executes the body. It closes the span before returning the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342139,"byte_end":342219,"line_start":276,"line_end":276,"column_start":5,"column_end":85}},{"value":"/ execution result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342224,"byte_end":342245,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342250,"byte_end":342253,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342258,"byte_end":342272,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342277,"byte_end":342280,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342285,"byte_end":342292,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{global, trace::{Span, SpanKind, Tracer, get_active_span}, KeyValue};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342297,"byte_end":342389,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342394,"byte_end":342397,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ fn my_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342402,"byte_end":342424,"line_start":284,"line_end":284,"column_start":5,"column_end":27}},{"value":"/     let tracer = global::tracer(\"my-component\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342429,"byte_end":342481,"line_start":285,"line_end":285,"column_start":5,"column_end":57}},{"value":"/     // start a span with custom attributes via span bulder","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342486,"byte_end":342548,"line_start":286,"line_end":286,"column_start":5,"column_end":67}},{"value":"/     let span = tracer.span_builder(\"span-name\").with_kind(SpanKind::Server).start(&tracer);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342553,"byte_end":342648,"line_start":287,"line_end":287,"column_start":5,"column_end":100}},{"value":"/     // Mark the span as active for the duration of the closure","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342653,"byte_end":342719,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/     global::tracer(\"my-component\").with_span(span, |_cx| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342724,"byte_end":342786,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/         // anything happening in functions we call can still access the active span...","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342791,"byte_end":342881,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/         my_other_function();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342886,"byte_end":342918,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342923,"byte_end":342933,"line_start":292,"line_end":292,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342938,"byte_end":342943,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342948,"byte_end":342951,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ fn my_other_function() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342956,"byte_end":342984,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/     // call methods on the current span from","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":342989,"byte_end":343037,"line_start":296,"line_end":296,"column_start":5,"column_end":53}},{"value":"/     get_active_span(|span| {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343042,"byte_end":343074,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/         span.add_event(\"An event!\".to_string(), vec![KeyValue::new(\"happened\", true)]);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343079,"byte_end":343170,"line_start":298,"line_end":298,"column_start":5,"column_end":96}},{"value":"/     })","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343175,"byte_end":343185,"line_start":299,"line_end":299,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343190,"byte_end":343195,"line_start":300,"line_end":300,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343200,"byte_end":343207,"line_start":301,"line_end":301,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344197,"byte_end":344208,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"SpanBuilder","qualname":"::trace::tracer::SpanBuilder","value":"SpanBuilder { parent_context, trace_id, span_id, span_kind, name, start_time, end_time, attributes, events, links, status_code, status_message, sampling_result }","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025}],"decl_id":null,"docs":" `SpanBuilder` allows span attributes to be configured before the span\n has started.","sig":null,"attributes":[{"value":"/ `SpanBuilder` allows span attributes to be configured before the span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343465,"byte_end":343538,"line_start":313,"line_end":313,"column_start":1,"column_end":74}},{"value":"/ has started.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343539,"byte_end":343555,"line_start":314,"line_end":314,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343556,"byte_end":343559,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343560,"byte_end":343567,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/ use opentelemetry::{","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343568,"byte_end":343592,"line_start":317,"line_end":317,"column_start":1,"column_end":25}},{"value":"/     global,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343593,"byte_end":343608,"line_start":318,"line_end":318,"column_start":1,"column_end":16}},{"value":"/     trace::{TracerProvider, SpanBuilder, SpanKind, Tracer},","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343609,"byte_end":343672,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343673,"byte_end":343679,"line_start":320,"line_end":320,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343680,"byte_end":343683,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ let tracer = global::tracer(\"example-tracer\");","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343684,"byte_end":343734,"line_start":322,"line_end":322,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343735,"byte_end":343738,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ // The builder can be used to create a span directly with the tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343739,"byte_end":343811,"line_start":324,"line_end":324,"column_start":1,"column_end":73}},{"value":"/ let _span = tracer.build(SpanBuilder {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343812,"byte_end":343854,"line_start":325,"line_end":325,"column_start":1,"column_end":43}},{"value":"/     name: \"example-span-name\".into(),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343855,"byte_end":343896,"line_start":326,"line_end":326,"column_start":1,"column_end":42}},{"value":"/     span_kind: Some(SpanKind::Server),","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343897,"byte_end":343939,"line_start":327,"line_end":327,"column_start":1,"column_end":43}},{"value":"/     ..Default::default()","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343940,"byte_end":343968,"line_start":328,"line_end":328,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343969,"byte_end":343976,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343977,"byte_end":343980,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ // Or used with builder pattern","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":343981,"byte_end":344016,"line_start":331,"line_end":331,"column_start":1,"column_end":36}},{"value":"/ let _span = tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344017,"byte_end":344039,"line_start":332,"line_end":332,"column_start":1,"column_end":23}},{"value":"/     .span_builder(\"example-span-name\")","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344040,"byte_end":344082,"line_start":333,"line_end":333,"column_start":1,"column_end":43}},{"value":"/     .with_kind(SpanKind::Server)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344083,"byte_end":344119,"line_start":334,"line_end":334,"column_start":1,"column_end":37}},{"value":"/     .start(&tracer);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344120,"byte_end":344144,"line_start":335,"line_end":335,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344145,"byte_end":344152,"line_start":336,"line_end":336,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344244,"byte_end":344258,"line_start":340,"line_end":340,"column_start":9,"column_end":23},"name":"parent_context","qualname":"::trace::tracer::SpanBuilder::parent_context","value":"context::Context","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Parent `Context`\n","sig":null,"attributes":[{"value":"/ Parent `Context`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344215,"byte_end":344235,"line_start":339,"line_end":339,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344350,"byte_end":344358,"line_start":342,"line_end":342,"column_start":9,"column_end":17},"name":"trace_id","qualname":"::trace::tracer::SpanBuilder::trace_id","value":"std::option::Option<trace::span_context::TraceId>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Trace id, useful for integrations with external tracing systems.\n","sig":null,"attributes":[{"value":"/ Trace id, useful for integrations with external tracing systems.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344273,"byte_end":344341,"line_start":341,"line_end":341,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344457,"byte_end":344464,"line_start":344,"line_end":344,"column_start":9,"column_end":16},"name":"span_id","qualname":"::trace::tracer::SpanBuilder::span_id","value":"std::option::Option<trace::span_context::SpanId>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span id, useful for integrations with external tracing systems.\n","sig":null,"attributes":[{"value":"/ Span id, useful for integrations with external tracing systems.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344381,"byte_end":344448,"line_start":343,"line_end":343,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344508,"byte_end":344517,"line_start":346,"line_end":346,"column_start":9,"column_end":18},"name":"span_kind","qualname":"::trace::tracer::SpanBuilder::span_kind","value":"std::option::Option<trace::span::SpanKind>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span kind\n","sig":null,"attributes":[{"value":"/ Span kind","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344486,"byte_end":344499,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344563,"byte_end":344567,"line_start":348,"line_end":348,"column_start":9,"column_end":13},"name":"name","qualname":"::trace::tracer::SpanBuilder::name","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span name\n","sig":null,"attributes":[{"value":"/ Span name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344541,"byte_end":344554,"line_start":347,"line_end":347,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344620,"byte_end":344630,"line_start":350,"line_end":350,"column_start":9,"column_end":19},"name":"start_time","qualname":"::trace::tracer::SpanBuilder::start_time","value":"std::option::Option<std::time::SystemTime>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span start time\n","sig":null,"attributes":[{"value":"/ Span start time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344592,"byte_end":344611,"line_start":349,"line_end":349,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344682,"byte_end":344690,"line_start":352,"line_end":352,"column_start":9,"column_end":17},"name":"end_time","qualname":"::trace::tracer::SpanBuilder::end_time","value":"std::option::Option<std::time::SystemTime>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span end time\n","sig":null,"attributes":[{"value":"/ Span end time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344656,"byte_end":344673,"line_start":351,"line_end":351,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344744,"byte_end":344754,"line_start":354,"line_end":354,"column_start":9,"column_end":19},"name":"attributes","qualname":"::trace::tracer::SpanBuilder::attributes","value":"std::option::Option<std::vec::Vec<common::KeyValue>>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span attributes\n","sig":null,"attributes":[{"value":"/ Span attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344716,"byte_end":344735,"line_start":353,"line_end":353,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344807,"byte_end":344813,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"events","qualname":"::trace::tracer::SpanBuilder::events","value":"std::option::Option<std::vec::Vec<trace::Event>>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span events\n","sig":null,"attributes":[{"value":"/ Span events","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344783,"byte_end":344798,"line_start":355,"line_end":355,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344862,"byte_end":344867,"line_start":358,"line_end":358,"column_start":9,"column_end":14},"name":"links","qualname":"::trace::tracer::SpanBuilder::links","value":"std::option::Option<std::vec::Vec<trace::Link>>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span Links\n","sig":null,"attributes":[{"value":"/ Span Links","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344839,"byte_end":344853,"line_start":357,"line_end":357,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344921,"byte_end":344932,"line_start":360,"line_end":360,"column_start":9,"column_end":20},"name":"status_code","qualname":"::trace::tracer::SpanBuilder::status_code","value":"std::option::Option<trace::span::StatusCode>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span status code\n","sig":null,"attributes":[{"value":"/ Span status code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344892,"byte_end":344912,"line_start":359,"line_end":359,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344990,"byte_end":345004,"line_start":362,"line_end":362,"column_start":9,"column_end":23},"name":"status_message","qualname":"::trace::tracer::SpanBuilder::status_message","value":"std::option::Option<std::borrow::Cow<'static, str>>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Span status message\n","sig":null,"attributes":[{"value":"/ Span status message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":344958,"byte_end":344981,"line_start":361,"line_end":361,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345065,"byte_end":345080,"line_start":364,"line_end":364,"column_start":9,"column_end":24},"name":"sampling_result","qualname":"::trace::tracer::SpanBuilder::sampling_result","value":"std::option::Option<sdk::trace::sampler::SamplingResult>","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":" Sampling result\n","sig":null,"attributes":[{"value":"/ Sampling result","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345037,"byte_end":345056,"line_start":363,"line_end":363,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345226,"byte_end":345235,"line_start":370,"line_end":370,"column_start":12,"column_end":21},"name":"from_name","qualname":"<SpanBuilder>::from_name","value":"pub fn from_name<T: Into<Cow>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new span builder from a span name\n","sig":null,"attributes":[{"value":"/ Create a new span builder from a span name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345168,"byte_end":345214,"line_start":369,"line_end":369,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346029,"byte_end":346048,"line_start":397,"line_end":397,"column_start":12,"column_end":31},"name":"with_parent_context","qualname":"<SpanBuilder>::with_parent_context","value":"pub fn with_parent_context(Self, Context) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign parent context\n","sig":null,"attributes":[{"value":"/ Assign parent context","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345992,"byte_end":346017,"line_start":396,"line_end":396,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346247,"byte_end":346260,"line_start":405,"line_end":405,"column_start":12,"column_end":25},"name":"with_trace_id","qualname":"<SpanBuilder>::with_trace_id","value":"pub fn with_trace_id(Self, TraceId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify trace id to use if no parent context exists\n","sig":null,"attributes":[{"value":"/ Specify trace id to use if no parent context exists","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346180,"byte_end":346235,"line_start":404,"line_end":404,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346426,"byte_end":346438,"line_start":413,"line_end":413,"column_start":12,"column_end":24},"name":"with_span_id","qualname":"<SpanBuilder>::with_span_id","value":"pub fn with_span_id(Self, SpanId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign span id\n","sig":null,"attributes":[{"value":"/ Assign span id","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346396,"byte_end":346414,"line_start":412,"line_end":412,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346602,"byte_end":346611,"line_start":421,"line_end":421,"column_start":12,"column_end":21},"name":"with_kind","qualname":"<SpanBuilder>::with_kind","value":"pub fn with_kind(Self, SpanKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign span kind\n","sig":null,"attributes":[{"value":"/ Assign span kind","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346570,"byte_end":346590,"line_start":420,"line_end":420,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346789,"byte_end":346804,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"with_start_time","qualname":"<SpanBuilder>::with_start_time","value":"pub fn with_start_time<T: Into<SystemTime>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign span start time\n","sig":null,"attributes":[{"value":"/ Assign span start time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346751,"byte_end":346777,"line_start":428,"line_end":428,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347004,"byte_end":347017,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"with_end_time","qualname":"<SpanBuilder>::with_end_time","value":"pub fn with_end_time<T: Into<SystemTime>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign span end time\n","sig":null,"attributes":[{"value":"/ Assign span end time","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":346968,"byte_end":346992,"line_start":436,"line_end":436,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347213,"byte_end":347228,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<SpanBuilder>::with_attributes","value":"pub fn with_attributes(Self, Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign span attributes\n","sig":null,"attributes":[{"value":"/ Assign span attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347175,"byte_end":347201,"line_start":444,"line_end":444,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347405,"byte_end":347416,"line_start":453,"line_end":453,"column_start":12,"column_end":23},"name":"with_events","qualname":"<SpanBuilder>::with_events","value":"pub fn with_events(Self, Vec<Event>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign events\n","sig":null,"attributes":[{"value":"/ Assign events","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347376,"byte_end":347393,"line_start":452,"line_end":452,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347577,"byte_end":347587,"line_start":461,"line_end":461,"column_start":12,"column_end":22},"name":"with_links","qualname":"<SpanBuilder>::with_links","value":"pub fn with_links(Self, Vec<Link>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign links\n","sig":null,"attributes":[{"value":"/ Assign links","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347549,"byte_end":347565,"line_start":460,"line_end":460,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347809,"byte_end":347825,"line_start":470,"line_end":470,"column_start":12,"column_end":28},"name":"with_status_code","qualname":"<SpanBuilder>::with_status_code","value":"pub fn with_status_code(Self, StatusCode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign status code\n","sig":null,"attributes":[{"value":"/ Assign status code","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347775,"byte_end":347797,"line_start":469,"line_end":469,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347996,"byte_end":348015,"line_start":478,"line_end":478,"column_start":12,"column_end":31},"name":"with_status_message","qualname":"<SpanBuilder>::with_status_message","value":"pub fn with_status_message<T: Into<Cow>>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign status message\n","sig":null,"attributes":[{"value":"/ Assign status message","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":347959,"byte_end":347984,"line_start":477,"line_end":477,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":348222,"byte_end":348242,"line_start":486,"line_end":486,"column_start":12,"column_end":32},"name":"with_sampling_result","qualname":"<SpanBuilder>::with_sampling_result","value":"pub fn with_sampling_result(Self, sdk::trace::SamplingResult) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign sampling result\n","sig":null,"attributes":[{"value":"/ Assign sampling result","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":348184,"byte_end":348210,"line_start":485,"line_end":485,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":348494,"byte_end":348499,"line_start":494,"line_end":494,"column_start":12,"column_end":17},"name":"start","qualname":"<SpanBuilder>::start","value":"pub fn start<T: Tracer>(Self, &T) -> T::Span","parent":null,"children":[],"decl_id":null,"docs":" Builds a span with the given tracer from this configuration.\n","sig":null,"attributes":[{"value":"/ Builds a span with the given tracer from this configuration.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":348418,"byte_end":348482,"line_start":493,"line_end":493,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348695,"byte_end":348709,"line_start":5,"line_end":5,"column_start":11,"column_end":25},"name":"TracerProvider","qualname":"::trace::tracer_provider::TracerProvider","value":"TracerProvider: fmt::Debug + 'static","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007}],"decl_id":null,"docs":" Types that can create instances of [`Tracer`].\n","sig":null,"attributes":[{"value":"/ Types that can create instances of [`Tracer`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348634,"byte_end":348684,"line_start":4,"line_end":4,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348803,"byte_end":348809,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Tracer","qualname":"::trace::tracer_provider::TracerProvider::Tracer","value":"type Tracer: Tracer;","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" The [`Tracer`] type that this provider will return.\n","sig":null,"attributes":[{"value":"/ The [`Tracer`] type that this provider will return.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348738,"byte_end":348793,"line_start":6,"line_end":6,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349484,"byte_end":349490,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"tracer","qualname":"::trace::tracer_provider::TracerProvider::tracer","value":"pub fn tracer(&Self, &'static str, Option<&'static str>) -> Self::Tracer","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Returns a new tracer with the given name and version.","sig":null,"attributes":[{"value":"/ Returns a new tracer with the given name and version.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348824,"byte_end":348881,"line_start":9,"line_end":9,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348886,"byte_end":348889,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The `name` should be the application name or the name of the library","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348894,"byte_end":348966,"line_start":11,"line_end":11,"column_start":5,"column_end":77}},{"value":"/ providing instrumentation. If the name is empty, then an","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348971,"byte_end":349031,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/ implementation-defined default name may be used instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349036,"byte_end":349096,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349101,"byte_end":349104,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349109,"byte_end":349123,"line_start":15,"line_end":15,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349128,"byte_end":349131,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349136,"byte_end":349143,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ use opentelemetry::{global, trace::TracerProvider};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349148,"byte_end":349203,"line_start":18,"line_end":18,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349208,"byte_end":349211,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ let provider = global::tracer_provider();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349216,"byte_end":349261,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349266,"byte_end":349269,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ // App tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349274,"byte_end":349291,"line_start":22,"line_end":22,"column_start":5,"column_end":22}},{"value":"/ let tracer = provider.tracer(\"my_app\", None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349296,"byte_end":349345,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349350,"byte_end":349353,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ // Library tracer","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349358,"byte_end":349379,"line_start":25,"line_end":25,"column_start":5,"column_end":26}},{"value":"/ let tracer = provider.tracer(\"my_library\", Some(env!(\"CARGO_PKG_VERSION\")));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349384,"byte_end":349464,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349469,"byte_end":349476,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349653,"byte_end":349664,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"force_flush","qualname":"::trace::tracer_provider::TracerProvider::force_flush","value":"pub fn force_flush(&Self) -> Vec<TraceResult<()>>","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Force flush all remaining spans in span processors and return results.\n","sig":null,"attributes":[{"value":"/ Force flush all remaining spans in span processors and return results.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":349571,"byte_end":349645,"line_start":30,"line_end":30,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276315,"byte_end":276326,"line_start":196,"line_end":196,"column_start":10,"column_end":21},"name":"TraceResult","qualname":"::trace::TraceResult","value":"Result<T, TraceError>","parent":null,"children":[],"decl_id":null,"docs":" Describe the result of operations in tracing API.\n","sig":null,"attributes":[{"value":"/ Describe the result of operations in tracing API.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276252,"byte_end":276305,"line_start":195,"line_end":195,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276612,"byte_end":276624,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"name":"ExportFailed","qualname":"::trace::TraceError::ExportFailed","value":"TraceError::ExportFailed(Box<dyn ExportError>)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":" Export failed with the error returned by the exporter\n","sig":null,"attributes":[{"value":"/ Export failed with the error returned by the exporter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276462,"byte_end":276519,"line_start":202,"line_end":202,"column_start":5,"column_end":62}},{"value":"error(\"Exporter {} encountered the following error(s): {0}\",.0.exporter_name())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276524,"byte_end":276607,"line_start":203,"line_end":203,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276807,"byte_end":276821,"line_start":208,"line_end":208,"column_start":5,"column_end":19},"name":"ExportTimedOut","qualname":"::trace::TraceError::ExportTimedOut","value":"TraceError::ExportTimedOut(time::Duration)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":" Export failed to finish after certain period and processor stopped the export.\n","sig":null,"attributes":[{"value":"/ Export failed to finish after certain period and processor stopped the export.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276653,"byte_end":276735,"line_start":206,"line_end":206,"column_start":5,"column_end":87}},{"value":"error(\"Exporting timed out after {} seconds\",.0.as_secs())","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276740,"byte_end":276802,"line_start":207,"line_end":207,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276944,"byte_end":276949,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"Other","qualname":"::trace::TraceError::Other","value":"TraceError::Other(Box<dyn std::error::Error + Send + Sync + 'static>)","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":" Other errors propagated from trace SDK that weren't covered above\n","sig":null,"attributes":[{"value":"/ Other errors propagated from trace SDK that weren't covered above","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276844,"byte_end":276913,"line_start":210,"line_end":210,"column_start":5,"column_end":74}},{"value":"error(transparent)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276918,"byte_end":276939,"line_start":211,"line_end":211,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276445,"byte_end":276455,"line_start":201,"line_end":201,"column_start":10,"column_end":20},"name":"TraceError","qualname":"::trace::TraceError","value":"pub enum TraceError {\n    ExportFailed(Box<dyn ExportError>),\n    ExportTimedOut(time::Duration),\n    Other(Box<dyn std::error::Error + Send + Sync + 'static>),\n}","parent":null,"children":[{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057}],"decl_id":null,"docs":" Errors returned by the trace API.\n","sig":null,"attributes":[{"value":"/ Errors returned by the trace API.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276356,"byte_end":276393,"line_start":198,"line_end":198,"column_start":1,"column_end":38}},{"value":"non_exhaustive","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":276418,"byte_end":276435,"line_start":200,"line_end":200,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277866,"byte_end":277877,"line_start":254,"line_end":254,"column_start":11,"column_end":22},"name":"IdGenerator","qualname":"::trace::IdGenerator","value":"IdGenerator: Send + Sync + fmt::Debug","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2087}],"decl_id":null,"docs":" Interface for generating IDs\n","sig":null,"attributes":[{"value":"/ Interface for generating IDs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277823,"byte_end":277855,"line_start":253,"line_end":253,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277946,"byte_end":277958,"line_start":256,"line_end":256,"column_start":8,"column_end":20},"name":"new_trace_id","qualname":"::trace::IdGenerator::new_trace_id","value":"pub fn new_trace_id(&Self) -> TraceId","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":" Generate a new `TraceId`\n","sig":null,"attributes":[{"value":"/ Generate a new `TraceId`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277910,"byte_end":277938,"line_start":255,"line_end":255,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278018,"byte_end":278029,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"new_span_id","qualname":"::trace::IdGenerator::new_span_id","value":"pub fn new_span_id(&Self) -> SpanId","parent":{"krate":0,"index":2085},"children":[],"decl_id":null,"docs":" Generate a new `SpanId`\n","sig":null,"attributes":[{"value":"/ Generate a new `SpanId`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277983,"byte_end":278010,"line_start":258,"line_end":258,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278293,"byte_end":278298,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"Event","qualname":"::trace::Event","value":"Event { name, timestamp, attributes, dropped_attributes_count }","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079}],"decl_id":null,"docs":" A `Span` has the ability to add events. Events have a time associated\n with the moment when they are added to the `Span`.\n","sig":null,"attributes":[{"value":"/ A `Span` has the ability to add events. Events have a time associated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278051,"byte_end":278124,"line_start":262,"line_end":262,"column_start":1,"column_end":74}},{"value":"/ with the moment when they are added to the `Span`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278125,"byte_end":278179,"line_start":263,"line_end":263,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278328,"byte_end":278332,"line_start":268,"line_end":268,"column_start":9,"column_end":13},"name":"name","qualname":"::trace::Event::name","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Event name\n","sig":null,"attributes":[{"value":"/ Event name","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278305,"byte_end":278319,"line_start":267,"line_end":267,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278385,"byte_end":278394,"line_start":270,"line_end":270,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::trace::Event::timestamp","value":"std::time::SystemTime","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Event timestamp\n","sig":null,"attributes":[{"value":"/ Event timestamp","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278357,"byte_end":278376,"line_start":269,"line_end":269,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278447,"byte_end":278457,"line_start":272,"line_end":272,"column_start":9,"column_end":19},"name":"attributes","qualname":"::trace::Event::attributes","value":"std::vec::Vec<common::KeyValue>","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Event attributes\n","sig":null,"attributes":[{"value":"/ Event attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278418,"byte_end":278438,"line_start":271,"line_end":271,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278519,"byte_end":278543,"line_start":274,"line_end":274,"column_start":9,"column_end":33},"name":"dropped_attributes_count","qualname":"::trace::Event::dropped_attributes_count","value":"u32","parent":{"krate":0,"index":3075},"children":[],"decl_id":null,"docs":" Number of dropped attributes\n","sig":null,"attributes":[{"value":"/ Number of dropped attributes","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278478,"byte_end":278510,"line_start":273,"line_end":273,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278604,"byte_end":278607,"line_start":279,"line_end":279,"column_start":12,"column_end":15},"name":"new","qualname":"<Event>::new","value":"pub fn new<T: Into<Cow>>(T, time::SystemTime, Vec<KeyValue>, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `Event`\n","sig":null,"attributes":[{"value":"/ Create new `Event`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278570,"byte_end":278592,"line_start":278,"line_end":278,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278987,"byte_end":278996,"line_start":294,"line_end":294,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Event>::with_name","value":"pub fn with_name<T: Into<Cow>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `Event` with a given name.\n","sig":null,"attributes":[{"value":"/ Create new `Event` with a given name.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278934,"byte_end":278975,"line_start":293,"line_end":293,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279497,"byte_end":279501,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"Link","qualname":"::trace::Link","value":"Link {  }","parent":null,"children":[{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"decl_id":null,"docs":" During the `Span` creation user MUST have the ability to record links to other `Span`s. Linked\n `Span`s can be from the same or a different trace.\n","sig":null,"attributes":[{"value":"/ During the `Span` creation user MUST have the ability to record links to other `Span`s. Linked","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279230,"byte_end":279328,"line_start":304,"line_end":304,"column_start":1,"column_end":99}},{"value":"/ `Span`s can be from the same or a different trace.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279329,"byte_end":279383,"line_start":305,"line_end":305,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279675,"byte_end":279678,"line_start":316,"line_end":316,"column_start":12,"column_end":15},"name":"new","qualname":"<Link>::new","value":"pub fn new(SpanContext, Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new link\n","sig":null,"attributes":[{"value":"/ Create a new link","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279642,"byte_end":279663,"line_start":315,"line_end":315,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279921,"byte_end":279933,"line_start":325,"line_end":325,"column_start":12,"column_end":24},"name":"span_context","qualname":"<Link>::span_context","value":"pub fn span_context(&Self) -> &SpanContext","parent":null,"children":[],"decl_id":null,"docs":" The span context of the linked span\n","sig":null,"attributes":[{"value":"/ The span context of the linked span","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279870,"byte_end":279909,"line_start":324,"line_end":324,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":280040,"byte_end":280050,"line_start":330,"line_end":330,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Link>::attributes","value":"pub fn attributes(&Self) -> &Vec<KeyValue>","parent":null,"children":[],"decl_id":null,"docs":" Attributes of the span link\n","sig":null,"attributes":[{"value":"/ Attributes of the span link","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279997,"byte_end":280028,"line_start":329,"line_end":329,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":280154,"byte_end":280178,"line_start":335,"line_end":335,"column_start":12,"column_end":36},"name":"dropped_attributes_count","qualname":"<Link>::dropped_attributes_count","value":"pub fn dropped_attributes_count(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Dropped attributes count\n","sig":null,"attributes":[{"value":"/ Dropped attributes count","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":280114,"byte_end":280142,"line_start":334,"line_end":334,"column_start":5,"column_end":33}}]}],"impls":[{"id":3,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16503,"byte_end":16508,"line_start":33,"line_end":33,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20419,"byte_end":20428,"line_start":19,"line_end":19,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22768,"byte_end":22779,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25027,"byte_end":25028,"line_start":137,"line_end":137,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26526,"byte_end":26527,"line_start":177,"line_end":177,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27353,"byte_end":27373,"line_start":207,"line_end":207,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27813,"byte_end":27833,"line_start":221,"line_end":221,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48560,"byte_end":48575,"line_start":55,"line_end":55,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48802,"byte_end":48817,"line_start":66,"line_end":66,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49451,"byte_end":49466,"line_start":89,"line_end":89,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50488,"byte_end":50496,"line_start":121,"line_end":121,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50718,"byte_end":50726,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":51458,"byte_end":51463,"line_start":159,"line_end":159,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52343,"byte_end":52365,"line_start":20,"line_end":20,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56747,"byte_end":56764,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56917,"byte_end":56934,"line_start":112,"line_end":112,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69235,"byte_end":69261,"line_start":67,"line_end":67,"column_start":6,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69867,"byte_end":69893,"line_start":86,"line_end":86,"column_start":28,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78620,"byte_end":78642,"line_start":47,"line_end":47,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":80951,"byte_end":80973,"line_start":116,"line_end":116,"column_start":28,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100154,"byte_end":100173,"line_start":24,"line_end":24,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100451,"byte_end":100470,"line_start":33,"line_end":33,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100618,"byte_end":100637,"line_start":40,"line_end":40,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101698,"byte_end":101725,"line_start":69,"line_end":69,"column_start":27,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104704,"byte_end":104722,"line_start":20,"line_end":20,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":106078,"byte_end":106101,"line_start":23,"line_end":23,"column_start":27,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92706,"byte_end":92714,"line_start":52,"line_end":52,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92890,"byte_end":92898,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95779,"byte_end":95787,"line_start":156,"line_end":156,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95921,"byte_end":95929,"line_start":164,"line_end":164,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96230,"byte_end":96234,"line_start":177,"line_end":177,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108944,"byte_end":108950,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111358,"byte_end":111364,"line_start":95,"line_end":95,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113094,"byte_end":113108,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116009,"byte_end":116017,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116151,"byte_end":116165,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116686,"byte_end":116690,"line_start":146,"line_end":146,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117950,"byte_end":117962,"line_start":18,"line_end":18,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119519,"byte_end":119527,"line_start":69,"line_end":69,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119687,"byte_end":119699,"line_start":77,"line_end":77,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":120051,"byte_end":120055,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":120220,"byte_end":120232,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123647,"byte_end":123662,"line_start":43,"line_end":43,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":750},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","byte_start":121255,"byte_end":121266,"line_start":15,"line_end":15,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126347,"byte_end":126366,"line_start":32,"line_end":32,"column_start":15,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126734,"byte_end":126748,"line_start":48,"line_end":48,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126834,"byte_end":126848,"line_start":54,"line_end":54,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127434,"byte_end":127448,"line_start":76,"line_end":76,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128518,"byte_end":128525,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":142128,"byte_end":142135,"line_start":100,"line_end":100,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":152997,"byte_end":153001,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":154177,"byte_end":154181,"line_start":90,"line_end":90,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":157149,"byte_end":157153,"line_start":168,"line_end":168,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":158744,"byte_end":158748,"line_start":206,"line_end":206,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":174209,"byte_end":174219,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179482,"byte_end":179501,"line_start":110,"line_end":110,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":180518,"byte_end":180537,"line_start":141,"line_end":141,"column_start":24,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183831,"byte_end":183849,"line_start":233,"line_end":233,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":184093,"byte_end":184111,"line_start":241,"line_end":241,"column_start":41,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185673,"byte_end":185691,"line_start":287,"line_end":287,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":191042,"byte_end":191053,"line_start":433,"line_end":433,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193124,"byte_end":193149,"line_start":491,"line_end":491,"column_start":12,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":203962,"byte_end":203968,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204346,"byte_end":204352,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":206747,"byte_end":206753,"line_start":122,"line_end":122,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221823,"byte_end":221830,"line_start":91,"line_end":91,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1310},{"krate":0,"index":1314},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":227943,"byte_end":227947,"line_start":270,"line_end":270,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228357,"byte_end":228364,"line_start":287,"line_end":287,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228696,"byte_end":228703,"line_start":297,"line_end":297,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228980,"byte_end":228987,"line_start":307,"line_end":307,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":231072,"byte_end":231079,"line_start":375,"line_end":375,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232418,"byte_end":232433,"line_start":416,"line_end":416,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232559,"byte_end":232574,"line_start":423,"line_end":423,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232696,"byte_end":232711,"line_start":429,"line_end":429,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233196,"byte_end":233212,"line_start":447,"line_end":447,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233596,"byte_end":233612,"line_start":463,"line_end":463,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238622,"byte_end":238629,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245595,"byte_end":245602,"line_start":297,"line_end":297,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":246080,"byte_end":246092,"line_start":313,"line_end":313,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":246965,"byte_end":246973,"line_start":337,"line_end":337,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248576,"byte_end":248579,"line_start":11,"line_end":11,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250055,"byte_end":250058,"line_start":68,"line_end":68,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250206,"byte_end":250209,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250348,"byte_end":250354,"line_start":82,"line_end":82,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250495,"byte_end":250498,"line_start":89,"line_end":89,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250968,"byte_end":250973,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252665,"byte_end":252670,"line_start":175,"line_end":175,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253582,"byte_end":253587,"line_start":213,"line_end":213,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253765,"byte_end":253770,"line_start":220,"line_end":220,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253936,"byte_end":253941,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1485}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254698,"byte_end":254706,"line_start":249,"line_end":249,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270010,"byte_end":270019,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270204,"byte_end":270213,"line_start":66,"line_end":66,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266633,"byte_end":266640,"line_start":185,"line_end":185,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1571}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266859,"byte_end":266866,"line_start":192,"line_end":192,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281037,"byte_end":281044,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281353,"byte_end":281360,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285993,"byte_end":286000,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289529,"byte_end":289530,"line_start":270,"line_end":270,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289588,"byte_end":289599,"line_start":272,"line_end":272,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289899,"byte_end":289910,"line_start":283,"line_end":283,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":290230,"byte_end":290241,"line_start":293,"line_end":293,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292960,"byte_end":292978,"line_start":22,"line_end":22,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293135,"byte_end":293153,"line_start":29,"line_end":29,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293664,"byte_end":293672,"line_start":49,"line_end":49,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293740,"byte_end":293748,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":294132,"byte_end":294140,"line_start":70,"line_end":70,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295327,"byte_end":295337,"line_start":123,"line_end":123,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295469,"byte_end":295479,"line_start":130,"line_end":130,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296865,"byte_end":296881,"line_start":180,"line_end":180,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":297039,"byte_end":297055,"line_start":188,"line_end":188,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310530,"byte_end":310538,"line_start":230,"line_end":230,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311363,"byte_end":311373,"line_start":256,"line_end":256,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313321,"byte_end":313331,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314352,"byte_end":314362,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314492,"byte_end":314502,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314629,"byte_end":314639,"line_start":83,"line_end":83,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314756,"byte_end":314766,"line_start":91,"line_end":91,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315200,"byte_end":315207,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316457,"byte_end":316463,"line_start":146,"line_end":146,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317892,"byte_end":317902,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324061,"byte_end":324071,"line_start":366,"line_end":366,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1898}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326201,"byte_end":326212,"line_start":419,"line_end":419,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345150,"byte_end":345161,"line_start":368,"line_end":368,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277034,"byte_end":277044,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277194,"byte_end":277204,"line_start":224,"line_end":224,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277343,"byte_end":277353,"line_start":230,"line_end":230,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277465,"byte_end":277475,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277607,"byte_end":277617,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2084}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278558,"byte_end":278563,"line_start":277,"line_end":277,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279631,"byte_end":279635,"line_start":314,"line_end":314,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9011,"byte_end":9017,"line_start":221,"line_end":221,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9027,"byte_end":9030,"line_start":222,"line_end":222,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":191}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41232,"byte_end":41238,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":192}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41842,"byte_end":41847,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":193}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42391,"byte_end":42397,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":235}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41248,"byte_end":41263,"line_start":10,"line_end":10,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":296}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41444,"byte_end":41455,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":299}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41465,"byte_end":41473,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/mod.rs","byte_start":41558,"byte_end":41563,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":598}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9102,"byte_end":9109,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1276}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9238,"byte_end":9245,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1503}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9271,"byte_end":9275,"line_start":241,"line_end":241,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1524}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9483,"byte_end":9494,"line_start":251,"line_end":251,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1525}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":265984,"byte_end":266003,"line_start":166,"line_end":166,"column_start":9,"column_end":28},"ref_id":{"krate":0,"index":1529}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/lib.rs","byte_start":9580,"byte_end":9585,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1578}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":275822,"byte_end":275826,"line_start":180,"line_end":180,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1702}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/error_handler.rs","byte_start":16503,"byte_end":16508,"line_start":33,"line_end":33,"column_start":34,"column_end":39},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2114},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":20419,"byte_end":20428,"line_start":19,"line_end":19,"column_start":22,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2161},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":22768,"byte_end":22779,"line_start":79,"line_end":79,"column_start":24,"column_end":35},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2166},"to":{"krate":0,"index":1954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":24474,"byte_end":24479,"line_start":124,"line_end":124,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":103}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":25027,"byte_end":25028,"line_start":137,"line_end":137,"column_start":30,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":109},"to":{"krate":0,"index":103}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26080,"byte_end":26085,"line_start":165,"line_end":165,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":26526,"byte_end":26527,"line_start":177,"line_end":177,"column_start":41,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":113}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27353,"byte_end":27373,"line_start":207,"line_end":207,"column_start":6,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/global/trace.rs","byte_start":27813,"byte_end":27833,"line_start":221,"line_end":221,"column_start":32,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2171},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48560,"byte_end":48575,"line_start":55,"line_end":55,"column_start":18,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2188},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":48802,"byte_end":48817,"line_start":66,"line_end":66,"column_start":16,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":49451,"byte_end":49466,"line_start":89,"line_end":89,"column_start":9,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50488,"byte_end":50496,"line_start":121,"line_end":121,"column_start":16,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":50718,"byte_end":50726,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2196},"to":{"krate":0,"index":2223}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/stdout.rs","byte_start":51458,"byte_end":51463,"line_start":159,"line_end":159,"column_start":22,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2220},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42939,"byte_end":42943,"line_start":27,"line_end":27,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":2223}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/trace/mod.rs","byte_start":42946,"byte_end":42951,"line_start":27,"line_end":27,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":2223}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41935,"byte_end":41940,"line_start":10,"line_end":10,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2546},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41943,"byte_end":41947,"line_start":10,"line_end":10,"column_start":44,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/export/mod.rs","byte_start":41950,"byte_end":41954,"line_start":10,"line_end":10,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":294}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/instrumentation.rs","byte_start":52343,"byte_end":52365,"line_start":20,"line_end":20,"column_start":6,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56747,"byte_end":56764,"line_start":105,"line_end":105,"column_start":6,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/baggage.rs","byte_start":56917,"byte_end":56934,"line_start":112,"line_end":112,"column_start":28,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2286},"to":{"krate":0,"index":1547}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69235,"byte_end":69261,"line_start":67,"line_end":67,"column_start":6,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/composite.rs","byte_start":69867,"byte_end":69893,"line_start":86,"line_end":86,"column_start":28,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2292},"to":{"krate":0,"index":1547}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":78620,"byte_end":78642,"line_start":47,"line_end":47,"column_start":6,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/propagation/trace_context.rs","byte_start":80951,"byte_end":80973,"line_start":116,"line_end":116,"column_start":28,"column_end":50},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2313},"to":{"krate":0,"index":1547}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100154,"byte_end":100173,"line_start":24,"line_end":24,"column_start":27,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2321},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100451,"byte_end":100470,"line_start":33,"line_end":33,"column_start":6,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":100618,"byte_end":100637,"line_start":40,"line_end":40,"column_start":18,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2321},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/env.rs","byte_start":101698,"byte_end":101725,"line_start":69,"line_end":69,"column_start":27,"column_end":54},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2325},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/os.rs","byte_start":104704,"byte_end":104722,"line_start":20,"line_end":20,"column_start":27,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2331},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/process.rs","byte_start":106078,"byte_end":106101,"line_start":23,"line_end":23,"column_start":27,"column_end":50},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2335},"to":{"krate":0,"index":596}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92706,"byte_end":92714,"line_start":52,"line_end":52,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":92890,"byte_end":92898,"line_start":61,"line_end":61,"column_start":6,"column_end":14},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95779,"byte_end":95787,"line_start":156,"line_end":156,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2349},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":95921,"byte_end":95929,"line_start":164,"line_end":164,"column_start":23,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2339},"to":{"krate":2,"index":7790}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/resource/mod.rs","byte_start":96230,"byte_end":96234,"line_start":177,"line_end":177,"column_start":23,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2354},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":108944,"byte_end":108950,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/config.rs","byte_start":111358,"byte_end":111364,"line_start":95,"line_end":95,"column_start":18,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2361},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":113094,"byte_end":113108,"line_start":20,"line_end":20,"column_start":6,"column_end":20},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116009,"byte_end":116017,"line_start":116,"line_end":116,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2381},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116151,"byte_end":116165,"line_start":124,"line_end":124,"column_start":23,"column_end":37},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2368},"to":{"krate":2,"index":7790}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_hash_map.rs","byte_start":116686,"byte_end":116690,"line_start":146,"line_end":146,"column_start":23,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2386},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":117950,"byte_end":117962,"line_start":18,"line_end":18,"column_start":9,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119519,"byte_end":119527,"line_start":69,"line_end":69,"column_start":22,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2410},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":119687,"byte_end":119699,"line_start":77,"line_end":77,"column_start":26,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2393},"to":{"krate":2,"index":7790}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":120051,"byte_end":120055,"line_start":90,"line_end":90,"column_start":35,"column_end":39},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2417},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/evicted_queue.rs","byte_start":120220,"byte_end":120232,"line_start":98,"line_end":98,"column_start":23,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2393},"to":{"krate":2,"index":7799}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/aws.rs","byte_start":123647,"byte_end":123662,"line_start":43,"line_end":43,"column_start":22,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2426},"to":{"krate":0,"index":2085}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/id_generator/mod.rs","byte_start":121255,"byte_end":121266,"line_start":15,"line_end":15,"column_start":36,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":2085}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126347,"byte_end":126366,"line_start":32,"line_end":32,"column_start":15,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2445},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126734,"byte_end":126748,"line_start":48,"line_end":48,"column_start":18,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2450},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":126834,"byte_end":126848,"line_start":54,"line_end":54,"column_start":6,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":127434,"byte_end":127448,"line_start":76,"line_end":76,"column_start":39,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2450},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/provider.rs","byte_start":128518,"byte_end":128525,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":134823,"byte_end":134830,"line_start":39,"line_end":39,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":1518},"to":{"krate":0,"index":849}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135350,"byte_end":135354,"line_start":51,"line_end":51,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":853}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/runtime.rs","byte_start":135357,"byte_end":135361,"line_start":51,"line_end":51,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":853}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140344,"byte_end":140348,"line_start":48,"line_end":48,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140351,"byte_end":140355,"line_start":48,"line_end":48,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":140368,"byte_end":140373,"line_start":48,"line_end":48,"column_start":49,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/sampler.rs","byte_start":142128,"byte_end":142135,"line_start":100,"line_end":100,"column_start":23,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2489},"to":{"krate":0,"index":879}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":152997,"byte_end":153001,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":154177,"byte_end":154181,"line_start":90,"line_end":90,"column_start":29,"column_end":33},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2504},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":157149,"byte_end":157153,"line_start":168,"line_end":168,"column_start":6,"column_end":10},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span.rs","byte_start":158744,"byte_end":158748,"line_start":206,"line_end":206,"column_start":15,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2504},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_limit.rs","byte_start":174209,"byte_end":174219,"line_start":37,"line_end":37,"column_start":18,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2530},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177762,"byte_end":177766,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177769,"byte_end":177773,"line_start":68,"line_end":68,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":177786,"byte_end":177791,"line_start":68,"line_end":68,"column_start":50,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":179482,"byte_end":179501,"line_start":110,"line_end":110,"column_start":6,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":180518,"byte_end":180537,"line_start":141,"line_end":141,"column_start":24,"column_end":43},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2541},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":183831,"byte_end":183849,"line_start":233,"line_end":233,"column_start":38,"column_end":56},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1044},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":184093,"byte_end":184111,"line_start":241,"line_end":241,"column_start":41,"column_end":59},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1044},"to":{"krate":0,"index":1031}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":185673,"byte_end":185691,"line_start":287,"line_end":287,"column_start":23,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":191042,"byte_end":191053,"line_start":433,"line_end":433,"column_start":18,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/span_processor.rs","byte_start":193124,"byte_end":193149,"line_start":491,"line_end":491,"column_start":12,"column_end":37},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":203962,"byte_end":203968,"line_start":35,"line_end":35,"column_start":21,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2575},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":204346,"byte_end":204352,"line_start":46,"line_end":46,"column_start":6,"column_end":12},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/sdk/trace/tracer.rs","byte_start":206747,"byte_end":206753,"line_start":122,"line_end":122,"column_start":31,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2575},"to":{"krate":0,"index":1954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":221823,"byte_end":221830,"line_start":91,"line_end":91,"column_start":6,"column_end":13},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":227943,"byte_end":227947,"line_start":270,"line_end":270,"column_start":23,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2598},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228357,"byte_end":228364,"line_start":287,"line_end":287,"column_start":56,"column_end":63},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":7786}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228696,"byte_end":228703,"line_start":297,"line_end":297,"column_start":33,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":7786}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":228980,"byte_end":228987,"line_start":307,"line_end":307,"column_start":41,"column_end":48},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2591},"to":{"krate":2,"index":7786}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":231072,"byte_end":231079,"line_start":375,"line_end":375,"column_start":21,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":1343}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232418,"byte_end":232433,"line_start":416,"line_end":416,"column_start":6,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232559,"byte_end":232574,"line_start":423,"line_end":423,"column_start":23,"column_end":38},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2605},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":232696,"byte_end":232711,"line_start":429,"line_end":429,"column_start":21,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2605},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233196,"byte_end":233212,"line_start":447,"line_end":447,"column_start":6,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/baggage.rs","byte_start":233596,"byte_end":233612,"line_start":463,"line_end":463,"column_start":25,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2620},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":238622,"byte_end":238629,"line_start":81,"line_end":81,"column_start":6,"column_end":13},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":245595,"byte_end":245602,"line_start":297,"line_end":297,"column_start":21,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2642},"to":{"krate":2,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":246080,"byte_end":246092,"line_start":313,"line_end":313,"column_start":15,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":3300}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/context.rs","byte_start":246965,"byte_end":246973,"line_start":337,"line_end":337,"column_start":17,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2648},"to":{"krate":2,"index":9904}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":248576,"byte_end":248579,"line_start":11,"line_end":11,"column_start":6,"column_end":9},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250055,"byte_end":250058,"line_start":68,"line_end":68,"column_start":29,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2657},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250206,"byte_end":250209,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2657},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250348,"byte_end":250354,"line_start":82,"line_end":82,"column_start":20,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":5,"index":7626},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250495,"byte_end":250498,"line_start":89,"line_end":89,"column_start":23,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2657},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":250968,"byte_end":250973,"line_start":109,"line_end":109,"column_start":23,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2678},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":252665,"byte_end":252670,"line_start":175,"line_end":175,"column_start":6,"column_end":11},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253582,"byte_end":253587,"line_start":213,"line_end":213,"column_start":29,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253765,"byte_end":253770,"line_start":220,"line_end":220,"column_start":23,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":253936,"byte_end":253941,"line_start":227,"line_end":227,"column_start":23,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2707},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/common.rs","byte_start":254698,"byte_end":254706,"line_start":249,"line_end":249,"column_start":6,"column_end":14},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255651,"byte_end":255656,"line_start":17,"line_end":17,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2679},"to":{"krate":0,"index":1518}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255659,"byte_end":255663,"line_start":17,"line_end":17,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":1518}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/runtime.rs","byte_start":255666,"byte_end":255670,"line_start":17,"line_end":17,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":1518}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":268342,"byte_end":268347,"line_start":14,"line_end":14,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":1547}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270010,"byte_end":270019,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/text_map_propagator.rs","byte_start":270204,"byte_end":270213,"line_start":66,"line_end":66,"column_start":23,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2750},"to":{"krate":2,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266633,"byte_end":266640,"line_start":185,"line_end":185,"column_start":46,"column_end":53},"kind":{"Impl":{"id":99}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":1564}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/propagation/mod.rs","byte_start":266859,"byte_end":266866,"line_start":192,"line_end":192,"column_start":47,"column_end":54},"kind":{"Impl":{"id":100}},"from":{"krate":1,"index":1294},"to":{"krate":0,"index":1566}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281037,"byte_end":281044,"line_start":30,"line_end":30,"column_start":6,"column_end":13},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":281353,"byte_end":281360,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":285993,"byte_end":286000,"line_start":160,"line_end":160,"column_start":26,"column_end":33},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2642},"to":{"krate":0,"index":1660}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289529,"byte_end":289530,"line_start":270,"line_end":270,"column_start":30,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1682},"to":{"krate":0,"index":1699}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289588,"byte_end":289599,"line_start":272,"line_end":272,"column_start":54,"column_end":65},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2825},"to":{"krate":2,"index":13100}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":289899,"byte_end":289910,"line_start":283,"line_end":283,"column_start":46,"column_end":57},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2825},"to":{"krate":30,"index":96}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":290230,"byte_end":290241,"line_start":293,"line_end":293,"column_start":51,"column_end":62},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2825},"to":{"krate":35,"index":17}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/context.rs","byte_start":291437,"byte_end":291442,"line_start":334,"line_end":334,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3062},"to":{"krate":0,"index":1699}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":292960,"byte_end":292978,"line_start":22,"line_end":22,"column_start":6,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293135,"byte_end":293153,"line_start":29,"line_end":29,"column_start":32,"column_end":50},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2829},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293664,"byte_end":293672,"line_start":49,"line_end":49,"column_start":18,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":293740,"byte_end":293748,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2837},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":294132,"byte_end":294140,"line_start":70,"line_end":70,"column_start":22,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2837},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295327,"byte_end":295337,"line_start":123,"line_end":123,"column_start":6,"column_end":16},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":295469,"byte_end":295479,"line_start":130,"line_end":130,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2843},"to":{"krate":0,"index":1954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":296865,"byte_end":296881,"line_start":180,"line_end":180,"column_start":6,"column_end":22},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/noop.rs","byte_start":297039,"byte_end":297055,"line_start":188,"line_end":188,"column_start":23,"column_end":39},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2851},"to":{"krate":0,"index":2223}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":300231,"byte_end":300236,"line_start":26,"line_end":26,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":1793}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":310530,"byte_end":310538,"line_start":230,"line_end":230,"column_start":23,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2862},"to":{"krate":2,"index":9694}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span.rs","byte_start":311363,"byte_end":311373,"line_start":256,"line_end":256,"column_start":6,"column_end":16},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":313321,"byte_end":313331,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314352,"byte_end":314362,"line_start":67,"line_end":67,"column_start":17,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":3184}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314492,"byte_end":314502,"line_start":75,"line_end":75,"column_start":16,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314629,"byte_end":314639,"line_start":83,"line_end":83,"column_start":14,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":3177}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":314756,"byte_end":314766,"line_start":91,"line_end":91,"column_start":24,"column_end":34},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":9700}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":315200,"byte_end":315207,"line_start":103,"line_end":103,"column_start":6,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":316457,"byte_end":316463,"line_start":146,"line_end":146,"column_start":6,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":317892,"byte_end":317902,"line_start":194,"line_end":194,"column_start":6,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":324061,"byte_end":324071,"line_start":366,"line_end":366,"column_start":18,"column_end":28},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":12326}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/span_context.rs","byte_start":326201,"byte_end":326212,"line_start":419,"line_end":419,"column_start":6,"column_end":17},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":336933,"byte_end":336938,"line_start":159,"line_end":159,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":1954}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer.rs","byte_start":345150,"byte_end":345161,"line_start":368,"line_end":368,"column_start":6,"column_end":17},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/tracer_provider.rs","byte_start":348716,"byte_end":348721,"line_start":5,"line_end":5,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":2004}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277034,"byte_end":277044,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277194,"byte_end":277204,"line_start":224,"line_end":224,"column_start":35,"column_end":45},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277343,"byte_end":277353,"line_start":230,"line_end":230,"column_start":25,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277465,"byte_end":277475,"line_start":236,"line_end":236,"column_start":23,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277607,"byte_end":277617,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3032},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277879,"byte_end":277883,"line_start":254,"line_end":254,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3057},"to":{"krate":0,"index":2085}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277886,"byte_end":277890,"line_start":254,"line_end":254,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3069},"to":{"krate":0,"index":2085}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":277898,"byte_end":277903,"line_start":254,"line_end":254,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":9687},"to":{"krate":0,"index":2085}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":278558,"byte_end":278563,"line_start":277,"line_end":277,"column_start":6,"column_end":11},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/opentelemetry-0.16.0/src/trace/mod.rs","byte_start":279631,"byte_end":279635,"line_start":314,"line_end":314,"column_start":6,"column_end":10},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3088},"to":{"krate":4294967295,"index":4294967295}}]}