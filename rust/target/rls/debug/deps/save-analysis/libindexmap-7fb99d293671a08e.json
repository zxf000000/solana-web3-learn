{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0","program":"/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","--edition=2021","/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"rayon\"","--cfg","feature=\"std\"","-C","metadata=7fb99d293671a08e","-C","extra-filename=-7fb99d293671a08e","--out-dir","/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","-L","dependency=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps","--extern","hashbrown=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libhashbrown-c794a2b63d714c28.rmeta","--extern","rayon=/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/librayon-62926fcae1309d80.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/mr.zhou/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/mr.zhou/Desktop/Demos/rust_learn/sol-learn-program/target/rls/debug/deps/libindexmap-7fb99d293671a08e.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[11141109573793916660,0]},"crate_root":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src","external_crates":[{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[8278583129772197859,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[14913712660212466740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[169217235897429410,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3895911861305942990,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[17588522495838200792,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9813622304494305451,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12767531755122486811,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11042621516499360545,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12900059087317885891,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2276627185568532740,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6031887558045411683,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1726102652612607821,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[14945886052262342754,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[329292103076465253,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[471687133851620970,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[605306301665063266,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11032979542905123237,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[18407608818322377071,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[7683813092153219624,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","num":20,"id":{"name":"hashbrown","disambiguator":[6040827279045001319,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":21,"id":{"name":"rayon","disambiguator":[13563854756603728116,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":22,"id":{"name":"either","disambiguator":[8915813465156508515,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":23,"id":{"name":"rayon_core","disambiguator":[10778663765577431455,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":24,"id":{"name":"crossbeam_channel","disambiguator":[9663112012901306814,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":25,"id":{"name":"cfg_if","disambiguator":[7879366453308980228,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":26,"id":{"name":"crossbeam_utils","disambiguator":[12022175608593352832,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":27,"id":{"name":"once_cell","disambiguator":[16438231570947150907,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":28,"id":{"name":"crossbeam_deque","disambiguator":[2684632936734487536,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":29,"id":{"name":"crossbeam_epoch","disambiguator":[3583303191775498507,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":30,"id":{"name":"scopeguard","disambiguator":[3001932468802176528,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":31,"id":{"name":"memoffset","disambiguator":[3842014736581765161,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":32,"id":{"name":"num_cpus","disambiguator":[1020557586879873658,0]}},{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","num":33,"id":{"name":"libc","disambiguator":[4746252012921055962,0]}}],"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":92,"byte_end":5461,"line_start":2,"line_end":193,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91544,"byte_end":91557,"line_start":598,"line_end":598,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":14628,"byte_end":14639,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1347},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":14690,"byte_end":14693,"line_start":9,"line_end":9,"column_start":23,"column_end":26},"alias_span":null,"name":"rayon","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":276},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15187,"byte_end":15192,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15194,"byte_end":15207,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15209,"byte_end":15220,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":83}},{"kind":"Use","ref_id":{"krate":0,"index":1609},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102240,"byte_end":102243,"line_start":4,"line_end":4,"column_start":23,"column_end":26},"alias_span":null,"name":"rayon","value":"","parent":{"krate":0,"index":872}},{"kind":"Use","ref_id":{"krate":0,"index":24},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3608,"byte_end":3618,"line_start":109,"line_end":109,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3640,"byte_end":3648,"line_start":110,"line_end":110,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3670,"byte_end":3678,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":92,"byte_end":5461,"line_start":2,"line_end":193,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":20},{"krate":0,"index":31},{"krate":0,"index":66},{"krate":0,"index":83},{"krate":0,"index":872},{"krate":0,"index":1339},{"krate":0,"index":1880},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":1889},{"krate":0,"index":2115},{"krate":0,"index":2121},{"krate":0,"index":2124},{"krate":0,"index":1891},{"krate":0,"index":1896},{"krate":0,"index":1908}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Alternate Hashers","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ to use alternate hashers:","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use fnv::FnvBuildHasher;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ use fxhash::FxBuildHasher;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/ type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(std, fnv);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(std, fx);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.56.1 or later.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":1989,"byte_end":2048,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2049,"byte_end":2052,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2053,"byte_end":2128,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2129,"byte_end":2204,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2205,"byte_end":2231,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2232,"byte_end":2235,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2236,"byte_end":2270,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2271,"byte_end":2274,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate supports being built without `std`, requiring","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2275,"byte_end":2335,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2336,"byte_end":2411,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2412,"byte_end":2486,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2487,"byte_end":2556,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2557,"byte_end":2560,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2561,"byte_end":2622,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2623,"byte_end":2701,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2702,"byte_end":2747,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2748,"byte_end":2793,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2794,"byte_end":2873,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2874,"byte_end":2942,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2943,"byte_end":2976,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":2977,"byte_end":3052,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3053,"byte_end":3056,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3057,"byte_end":3105,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":24},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":11028,"byte_end":11038,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10638,"byte_end":10664,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10665,"byte_end":10668,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10669,"byte_end":10726,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10727,"byte_end":10805,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10806,"byte_end":10886,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10887,"byte_end":10931,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10932,"byte_end":10935,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10936,"byte_end":10950,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10951,"byte_end":10954,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":10955,"byte_end":11017,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":11126,"byte_end":11136,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":11056,"byte_end":11118,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11432,"byte_end":11445,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11995,"byte_end":12006,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11450,"byte_end":11484,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11485,"byte_end":11488,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11489,"byte_end":11569,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11570,"byte_end":11585,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modification","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11586,"byte_end":11661,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11662,"byte_end":11714,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11715,"byte_end":11718,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erroneously, you can no longer look them up.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11719,"byte_end":11788,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11789,"byte_end":11858,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11859,"byte_end":11921,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11922,"byte_end":11925,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":11926,"byte_end":11984,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12018,"byte_end":12021,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12032,"byte_end":12037,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12109,"byte_end":12122,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12044,"byte_end":12101,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12558,"byte_end":12565,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12286,"byte_end":12358,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12363,"byte_end":12397,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12402,"byte_end":12405,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12410,"byte_end":12482,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12487,"byte_end":12497,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12502,"byte_end":12505,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12510,"byte_end":12550,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12857,"byte_end":12873,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12664,"byte_end":12743,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12748,"byte_end":12815,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":12820,"byte_end":12849,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":425},{"krate":0,"index":431},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":473},{"krate":0,"index":544},{"krate":0,"index":558},{"krate":0,"index":563},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":582},{"krate":0,"index":586},{"krate":0,"index":590},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":613},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":660},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":687},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":706},{"krate":0,"index":710},{"krate":0,"index":715},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":734},{"krate":0,"index":738},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":761},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":779},{"krate":0,"index":787},{"krate":0,"index":795},{"krate":0,"index":802},{"krate":0,"index":809},{"krate":0,"index":815},{"krate":0,"index":821},{"krate":0,"index":826},{"krate":0,"index":832},{"krate":0,"index":839},{"krate":0,"index":846},{"krate":0,"index":854},{"krate":0,"index":859},{"krate":0,"index":868}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":14456,"byte_end":14529,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":14530,"byte_end":14586,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":98843,"byte_end":98856,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":98571,"byte_end":98621,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":98622,"byte_end":98659,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":98660,"byte_end":98663,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":98664,"byte_end":98694,"line_start":105,"line_end":105,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99587,"byte_end":99590,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key in the map.","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99257,"byte_end":99308,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99313,"byte_end":99316,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that this is not the key that was used to find the entry. There may be an observable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99321,"byte_end":99414,"line_start":122,"line_end":122,"column_start":5,"column_end":98}},{"value":"/ difference if the key type has any distinguishing features outside of `Hash` and `Eq`, like","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99419,"byte_end":99514,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ extra fields or the memory address of an allocation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99519,"byte_end":99575,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99726,"byte_end":99729,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's value in the map.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's value in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99661,"byte_end":99714,"line_start":129,"line_end":129,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99995,"byte_end":100002,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the entry's value in the map.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the entry's value in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99802,"byte_end":99863,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99868,"byte_end":99871,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you need a reference which may outlive the destruction of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99876,"byte_end":99944,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99949,"byte_end":99983,"line_start":137,"line_end":137,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100414,"byte_end":100419,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100346,"byte_end":100388,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100393,"byte_end":100402,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100689,"byte_end":100697,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts into a mutable reference to the entry's value in the map,\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts into a mutable reference to the entry's value in the map,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100558,"byte_end":100628,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100633,"byte_end":100677,"line_start":158,"line_end":158,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101159,"byte_end":101176,"line_start":171,"line_end":171,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100807,"byte_end":100881,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100886,"byte_end":100889,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100894,"byte_end":100966,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":100971,"byte_end":101034,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101039,"byte_end":101094,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101099,"byte_end":101102,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101107,"byte_end":101147,"line_start":170,"line_end":170,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101826,"byte_end":101844,"line_start":185,"line_end":185,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101480,"byte_end":101554,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101559,"byte_end":101562,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101567,"byte_end":101633,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101638,"byte_end":101699,"line_start":181,"line_end":181,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101704,"byte_end":101761,"line_start":182,"line_end":182,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101766,"byte_end":101769,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":101774,"byte_end":101814,"line_start":184,"line_end":184,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":280},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88023,"byte_end":88031,"line_start":494,"line_end":494,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":87980,"byte_end":88018,"line_start":493,"line_end":493,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":283},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88114,"byte_end":88120,"line_start":496,"line_end":496,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":276},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88062,"byte_end":88109,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":276},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":87958,"byte_end":87963,"line_start":492,"line_end":492,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":283}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":87868,"byte_end":87932,"line_start":490,"line_end":490,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":87933,"byte_end":87948,"line_start":491,"line_end":491,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88443,"byte_end":88452,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given default value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the given default value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88185,"byte_end":88271,"line_start":500,"line_end":500,"column_start":5,"column_end":91}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88276,"byte_end":88368,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88373,"byte_end":88376,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88381,"byte_end":88431,"line_start":503,"line_end":503,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88911,"byte_end":88925,"line_start":515,"line_end":515,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88643,"byte_end":88739,"line_start":511,"line_end":511,"column_start":5,"column_end":101}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88744,"byte_end":88836,"line_start":512,"line_end":512,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88841,"byte_end":88844,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88849,"byte_end":88899,"line_start":514,"line_end":514,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89466,"byte_end":89484,"line_start":530,"line_end":530,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function with a reference to the entry's key if it is\n vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to\n an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function with a reference to the entry's key if it is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89155,"byte_end":89245,"line_start":525,"line_end":525,"column_start":5,"column_end":95}},{"value":"/ vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89250,"byte_end":89344,"line_start":526,"line_end":526,"column_start":5,"column_end":99}},{"value":"/ an already existent value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89349,"byte_end":89391,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89396,"byte_end":89399,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89404,"byte_end":89454,"line_start":529,"line_end":529,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89940,"byte_end":89943,"line_start":545,"line_end":545,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key, either within the map if occupied,\n or else the new key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key, either within the map if occupied,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89792,"byte_end":89867,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ or else the new key that was used to find the entry.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":89872,"byte_end":89928,"line_start":544,"line_end":544,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90195,"byte_end":90200,"line_start":553,"line_end":553,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90110,"byte_end":90183,"line_start":552,"line_end":552,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90427,"byte_end":90437,"line_start":561,"line_end":561,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90374,"byte_end":90415,"line_start":560,"line_end":560,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90949,"byte_end":90959,"line_start":578,"line_end":578,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90687,"byte_end":90777,"line_start":574,"line_end":574,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90782,"byte_end":90874,"line_start":575,"line_end":575,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90879,"byte_end":90882,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":90887,"byte_end":90937,"line_start":577,"line_end":577,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91754,"byte_end":91760,"line_start":603,"line_end":603,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91664,"byte_end":91742,"line_start":602,"line_end":602,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92003,"byte_end":92009,"line_start":610,"line_end":610,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91839,"byte_end":91925,"line_start":607,"line_end":607,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91930,"byte_end":91933,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91938,"byte_end":91991,"line_start":609,"line_end":609,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92425,"byte_end":92436,"line_start":621,"line_end":621,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92061,"byte_end":92147,"line_start":614,"line_end":614,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92152,"byte_end":92155,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92160,"byte_end":92232,"line_start":616,"line_end":616,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92237,"byte_end":92300,"line_start":617,"line_end":617,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92305,"byte_end":92360,"line_start":618,"line_end":618,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92365,"byte_end":92368,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92373,"byte_end":92413,"line_start":620,"line_end":620,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92854,"byte_end":92866,"line_start":632,"line_end":632,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92496,"byte_end":92582,"line_start":625,"line_end":625,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92587,"byte_end":92590,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92595,"byte_end":92661,"line_start":627,"line_end":627,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92666,"byte_end":92727,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92732,"byte_end":92789,"line_start":629,"line_end":629,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92794,"byte_end":92797,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92802,"byte_end":92842,"line_start":631,"line_end":631,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93085,"byte_end":93097,"line_start":639,"line_end":639,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":92927,"byte_end":93001,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93006,"byte_end":93009,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93014,"byte_end":93073,"line_start":638,"line_end":638,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93588,"byte_end":93599,"line_start":657,"line_end":657,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93456,"byte_end":93503,"line_start":653,"line_end":653,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93504,"byte_end":93541,"line_start":654,"line_end":654,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93542,"byte_end":93545,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93546,"byte_end":93576,"line_start":656,"line_end":656,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93804,"byte_end":93807,"line_start":665,"line_end":665,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that was used to find the entry.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93728,"byte_end":93792,"line_start":664,"line_end":664,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93921,"byte_end":93929,"line_start":670,"line_end":670,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the key, leaving the entry vacant.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the key, leaving the entry vacant.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93852,"byte_end":93909,"line_start":669,"line_end":669,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94046,"byte_end":94051,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93971,"byte_end":94034,"line_start":674,"line_end":674,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94231,"byte_end":94237,"line_start":681,"line_end":681,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the entry's key and the given value into the map, and returns a mutable reference\n to the value.\n","sig":null,"attributes":[{"value":"/ Inserts the entry's key and the given value into the map, and returns a mutable reference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94104,"byte_end":94197,"line_start":679,"line_end":679,"column_start":5,"column_end":98}},{"value":"/ to the value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94202,"byte_end":94219,"line_start":680,"line_end":680,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16660,"byte_end":16668,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15224,"byte_end":15304,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15305,"byte_end":15340,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15341,"byte_end":15344,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15345,"byte_end":15422,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15423,"byte_end":15451,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15452,"byte_end":15455,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15456,"byte_end":15467,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15468,"byte_end":15471,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15472,"byte_end":15541,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15542,"byte_end":15616,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15617,"byte_end":15672,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15673,"byte_end":15676,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15677,"byte_end":15727,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15728,"byte_end":15731,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15732,"byte_end":15806,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15807,"byte_end":15883,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15884,"byte_end":15949,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15950,"byte_end":15953,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15954,"byte_end":15967,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15968,"byte_end":15971,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":15972,"byte_end":16047,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16048,"byte_end":16123,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16124,"byte_end":16203,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16204,"byte_end":16214,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16215,"byte_end":16218,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16219,"byte_end":16233,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16234,"byte_end":16237,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16238,"byte_end":16245,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16246,"byte_end":16273,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16274,"byte_end":16277,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16278,"byte_end":16334,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16335,"byte_end":16373,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16374,"byte_end":16425,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16426,"byte_end":16471,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16472,"byte_end":16477,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16478,"byte_end":16481,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16482,"byte_end":16515,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16516,"byte_end":16549,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16550,"byte_end":16583,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16584,"byte_end":16624,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16625,"byte_end":16632,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16633,"byte_end":16648,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18396,"byte_end":18399,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18328,"byte_end":18370,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18375,"byte_end":18384,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18626,"byte_end":18639,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18454,"byte_end":18523,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18528,"byte_end":18557,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18562,"byte_end":18565,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18570,"byte_end":18600,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18605,"byte_end":18614,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18937,"byte_end":18961,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18765,"byte_end":18834,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18839,"byte_end":18868,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18873,"byte_end":18876,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18881,"byte_end":18911,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18916,"byte_end":18925,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19373,"byte_end":19384,"line_start":182,"line_end":182,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19222,"byte_end":19263,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19268,"byte_end":19271,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19276,"byte_end":19311,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19316,"byte_end":19355,"line_start":181,"line_end":181,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19559,"byte_end":19567,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19517,"byte_end":19547,"line_start":189,"line_end":189,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19688,"byte_end":19694,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19626,"byte_end":19676,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19869,"byte_end":19872,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19748,"byte_end":19800,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19805,"byte_end":19808,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19813,"byte_end":19843,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19848,"byte_end":19857,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20044,"byte_end":20052,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19926,"byte_end":19975,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19980,"byte_end":19983,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":19988,"byte_end":20018,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20023,"byte_end":20032,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20191,"byte_end":20195,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20105,"byte_end":20179,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20389,"byte_end":20397,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20303,"byte_end":20377,"line_start":222,"line_end":222,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20598,"byte_end":20602,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20523,"byte_end":20586,"line_start":229,"line_end":229,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20792,"byte_end":20801,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<IndexMap<K, V, S>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the keys of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20710,"byte_end":20780,"line_start":236,"line_end":236,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20996,"byte_end":21002,"line_start":244,"line_end":244,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":20919,"byte_end":20984,"line_start":243,"line_end":243,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21221,"byte_end":21231,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the values of the map,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21114,"byte_end":21186,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21191,"byte_end":21209,"line_start":251,"line_end":251,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21445,"byte_end":21456,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"into_values","qualname":"<IndexMap<K, V, S>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the values of the map, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21361,"byte_end":21433,"line_start":258,"line_end":258,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21706,"byte_end":21711,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21578,"byte_end":21651,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21656,"byte_end":21659,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21664,"byte_end":21694,"line_start":267,"line_end":267,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21939,"byte_end":21947,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexMap<K, V, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the map, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the map, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21763,"byte_end":21840,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21845,"byte_end":21848,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the map's current length, this has no effect.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":21853,"byte_end":21927,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22699,"byte_end":22704,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22017,"byte_end":22084,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22089,"byte_end":22129,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22134,"byte_end":22137,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22142,"byte_end":22209,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22214,"byte_end":22288,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22293,"byte_end":22369,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22374,"byte_end":22399,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22404,"byte_end":22407,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22412,"byte_end":22484,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22489,"byte_end":22539,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22544,"byte_end":22547,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22552,"byte_end":22626,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22631,"byte_end":22687,"line_start":291,"line_end":291,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23214,"byte_end":23223,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexMap<K, V, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22874,"byte_end":22928,"line_start":301,"line_end":301,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22933,"byte_end":22936,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated map containing the elements in the range","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":22941,"byte_end":23011,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original map will be left containing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23016,"byte_end":23089,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23094,"byte_end":23158,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23163,"byte_end":23166,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23171,"byte_end":23202,"line_start":307,"line_end":307,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23614,"byte_end":23621,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23500,"byte_end":23559,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23564,"byte_end":23567,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23572,"byte_end":23602,"line_start":326,"line_end":326,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23814,"byte_end":23827,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23704,"byte_end":23759,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23764,"byte_end":23767,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23772,"byte_end":23802,"line_start":333,"line_end":333,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23993,"byte_end":24002,"line_start":341,"line_end":341,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<IndexMap<K, V, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map with a lower limit.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map with a lower limit.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23884,"byte_end":23938,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23943,"byte_end":23946,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23951,"byte_end":23981,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24930,"byte_end":24936,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24278,"byte_end":24317,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24322,"byte_end":24325,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24330,"byte_end":24401,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24406,"byte_end":24479,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24484,"byte_end":24550,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24555,"byte_end":24558,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24563,"byte_end":24633,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24638,"byte_end":24690,"line_start":358,"line_end":358,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24695,"byte_end":24698,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24703,"byte_end":24753,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24758,"byte_end":24761,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24766,"byte_end":24841,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":24846,"byte_end":24918,"line_start":363,"line_end":363,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25722,"byte_end":25733,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25031,"byte_end":25091,"line_start":368,"line_end":368,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25096,"byte_end":25099,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25104,"byte_end":25175,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25180,"byte_end":25253,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25258,"byte_end":25333,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25338,"byte_end":25341,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25346,"byte_end":25416,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25421,"byte_end":25482,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25487,"byte_end":25490,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25495,"byte_end":25545,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25550,"byte_end":25553,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25558,"byte_end":25633,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25638,"byte_end":25710,"line_start":380,"line_end":380,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26065,"byte_end":26070,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25882,"byte_end":25959,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25964,"byte_end":25990,"line_start":387,"line_end":387,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":25995,"byte_end":25998,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26003,"byte_end":26053,"line_start":389,"line_end":389,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26320,"byte_end":26332,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26193,"byte_end":26255,"line_start":395,"line_end":395,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26260,"byte_end":26263,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26268,"byte_end":26308,"line_start":397,"line_end":397,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26626,"byte_end":26629,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26469,"byte_end":26540,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26545,"byte_end":26561,"line_start":406,"line_end":406,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26566,"byte_end":26569,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26574,"byte_end":26614,"line_start":408,"line_end":408,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27068,"byte_end":27081,"line_start":425,"line_end":425,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26903,"byte_end":26964,"line_start":421,"line_end":421,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":26969,"byte_end":27003,"line_start":422,"line_end":422,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27008,"byte_end":27011,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27016,"byte_end":27056,"line_start":424,"line_end":424,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27423,"byte_end":27431,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27375,"byte_end":27411,"line_start":437,"line_end":437,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27846,"byte_end":27858,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27735,"byte_end":27781,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27786,"byte_end":27789,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":27794,"byte_end":27834,"line_start":452,"line_end":452,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":28128,"byte_end":28135,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":28436,"byte_end":28448,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29480,"byte_end":29486,"line_start":512,"line_end":512,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29159,"byte_end":29219,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29224,"byte_end":29238,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29243,"byte_end":29246,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29251,"byte_end":29322,"line_start":507,"line_end":507,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29327,"byte_end":29398,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29403,"byte_end":29415,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29420,"byte_end":29423,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29428,"byte_end":29468,"line_start":511,"line_end":511,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29936,"byte_end":29948,"line_start":526,"line_end":526,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29621,"byte_end":29682,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29687,"byte_end":29690,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29695,"byte_end":29772,"line_start":521,"line_end":521,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29777,"byte_end":29854,"line_start":522,"line_end":522,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29859,"byte_end":29871,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29876,"byte_end":29879,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":29884,"byte_end":29924,"line_start":525,"line_end":525,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30505,"byte_end":30516,"line_start":543,"line_end":543,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30094,"byte_end":30154,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30159,"byte_end":30173,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30178,"byte_end":30181,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30186,"byte_end":30258,"line_start":536,"line_end":536,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30263,"byte_end":30326,"line_start":537,"line_end":537,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30331,"byte_end":30386,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30391,"byte_end":30394,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30399,"byte_end":30440,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30445,"byte_end":30448,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30453,"byte_end":30493,"line_start":542,"line_end":542,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31060,"byte_end":31077,"line_start":559,"line_end":559,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30667,"byte_end":30728,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30733,"byte_end":30736,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30741,"byte_end":30813,"line_start":552,"line_end":552,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30818,"byte_end":30881,"line_start":553,"line_end":553,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30886,"byte_end":30941,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30946,"byte_end":30949,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":30954,"byte_end":30995,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31000,"byte_end":31003,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31008,"byte_end":31048,"line_start":558,"line_end":558,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31748,"byte_end":31764,"line_start":579,"line_end":579,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31323,"byte_end":31390,"line_start":569,"line_end":569,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31395,"byte_end":31416,"line_start":570,"line_end":570,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31421,"byte_end":31424,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31429,"byte_end":31501,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31506,"byte_end":31569,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31574,"byte_end":31629,"line_start":574,"line_end":574,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31634,"byte_end":31637,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31642,"byte_end":31683,"line_start":576,"line_end":576,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31688,"byte_end":31691,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":31696,"byte_end":31736,"line_start":578,"line_end":578,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32431,"byte_end":32443,"line_start":600,"line_end":600,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32026,"byte_end":32086,"line_start":590,"line_end":590,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32091,"byte_end":32105,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32110,"byte_end":32113,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32118,"byte_end":32184,"line_start":593,"line_end":593,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32189,"byte_end":32250,"line_start":594,"line_end":594,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32255,"byte_end":32312,"line_start":595,"line_end":595,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32317,"byte_end":32320,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32325,"byte_end":32366,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32371,"byte_end":32374,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32379,"byte_end":32419,"line_start":599,"line_end":599,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32982,"byte_end":33000,"line_start":616,"line_end":616,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32595,"byte_end":32656,"line_start":607,"line_end":607,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32661,"byte_end":32664,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32669,"byte_end":32735,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32740,"byte_end":32801,"line_start":610,"line_end":610,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32806,"byte_end":32863,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32868,"byte_end":32871,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32876,"byte_end":32917,"line_start":613,"line_end":613,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32922,"byte_end":32925,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":32930,"byte_end":32970,"line_start":615,"line_end":615,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33666,"byte_end":33683,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33247,"byte_end":33314,"line_start":626,"line_end":626,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33319,"byte_end":33340,"line_start":627,"line_end":627,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33345,"byte_end":33348,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33353,"byte_end":33419,"line_start":629,"line_end":629,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33424,"byte_end":33485,"line_start":630,"line_end":630,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33490,"byte_end":33547,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33552,"byte_end":33555,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33560,"byte_end":33601,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33606,"byte_end":33609,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33614,"byte_end":33654,"line_start":635,"line_end":635,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34113,"byte_end":34116,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33946,"byte_end":33980,"line_start":647,"line_end":647,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33985,"byte_end":33988,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":33993,"byte_end":34048,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34053,"byte_end":34056,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34061,"byte_end":34101,"line_start":651,"line_end":651,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34459,"byte_end":34465,"line_start":663,"line_end":663,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34183,"byte_end":34255,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34260,"byte_end":34294,"line_start":657,"line_end":657,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34299,"byte_end":34302,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34307,"byte_end":34379,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34384,"byte_end":34394,"line_start":660,"line_end":660,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34399,"byte_end":34402,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34407,"byte_end":34447,"line_start":662,"line_end":662,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34920,"byte_end":34929,"line_start":680,"line_end":680,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34775,"byte_end":34848,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34853,"byte_end":34856,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":34861,"byte_end":34908,"line_start":679,"line_end":679,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35519,"byte_end":35526,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35104,"byte_end":35170,"line_start":689,"line_end":689,"column_start":5,"column_end":69}},{"value":"/ function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35175,"byte_end":35194,"line_start":690,"line_end":690,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35199,"byte_end":35202,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35207,"byte_end":35283,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35288,"byte_end":35351,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35356,"byte_end":35359,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35364,"byte_end":35435,"line_start":695,"line_end":695,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35440,"byte_end":35507,"line_start":696,"line_end":696,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35929,"byte_end":35938,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35763,"byte_end":35836,"line_start":706,"line_end":706,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35841,"byte_end":35881,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35886,"byte_end":35889,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":35894,"byte_end":35917,"line_start":709,"line_end":709,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36463,"byte_end":36481,"line_start":725,"line_end":725,"column_start":12,"column_end":30},"name":"sort_unstable_keys","qualname":"<IndexMap<K, V, S>>::sort_unstable_keys","value":"pub fn sort_unstable_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs by the default ordering of the keys, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs by the default ordering of the keys, but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36244,"byte_end":36319,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36324,"byte_end":36373,"line_start":722,"line_end":722,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36378,"byte_end":36381,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36386,"byte_end":36451,"line_start":724,"line_end":724,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37114,"byte_end":37130,"line_start":742,"line_end":742,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexMap<K, V, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs in place using the comparison function `cmp`, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs in place using the comparison function `cmp`, but","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36665,"byte_end":36749,"line_start":734,"line_end":734,"column_start":5,"column_end":89}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36754,"byte_end":36803,"line_start":735,"line_end":735,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36808,"byte_end":36811,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36816,"byte_end":36892,"line_start":737,"line_end":737,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36897,"byte_end":36960,"line_start":738,"line_end":738,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36965,"byte_end":36968,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time where *n* is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":36973,"byte_end":37025,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/ the length of the map and *c* is the capacity. The sort is unstable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37030,"byte_end":37102,"line_start":741,"line_end":741,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37558,"byte_end":37576,"line_start":756,"line_end":756,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexMap<K, V, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<K, V> where\nF: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37376,"byte_end":37449,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37454,"byte_end":37494,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37499,"byte_end":37502,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The sort is unstable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37507,"byte_end":37532,"line_start":754,"line_end":754,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37537,"byte_end":37546,"line_start":755,"line_end":755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38028,"byte_end":38035,"line_start":770,"line_end":770,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37891,"byte_end":37954,"line_start":767,"line_end":767,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37959,"byte_end":37962,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":37967,"byte_end":38016,"line_start":769,"line_end":769,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38272,"byte_end":38281,"line_start":781,"line_end":781,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38124,"byte_end":38157,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38162,"byte_end":38165,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38170,"byte_end":38217,"line_start":778,"line_end":778,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38222,"byte_end":38225,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38230,"byte_end":38260,"line_start":780,"line_end":780,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38539,"byte_end":38552,"line_start":790,"line_end":790,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38391,"byte_end":38424,"line_start":785,"line_end":785,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38429,"byte_end":38432,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38437,"byte_end":38484,"line_start":787,"line_end":787,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38489,"byte_end":38492,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38497,"byte_end":38527,"line_start":789,"line_end":789,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38769,"byte_end":38774,"line_start":797,"line_end":797,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexMap<K, V, S>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair","sig":null,"attributes":[{"value":"/ Get the first key-value pair","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38682,"byte_end":38714,"line_start":794,"line_end":794,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38719,"byte_end":38722,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38727,"byte_end":38757,"line_start":796,"line_end":796,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38988,"byte_end":38997,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<IndexMap<K, V, S>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the first key-value pair, with mutable access to the value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38867,"byte_end":38933,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38938,"byte_end":38941,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38946,"byte_end":38976,"line_start":803,"line_end":803,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39195,"byte_end":39199,"line_start":811,"line_end":811,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexMap<K, V, S>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair","sig":null,"attributes":[{"value":"/ Get the last key-value pair","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39109,"byte_end":39140,"line_start":808,"line_end":808,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39145,"byte_end":39148,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39153,"byte_end":39183,"line_start":810,"line_end":810,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39411,"byte_end":39419,"line_start":818,"line_end":818,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<IndexMap<K, V, S>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the last key-value pair, with mutable access to the value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39291,"byte_end":39356,"line_start":815,"line_end":815,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39361,"byte_end":39364,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39369,"byte_end":39399,"line_start":817,"line_end":817,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39906,"byte_end":39923,"line_start":831,"line_end":831,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39530,"byte_end":39568,"line_start":822,"line_end":822,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39573,"byte_end":39576,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39581,"byte_end":39628,"line_start":824,"line_end":824,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39633,"byte_end":39636,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39641,"byte_end":39713,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39718,"byte_end":39781,"line_start":827,"line_end":827,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39786,"byte_end":39841,"line_start":828,"line_end":828,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39846,"byte_end":39849,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":39854,"byte_end":39894,"line_start":830,"line_end":830,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40393,"byte_end":40411,"line_start":844,"line_end":844,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40023,"byte_end":40061,"line_start":835,"line_end":835,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40066,"byte_end":40069,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40074,"byte_end":40121,"line_start":837,"line_end":837,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40126,"byte_end":40129,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40134,"byte_end":40200,"line_start":839,"line_end":839,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40205,"byte_end":40266,"line_start":840,"line_end":840,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40271,"byte_end":40328,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40333,"byte_end":40336,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40341,"byte_end":40381,"line_start":843,"line_end":843,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40951,"byte_end":40961,"line_start":857,"line_end":857,"column_start":12,"column_end":22},"name":"move_index","qualname":"<IndexMap<K, V, S>>::move_index","value":"pub fn move_index(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Moves the position of a key-value pair from one index to another\n by shifting all other pairs in-between.","sig":null,"attributes":[{"value":"/ Moves the position of a key-value pair from one index to another","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40512,"byte_end":40580,"line_start":848,"line_end":848,"column_start":5,"column_end":73}},{"value":"/ by shifting all other pairs in-between.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40585,"byte_end":40628,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40633,"byte_end":40636,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ * If `from < to`, the other pairs will shift down while the targeted pair moves up.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40641,"byte_end":40728,"line_start":851,"line_end":851,"column_start":5,"column_end":92}},{"value":"/ * If `from > to`, the other pairs will shift up while the targeted pair moves down.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40733,"byte_end":40820,"line_start":852,"line_end":852,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40825,"byte_end":40828,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `from` or `to` are out of bounds.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40833,"byte_end":40886,"line_start":854,"line_end":854,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40891,"byte_end":40894,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":40899,"byte_end":40939,"line_start":856,"line_end":856,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41180,"byte_end":41192,"line_start":864,"line_end":864,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexMap<K, V, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Swaps the position of two key-value pairs in the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41049,"byte_end":41106,"line_start":861,"line_end":861,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41111,"byte_end":41114,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41119,"byte_end":41168,"line_start":863,"line_end":863,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":558},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41529,"byte_end":41533,"line_start":876,"line_end":876,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":562}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41272,"byte_end":41318,"line_start":869,"line_end":869,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41319,"byte_end":41322,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41323,"byte_end":41399,"line_start":871,"line_end":871,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41400,"byte_end":41427,"line_start":872,"line_end":872,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41428,"byte_end":41431,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41432,"byte_end":41478,"line_start":874,"line_end":874,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41479,"byte_end":41517,"line_start":875,"line_end":875,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42622,"byte_end":42630,"line_start":920,"line_end":920,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":589}],"decl_id":null,"docs":" An owning iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42343,"byte_end":42396,"line_start":913,"line_end":913,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42397,"byte_end":42400,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`IndexMap`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42401,"byte_end":42474,"line_start":915,"line_end":915,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42475,"byte_end":42510,"line_start":916,"line_end":916,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42511,"byte_end":42514,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42515,"byte_end":42553,"line_start":918,"line_end":918,"column_start":1,"column_end":39}},{"value":"/ [`into_keys`]: struct.IndexMap.html#method.into_keys","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42554,"byte_end":42610,"line_start":919,"line_end":919,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43552,"byte_end":43558,"line_start":956,"line_end":956,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":612}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43287,"byte_end":43335,"line_start":949,"line_end":949,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43336,"byte_end":43339,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43340,"byte_end":43418,"line_start":951,"line_end":951,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43419,"byte_end":43446,"line_start":952,"line_end":952,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43447,"byte_end":43450,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43451,"byte_end":43501,"line_start":954,"line_end":954,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43502,"byte_end":43540,"line_start":955,"line_end":955,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":636},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44670,"byte_end":44679,"line_start":1000,"line_end":1000,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":640}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44386,"byte_end":44441,"line_start":993,"line_end":993,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44442,"byte_end":44445,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44446,"byte_end":44528,"line_start":995,"line_end":995,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44529,"byte_end":44556,"line_start":996,"line_end":996,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44557,"byte_end":44560,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44561,"byte_end":44619,"line_start":998,"line_end":998,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44620,"byte_end":44658,"line_start":999,"line_end":999,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45681,"byte_end":45691,"line_start":1036,"line_end":1036,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":663}],"decl_id":null,"docs":" An owning iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45394,"byte_end":45449,"line_start":1029,"line_end":1029,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45450,"byte_end":45453,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`IndexMap`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45454,"byte_end":45529,"line_start":1031,"line_end":1031,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45530,"byte_end":45565,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45566,"byte_end":45569,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45570,"byte_end":45608,"line_start":1034,"line_end":1034,"column_start":1,"column_end":39}},{"value":"/ [`into_values`]: struct.IndexMap.html#method.into_values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45609,"byte_end":45669,"line_start":1035,"line_end":1035,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":682},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46624,"byte_end":46628,"line_start":1072,"line_end":1072,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":686}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46364,"byte_end":46413,"line_start":1065,"line_end":1065,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46414,"byte_end":46417,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46418,"byte_end":46494,"line_start":1067,"line_end":1067,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46495,"byte_end":46522,"line_start":1068,"line_end":1068,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46523,"byte_end":46526,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46527,"byte_end":46573,"line_start":1070,"line_end":1070,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46574,"byte_end":46612,"line_start":1071,"line_end":1071,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47732,"byte_end":47739,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":714}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47453,"byte_end":47509,"line_start":1109,"line_end":1109,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47510,"byte_end":47513,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47514,"byte_end":47594,"line_start":1111,"line_end":1111,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47595,"byte_end":47622,"line_start":1112,"line_end":1112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47623,"byte_end":47626,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47627,"byte_end":47681,"line_start":1114,"line_end":1114,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47682,"byte_end":47720,"line_start":1115,"line_end":1115,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48777,"byte_end":48785,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":737}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48456,"byte_end":48512,"line_start":1145,"line_end":1145,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48513,"byte_end":48516,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48517,"byte_end":48589,"line_start":1147,"line_end":1147,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48590,"byte_end":48665,"line_start":1148,"line_end":1148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48666,"byte_end":48669,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48670,"byte_end":48726,"line_start":1150,"line_end":1150,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48727,"byte_end":48765,"line_start":1151,"line_end":1151,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":756},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49739,"byte_end":49744,"line_start":1188,"line_end":1188,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":760}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49468,"byte_end":49525,"line_start":1181,"line_end":1181,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49526,"byte_end":49529,"line_start":1182,"line_end":1182,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49530,"byte_end":49607,"line_start":1183,"line_end":1183,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49608,"byte_end":49635,"line_start":1184,"line_end":1184,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49636,"byte_end":49639,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49640,"byte_end":49688,"line_start":1186,"line_end":1186,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49689,"byte_end":49727,"line_start":1187,"line_end":1187,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":872},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":944},{"krate":0,"index":949},{"krate":0,"index":958},{"krate":0,"index":962},{"krate":0,"index":966},{"krate":0,"index":981},{"krate":0,"index":1055},{"krate":0,"index":1067},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1092},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1133},{"krate":0,"index":1139},{"krate":0,"index":1145},{"krate":0,"index":1151},{"krate":0,"index":1157},{"krate":0,"index":1163},{"krate":0,"index":1167},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1187},{"krate":0,"index":1193},{"krate":0,"index":1200},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1211},{"krate":0,"index":1215},{"krate":0,"index":1221},{"krate":0,"index":1228},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1239},{"krate":0,"index":1243},{"krate":0,"index":1249},{"krate":0,"index":1260},{"krate":0,"index":1268},{"krate":0,"index":1272},{"krate":0,"index":1277},{"krate":0,"index":1282},{"krate":0,"index":1287},{"krate":0,"index":1297},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1315},{"krate":0,"index":1321},{"krate":0,"index":1327},{"krate":0,"index":1333}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102147,"byte_end":102190,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":940},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104237,"byte_end":104245,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":943}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102631,"byte_end":102709,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102710,"byte_end":102726,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102727,"byte_end":102730,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102731,"byte_end":102808,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102809,"byte_end":102837,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102838,"byte_end":102841,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102842,"byte_end":102853,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102854,"byte_end":102857,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102858,"byte_end":102934,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":102935,"byte_end":103011,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103012,"byte_end":103087,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103088,"byte_end":103158,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103159,"byte_end":103179,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103180,"byte_end":103183,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103184,"byte_end":103260,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103261,"byte_end":103333,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103334,"byte_end":103388,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103389,"byte_end":103392,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103393,"byte_end":103467,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103468,"byte_end":103544,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103545,"byte_end":103610,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103611,"byte_end":103614,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103615,"byte_end":103628,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103629,"byte_end":103632,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103633,"byte_end":103705,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103706,"byte_end":103785,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103786,"byte_end":103855,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103856,"byte_end":103859,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103860,"byte_end":103874,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103875,"byte_end":103878,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103879,"byte_end":103886,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103887,"byte_end":103914,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103915,"byte_end":103918,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103919,"byte_end":103970,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":103971,"byte_end":104048,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104049,"byte_end":104052,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104053,"byte_end":104089,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104090,"byte_end":104126,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104127,"byte_end":104163,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104164,"byte_end":104201,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104202,"byte_end":104209,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104210,"byte_end":104225,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105689,"byte_end":105692,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105635,"byte_end":105677,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105930,"byte_end":105943,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105779,"byte_end":105831,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105836,"byte_end":105875,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105880,"byte_end":105883,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105888,"byte_end":105918,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106230,"byte_end":106254,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106079,"byte_end":106131,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106136,"byte_end":106175,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106180,"byte_end":106183,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106188,"byte_end":106218,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106553,"byte_end":106564,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106402,"byte_end":106443,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106448,"byte_end":106451,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106456,"byte_end":106491,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106496,"byte_end":106535,"line_start":161,"line_end":161,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106728,"byte_end":106736,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106686,"byte_end":106716,"line_start":168,"line_end":168,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106856,"byte_end":106862,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106794,"byte_end":106844,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107015,"byte_end":107018,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106915,"byte_end":106960,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106965,"byte_end":106968,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106973,"byte_end":107003,"line_start":180,"line_end":180,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107175,"byte_end":107183,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107071,"byte_end":107120,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107125,"byte_end":107128,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107133,"byte_end":107163,"line_start":187,"line_end":187,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107317,"byte_end":107321,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107240,"byte_end":107305,"line_start":192,"line_end":192,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107551,"byte_end":107556,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107430,"byte_end":107496,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107501,"byte_end":107504,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107509,"byte_end":107539,"line_start":201,"line_end":201,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107783,"byte_end":107791,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexSet<T, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the set, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the set, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107607,"byte_end":107684,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107689,"byte_end":107692,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the set's current length, this has no effect.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107697,"byte_end":107771,"line_start":208,"line_end":208,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108533,"byte_end":108538,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107860,"byte_end":107934,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107939,"byte_end":107963,"line_start":214,"line_end":214,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107968,"byte_end":107971,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":107976,"byte_end":108043,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108048,"byte_end":108122,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108127,"byte_end":108203,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108208,"byte_end":108233,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108238,"byte_end":108241,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108246,"byte_end":108318,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108323,"byte_end":108373,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108378,"byte_end":108381,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108386,"byte_end":108460,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108465,"byte_end":108521,"line_start":225,"line_end":225,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109049,"byte_end":109058,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexSet<T, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108709,"byte_end":108763,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108768,"byte_end":108771,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated set containing the elements in the range","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108776,"byte_end":108846,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original set will be left containing","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108851,"byte_end":108924,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108929,"byte_end":108993,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":108998,"byte_end":109001,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109006,"byte_end":109037,"line_start":241,"line_end":241,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109379,"byte_end":109386,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109274,"byte_end":109324,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109329,"byte_end":109332,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109337,"byte_end":109367,"line_start":259,"line_end":259,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109578,"byte_end":109591,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109468,"byte_end":109523,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109528,"byte_end":109531,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109536,"byte_end":109566,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109759,"byte_end":109768,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<IndexSet<T, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set with a lower limit.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set with a lower limit.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109650,"byte_end":109704,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109709,"byte_end":109712,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109717,"byte_end":109747,"line_start":273,"line_end":273,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110208,"byte_end":110214,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109856,"byte_end":109890,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109895,"byte_end":109898,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109903,"byte_end":109966,"line_start":280,"line_end":280,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109971,"byte_end":110032,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110037,"byte_end":110100,"line_start":282,"line_end":282,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110105,"byte_end":110133,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110138,"byte_end":110141,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110146,"byte_end":110196,"line_start":285,"line_end":285,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110752,"byte_end":110763,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110302,"byte_end":110355,"line_start":290,"line_end":290,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110360,"byte_end":110363,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110368,"byte_end":110431,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110436,"byte_end":110495,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110500,"byte_end":110564,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110569,"byte_end":110636,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110641,"byte_end":110677,"line_start":296,"line_end":296,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110682,"byte_end":110685,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":110690,"byte_end":110740,"line_start":298,"line_end":298,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111253,"byte_end":111263,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111085,"byte_end":111159,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111164,"byte_end":111167,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111172,"byte_end":111241,"line_start":314,"line_end":314,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111712,"byte_end":111732,"line_start":330,"line_end":330,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111468,"byte_end":111537,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111542,"byte_end":111562,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111567,"byte_end":111570,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111575,"byte_end":111647,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":111652,"byte_end":111700,"line_start":329,"line_end":329,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112172,"byte_end":112184,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112003,"byte_end":112078,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112083,"byte_end":112086,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112091,"byte_end":112160,"line_start":344,"line_end":344,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112626,"byte_end":112631,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112393,"byte_end":112462,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112467,"byte_end":112470,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112475,"byte_end":112547,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112552,"byte_end":112614,"line_start":358,"line_end":358,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112965,"byte_end":112973,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112836,"byte_end":112900,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112905,"byte_end":112908,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":112913,"byte_end":112953,"line_start":370,"line_end":370,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113266,"byte_end":113269,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113108,"byte_end":113180,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113185,"byte_end":113201,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113206,"byte_end":113209,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113214,"byte_end":113254,"line_start":381,"line_end":381,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113472,"byte_end":113480,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113429,"byte_end":113460,"line_start":389,"line_end":389,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113710,"byte_end":113722,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113652,"byte_end":113698,"line_start":397,"line_end":397,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114111,"byte_end":114118,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one, without altering its insertion order. Returns\n the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113866,"byte_end":113940,"line_start":405,"line_end":405,"column_start":5,"column_end":79}},{"value":"/ equal to the given one, without altering its insertion order. Returns","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":113945,"byte_end":114018,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ the replaced value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114023,"byte_end":114046,"line_start":407,"line_end":407,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114051,"byte_end":114054,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114059,"byte_end":114099,"line_start":409,"line_end":409,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114472,"byte_end":114484,"line_start":419,"line_end":419,"column_start":12,"column_end":24},"name":"replace_full","qualname":"<IndexSet<T, S>>::replace_full","value":"pub fn replace_full(&mut Self, T) -> (usize, Option<T>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one, without altering its insertion order. Returns\n the index of the item and its replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114201,"byte_end":114275,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/ equal to the given one, without altering its insertion order. Returns","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114280,"byte_end":114353,"line_start":415,"line_end":415,"column_start":5,"column_end":78}},{"value":"/ the index of the item and its replaced value.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114358,"byte_end":114407,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114412,"byte_end":114415,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114420,"byte_end":114460,"line_start":418,"line_end":418,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115130,"byte_end":115136,"line_start":438,"line_end":438,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114827,"byte_end":114898,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114903,"byte_end":114906,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114911,"byte_end":114981,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":114986,"byte_end":115065,"line_start":435,"line_end":435,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115070,"byte_end":115073,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115078,"byte_end":115118,"line_start":437,"line_end":437,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115682,"byte_end":115693,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115270,"byte_end":115341,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115346,"byte_end":115349,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115354,"byte_end":115427,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115432,"byte_end":115495,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115500,"byte_end":115555,"line_start":449,"line_end":449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115560,"byte_end":115563,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115568,"byte_end":115617,"line_start":451,"line_end":451,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115622,"byte_end":115625,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115630,"byte_end":115670,"line_start":453,"line_end":453,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116247,"byte_end":116259,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115841,"byte_end":115912,"line_start":461,"line_end":461,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115917,"byte_end":115920,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115925,"byte_end":115992,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":115997,"byte_end":116058,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116063,"byte_end":116120,"line_start":465,"line_end":465,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116125,"byte_end":116128,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116133,"byte_end":116182,"line_start":467,"line_end":467,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116187,"byte_end":116190,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116195,"byte_end":116235,"line_start":469,"line_end":469,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116745,"byte_end":116749,"line_start":485,"line_end":485,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116408,"byte_end":116482,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116487,"byte_end":116501,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116506,"byte_end":116509,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116514,"byte_end":116585,"line_start":480,"line_end":480,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116590,"byte_end":116663,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116668,"byte_end":116680,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116685,"byte_end":116688,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116693,"byte_end":116733,"line_start":484,"line_end":484,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117319,"byte_end":117328,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116886,"byte_end":116960,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116965,"byte_end":116979,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116984,"byte_end":116987,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":116992,"byte_end":117065,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117070,"byte_end":117133,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117138,"byte_end":117193,"line_start":497,"line_end":497,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117198,"byte_end":117201,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117206,"byte_end":117254,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117259,"byte_end":117262,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117267,"byte_end":117307,"line_start":501,"line_end":501,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117921,"byte_end":117931,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117494,"byte_end":117568,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117573,"byte_end":117587,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117592,"byte_end":117595,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117600,"byte_end":117667,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117672,"byte_end":117733,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117738,"byte_end":117795,"line_start":514,"line_end":514,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117800,"byte_end":117803,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117808,"byte_end":117856,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117861,"byte_end":117864,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":117869,"byte_end":117909,"line_start":518,"line_end":518,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118450,"byte_end":118466,"line_start":533,"line_end":533,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118098,"byte_end":118163,"line_start":526,"line_end":526,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118168,"byte_end":118171,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118176,"byte_end":118249,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118254,"byte_end":118317,"line_start":529,"line_end":529,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118322,"byte_end":118377,"line_start":530,"line_end":530,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118382,"byte_end":118385,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118390,"byte_end":118438,"line_start":532,"line_end":532,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118994,"byte_end":119011,"line_start":547,"line_end":547,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118648,"byte_end":118713,"line_start":540,"line_end":540,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118718,"byte_end":118721,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118726,"byte_end":118793,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118798,"byte_end":118859,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118864,"byte_end":118921,"line_start":544,"line_end":544,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118926,"byte_end":118929,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":118934,"byte_end":118982,"line_start":546,"line_end":546,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119352,"byte_end":119355,"line_start":559,"line_end":559,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119194,"byte_end":119219,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119224,"byte_end":119227,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119232,"byte_end":119287,"line_start":556,"line_end":556,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119292,"byte_end":119295,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119300,"byte_end":119340,"line_start":558,"line_end":558,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119700,"byte_end":119706,"line_start":570,"line_end":570,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119433,"byte_end":119496,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119501,"byte_end":119535,"line_start":564,"line_end":564,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119540,"byte_end":119543,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119548,"byte_end":119620,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119625,"byte_end":119635,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119640,"byte_end":119643,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119648,"byte_end":119688,"line_start":569,"line_end":569,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119968,"byte_end":119972,"line_start":580,"line_end":580,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119842,"byte_end":119896,"line_start":577,"line_end":577,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119901,"byte_end":119904,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":119909,"byte_end":119956,"line_start":579,"line_end":579,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120229,"byte_end":120236,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120056,"byte_end":120129,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120134,"byte_end":120137,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120142,"byte_end":120217,"line_start":589,"line_end":589,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120531,"byte_end":120540,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120383,"byte_end":120447,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120452,"byte_end":120483,"line_start":598,"line_end":598,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120488,"byte_end":120491,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120496,"byte_end":120519,"line_start":600,"line_end":600,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120957,"byte_end":120970,"line_start":615,"line_end":615,"column_start":12,"column_end":25},"name":"sort_unstable","qualname":"<IndexSet<T, S>>::sort_unstable","value":"pub fn sort_unstable(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set's values by their default ordering.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120815,"byte_end":120867,"line_start":612,"line_end":612,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120872,"byte_end":120875,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":120880,"byte_end":120945,"line_start":614,"line_end":614,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121216,"byte_end":121232,"line_start":625,"line_end":625,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexSet<T, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values in place using the comparison funtion `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set's values in place using the comparison funtion `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121063,"byte_end":121133,"line_start":622,"line_end":622,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121138,"byte_end":121141,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time. The sort is unstable.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121146,"byte_end":121204,"line_start":624,"line_end":624,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121499,"byte_end":121517,"line_start":634,"line_end":634,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexSet<T, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.\n","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121387,"byte_end":121451,"line_start":632,"line_end":632,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121456,"byte_end":121487,"line_start":633,"line_end":633,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121929,"byte_end":121936,"line_start":648,"line_end":648,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121801,"byte_end":121855,"line_start":645,"line_end":645,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121860,"byte_end":121863,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121868,"byte_end":121917,"line_start":647,"line_end":647,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122157,"byte_end":122166,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122018,"byte_end":122042,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122047,"byte_end":122050,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122055,"byte_end":122102,"line_start":656,"line_end":656,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122107,"byte_end":122110,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122115,"byte_end":122145,"line_start":658,"line_end":658,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122351,"byte_end":122356,"line_start":666,"line_end":666,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexSet<T, S>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the first value","sig":null,"attributes":[{"value":"/ Get the first value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122273,"byte_end":122296,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122301,"byte_end":122304,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122309,"byte_end":122339,"line_start":665,"line_end":665,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122523,"byte_end":122527,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexSet<T, S>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value","sig":null,"attributes":[{"value":"/ Get the last value","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122446,"byte_end":122468,"line_start":670,"line_end":670,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122473,"byte_end":122476,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122481,"byte_end":122511,"line_start":672,"line_end":672,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122984,"byte_end":123001,"line_start":686,"line_end":686,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122616,"byte_end":122645,"line_start":677,"line_end":677,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122650,"byte_end":122653,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122658,"byte_end":122705,"line_start":679,"line_end":679,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122710,"byte_end":122713,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122718,"byte_end":122791,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122796,"byte_end":122859,"line_start":682,"line_end":682,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122864,"byte_end":122919,"line_start":683,"line_end":683,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122924,"byte_end":122927,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":122932,"byte_end":122972,"line_start":685,"line_end":685,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123474,"byte_end":123492,"line_start":699,"line_end":699,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123112,"byte_end":123141,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123146,"byte_end":123149,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123154,"byte_end":123201,"line_start":692,"line_end":692,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123206,"byte_end":123209,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123214,"byte_end":123281,"line_start":694,"line_end":694,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123286,"byte_end":123347,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123352,"byte_end":123409,"line_start":696,"line_end":696,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123414,"byte_end":123417,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123422,"byte_end":123462,"line_start":698,"line_end":698,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":124039,"byte_end":124049,"line_start":712,"line_end":712,"column_start":12,"column_end":22},"name":"move_index","qualname":"<IndexSet<T, S>>::move_index","value":"pub fn move_index(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Moves the position of a value from one index to another\n by shifting all other values in-between.","sig":null,"attributes":[{"value":"/ Moves the position of a value from one index to another","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123604,"byte_end":123663,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/ by shifting all other values in-between.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123668,"byte_end":123712,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123717,"byte_end":123720,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ * If `from < to`, the other values will shift down while the targeted value moves up.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123725,"byte_end":123814,"line_start":706,"line_end":706,"column_start":5,"column_end":94}},{"value":"/ * If `from > to`, the other values will shift up while the targeted value moves down.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123819,"byte_end":123908,"line_start":707,"line_end":707,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123913,"byte_end":123916,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `from` or `to` are out of bounds.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123921,"byte_end":123974,"line_start":709,"line_end":709,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123979,"byte_end":123982,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":123987,"byte_end":124027,"line_start":711,"line_end":711,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":124258,"byte_end":124270,"line_start":719,"line_end":719,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexSet<T, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two values in the set.","sig":null,"attributes":[{"value":"/ Swaps the position of two values in the set.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":124136,"byte_end":124184,"line_start":716,"line_end":716,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":124189,"byte_end":124192,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":124197,"byte_end":124246,"line_start":718,"line_end":718,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125653,"byte_end":125661,"line_start":771,"line_end":771,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1074}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125334,"byte_end":125388,"line_start":764,"line_end":764,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125389,"byte_end":125392,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125393,"byte_end":125465,"line_start":766,"line_end":766,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125466,"byte_end":125541,"line_start":767,"line_end":767,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125542,"byte_end":125545,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125546,"byte_end":125584,"line_start":769,"line_end":769,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125585,"byte_end":125641,"line_start":770,"line_end":770,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126540,"byte_end":126544,"line_start":807,"line_end":807,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1091}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126282,"byte_end":126329,"line_start":800,"line_end":800,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126330,"byte_end":126333,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126334,"byte_end":126402,"line_start":802,"line_end":802,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126403,"byte_end":126438,"line_start":803,"line_end":803,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126439,"byte_end":126442,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126443,"byte_end":126481,"line_start":805,"line_end":805,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126482,"byte_end":126528,"line_start":806,"line_end":806,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127528,"byte_end":127533,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1112}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127259,"byte_end":127314,"line_start":843,"line_end":843,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127315,"byte_end":127318,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127319,"byte_end":127388,"line_start":845,"line_end":845,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127389,"byte_end":127424,"line_start":846,"line_end":846,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127425,"byte_end":127428,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127429,"byte_end":127467,"line_start":848,"line_end":848,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127468,"byte_end":127516,"line_start":849,"line_end":849,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130494,"byte_end":130505,"line_start":989,"line_end":989,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130414,"byte_end":130482,"line_start":988,"line_end":988,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130880,"byte_end":130889,"line_start":1001,"line_end":1001,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130798,"byte_end":130868,"line_start":1000,"line_end":1000,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131157,"byte_end":131168,"line_start":1009,"line_end":1009,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131075,"byte_end":131145,"line_start":1008,"line_end":1008,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131594,"byte_end":131604,"line_start":1024,"line_end":1024,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131293,"byte_end":131365,"line_start":1017,"line_end":1017,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131366,"byte_end":131369,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131370,"byte_end":131444,"line_start":1019,"line_end":1019,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131445,"byte_end":131480,"line_start":1020,"line_end":1020,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131481,"byte_end":131484,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131485,"byte_end":131523,"line_start":1022,"line_end":1022,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131524,"byte_end":131582,"line_start":1023,"line_end":1023,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133256,"byte_end":133268,"line_start":1098,"line_end":1098,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1219},{"krate":0,"index":1220}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132947,"byte_end":133021,"line_start":1091,"line_end":1091,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133022,"byte_end":133025,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133026,"byte_end":133102,"line_start":1093,"line_end":1093,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133103,"byte_end":133138,"line_start":1094,"line_end":1094,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133139,"byte_end":133142,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133143,"byte_end":133181,"line_start":1096,"line_end":1096,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133182,"byte_end":133244,"line_start":1097,"line_end":1097,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134962,"byte_end":134981,"line_start":1172,"line_end":1172,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1248}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134621,"byte_end":134703,"line_start":1165,"line_end":1165,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134704,"byte_end":134707,"line_start":1166,"line_end":1166,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134708,"byte_end":134778,"line_start":1167,"line_end":1167,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134779,"byte_end":134828,"line_start":1168,"line_end":1168,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134829,"byte_end":134832,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134833,"byte_end":134871,"line_start":1170,"line_end":1170,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134872,"byte_end":134950,"line_start":1171,"line_end":1171,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136778,"byte_end":136783,"line_start":1252,"line_end":1252,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1286}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136497,"byte_end":136564,"line_start":1245,"line_end":1245,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136565,"byte_end":136568,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136569,"byte_end":136638,"line_start":1247,"line_end":1247,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136639,"byte_end":136674,"line_start":1248,"line_end":1248,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136675,"byte_end":136678,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136679,"byte_end":136717,"line_start":1250,"line_end":1250,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136718,"byte_end":136766,"line_start":1251,"line_end":1251,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::rayon::map","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1397},{"krate":0,"index":1401},{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1420},{"krate":0,"index":1425},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1449},{"krate":0,"index":1454},{"krate":0,"index":1458},{"krate":0,"index":1463},{"krate":0,"index":1466},{"krate":0,"index":1475},{"krate":0,"index":1480},{"krate":0,"index":1484},{"krate":0,"index":1487},{"krate":0,"index":1493},{"krate":0,"index":1502},{"krate":0,"index":1507},{"krate":0,"index":1511},{"krate":0,"index":1515},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1528},{"krate":0,"index":1532},{"krate":0,"index":1536},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1549},{"krate":0,"index":1573},{"krate":0,"index":1578},{"krate":0,"index":1582},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1596},{"krate":0,"index":1602}],"decl_id":null,"docs":" Parallel iterator types for `IndexMap` with [rayon](https://docs.rs/rayon/1.0/rayon).","sig":null,"attributes":[{"value":"/ Parallel iterator types for `IndexMap` with [rayon](https://docs.rs/rayon/1.0/rayon).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157208,"byte_end":157297,"line_start":1,"line_end":1,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157298,"byte_end":157301,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need to name one of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157302,"byte_end":157399,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ iterator types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157400,"byte_end":157419,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157420,"byte_end":157423,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Requires crate feature `\"rayon\"`","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157424,"byte_end":157460,"line_start":6,"line_end":6,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1397},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158444,"byte_end":158455,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"IntoParIter","qualname":"::rayon::map::IntoParIter","value":"IntoParIter {  }","parent":null,"children":[{"krate":0,"index":1400}],"decl_id":null,"docs":" A parallel owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158085,"byte_end":158149,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158150,"byte_end":158153,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158154,"byte_end":158230,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ (provided by rayon's `IntoParallelIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158231,"byte_end":158318,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158319,"byte_end":158322,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`into_par_iter`]: ../struct.IndexMap.html#method.into_par_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158323,"byte_end":158390,"line_start":43,"line_end":43,"column_start":1,"column_end":68}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158391,"byte_end":158432,"line_start":44,"line_end":44,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159686,"byte_end":159693,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"ParIter","qualname":"::rayon::map::ParIter","value":"ParIter {  }","parent":null,"children":[{"krate":0,"index":1424}],"decl_id":null,"docs":" A parallel iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159346,"byte_end":159403,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159404,"byte_end":159407,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159408,"byte_end":159479,"line_start":84,"line_end":84,"column_start":1,"column_end":72}},{"value":"/ (provided by rayon's `IntoParallelRefIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159480,"byte_end":159570,"line_start":85,"line_end":85,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159571,"byte_end":159574,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [`par_iter`]: ../struct.IndexMap.html#method.par_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159575,"byte_end":159632,"line_start":87,"line_end":87,"column_start":1,"column_end":58}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159633,"byte_end":159674,"line_start":88,"line_end":88,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161087,"byte_end":161097,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"ParIterMut","qualname":"::rayon::map::ParIterMut","value":"ParIterMut {  }","parent":null,"children":[{"krate":0,"index":1453}],"decl_id":null,"docs":" A parallel mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160724,"byte_end":160789,"line_start":132,"line_end":132,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160790,"byte_end":160793,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter_mut`] method on [`IndexMap`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160794,"byte_end":160869,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ (provided by rayon's `IntoParallelRefMutIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160870,"byte_end":160963,"line_start":135,"line_end":135,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160964,"byte_end":160967,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ [`par_iter_mut`]: ../struct.IndexMap.html#method.par_iter_mut","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160968,"byte_end":161033,"line_start":137,"line_end":137,"column_start":1,"column_end":66}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161034,"byte_end":161075,"line_start":138,"line_end":138,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162420,"byte_end":162428,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"ParDrain","qualname":"::rayon::map::ParDrain","value":"ParDrain {  }","parent":null,"children":[{"krate":0,"index":1479}],"decl_id":null,"docs":" A parallel draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162073,"byte_end":162139,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162140,"byte_end":162143,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_drain`] method on [`IndexMap`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162144,"byte_end":162216,"line_start":178,"line_end":178,"column_start":1,"column_end":73}},{"value":"/ (provided by rayon's `ParallelDrainRange` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162217,"byte_end":162302,"line_start":179,"line_end":179,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162303,"byte_end":162306,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [`par_drain`]: ../struct.IndexMap.html#method.par_drain","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162307,"byte_end":162366,"line_start":181,"line_end":181,"column_start":1,"column_end":60}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162367,"byte_end":162408,"line_start":182,"line_end":182,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163284,"byte_end":163292,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"par_keys","qualname":"<IndexMap<K, V, S>>::par_keys","value":"pub fn par_keys(&Self) -> ParKeys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over the keys of the map.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over the keys of the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163040,"byte_end":163096,"line_start":207,"line_end":207,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163101,"byte_end":163104,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163109,"byte_end":163190,"line_start":209,"line_end":209,"column_start":5,"column_end":86}},{"value":"/ in the map is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163195,"byte_end":163272,"line_start":210,"line_end":210,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163648,"byte_end":163658,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"par_values","qualname":"<IndexMap<K, V, S>>::par_values","value":"pub fn par_values(&Self) -> ParValues<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over the values of the map.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over the values of the map.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163402,"byte_end":163460,"line_start":217,"line_end":217,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163465,"byte_end":163468,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163473,"byte_end":163554,"line_start":219,"line_end":219,"column_start":5,"column_end":86}},{"value":"/ in the map is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163559,"byte_end":163636,"line_start":220,"line_end":220,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164037,"byte_end":164043,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"par_eq","qualname":"<IndexMap<K, V, S>>::par_eq","value":"pub fn par_eq<V2, S2>(&Self, &IndexMap<K, V2, S2>) -> bool where\nV: PartialEq<V2>, V2: Sync, S2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains all of the same key-value pairs as `other`,\n regardless of each map's indexed order, determined in parallel.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains all of the same key-value pairs as `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163872,"byte_end":163953,"line_start":234,"line_end":234,"column_start":5,"column_end":86}},{"value":"/ regardless of each map's indexed order, determined in parallel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163958,"byte_end":164025,"line_start":235,"line_end":235,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164651,"byte_end":164658,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"ParKeys","qualname":"::rayon::map::ParKeys","value":"ParKeys {  }","parent":null,"children":[{"krate":0,"index":1506}],"decl_id":null,"docs":" A parallel iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164368,"byte_end":164422,"line_start":249,"line_end":249,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164423,"byte_end":164426,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164427,"byte_end":164507,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164508,"byte_end":164535,"line_start":252,"line_end":252,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164536,"byte_end":164539,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ [`par_keys`]: ../struct.IndexMap.html#method.par_keys","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164540,"byte_end":164597,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164598,"byte_end":164639,"line_start":255,"line_end":255,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165618,"byte_end":165627,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"ParValues","qualname":"::rayon::map::ParValues","value":"ParValues {  }","parent":null,"children":[{"krate":0,"index":1527}],"decl_id":null,"docs":" A parallel iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165327,"byte_end":165383,"line_start":283,"line_end":283,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165384,"byte_end":165387,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165388,"byte_end":165470,"line_start":285,"line_end":285,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165471,"byte_end":165498,"line_start":286,"line_end":286,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165499,"byte_end":165502,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [`par_values`]: ../struct.IndexMap.html#method.par_values","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165503,"byte_end":165564,"line_start":288,"line_end":288,"column_start":1,"column_end":62}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165565,"byte_end":165606,"line_start":289,"line_end":289,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166687,"byte_end":166701,"line_start":327,"line_end":327,"column_start":12,"column_end":26},"name":"par_values_mut","qualname":"<IndexMap<K, V, S>>::par_values_mut","value":"pub fn par_values_mut(&mut Self) -> ParValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over mutable references to the values of the map","sig":null,"attributes":[{"value":"/ Return a parallel iterator over mutable references to the values of the map","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166420,"byte_end":166499,"line_start":323,"line_end":323,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166504,"byte_end":166507,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166512,"byte_end":166593,"line_start":325,"line_end":325,"column_start":5,"column_end":86}},{"value":"/ in the map is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166598,"byte_end":166675,"line_start":326,"line_end":326,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167027,"byte_end":167040,"line_start":341,"line_end":341,"column_start":12,"column_end":25},"name":"par_sort_keys","qualname":"<IndexMap<K, V, S>>::par_sort_keys","value":"pub fn par_sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in parallel, by the default ordering of the keys.\n","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in parallel, by the default ordering of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166929,"byte_end":167015,"line_start":340,"line_end":340,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167485,"byte_end":167496,"line_start":355,"line_end":355,"column_start":12,"column_end":23},"name":"par_sort_by","qualname":"<IndexMap<K, V, S>>::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&K, &V, &K, &V) -> Ordering +\nSync","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place and in parallel, using the comparison\n function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place and in parallel, using the comparison","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167209,"byte_end":167292,"line_start":350,"line_end":350,"column_start":5,"column_end":86}},{"value":"/ function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167297,"byte_end":167316,"line_start":351,"line_end":351,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167321,"byte_end":167324,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167329,"byte_end":167405,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167410,"byte_end":167473,"line_start":354,"line_end":354,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167883,"byte_end":167896,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"par_sorted_by","qualname":"<IndexMap<K, V, S>>::par_sorted_by","value":"pub fn par_sorted_by<F>(Self, F) -> IntoParIter<K, V> where\nF: Fn(&K, &V, &K, &V) -> Ordering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map in parallel and return a by-value parallel\n iterator of the key-value pairs with the result.\n","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map in parallel and return a by-value parallel","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167732,"byte_end":167814,"line_start":364,"line_end":364,"column_start":5,"column_end":87}},{"value":"/ iterator of the key-value pairs with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":167819,"byte_end":167871,"line_start":365,"line_end":365,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1563},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168269,"byte_end":168291,"line_start":376,"line_end":376,"column_start":12,"column_end":34},"name":"par_sort_unstable_keys","qualname":"<IndexMap<K, V, S>>::par_sort_unstable_keys","value":"pub fn par_sort_unstable_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs in parallel, by the default ordering of the keys.\n","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs in parallel, by the default ordering of the keys.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168173,"byte_end":168257,"line_start":375,"line_end":375,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168743,"byte_end":168763,"line_start":390,"line_end":390,"column_start":12,"column_end":32},"name":"par_sort_unstable_by","qualname":"<IndexMap<K, V, S>>::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&K, &V, &K, &V) ->\nOrdering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs in place and in parallel, using the comparison\n function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs in place and in parallel, using the comparison","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168469,"byte_end":168550,"line_start":385,"line_end":385,"column_start":5,"column_end":86}},{"value":"/ function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168555,"byte_end":168574,"line_start":386,"line_end":386,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168579,"byte_end":168582,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168587,"byte_end":168663,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":168668,"byte_end":168731,"line_start":389,"line_end":389,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169159,"byte_end":169181,"line_start":401,"line_end":401,"column_start":12,"column_end":34},"name":"par_sorted_unstable_by","qualname":"<IndexMap<K, V, S>>::par_sorted_unstable_by","value":"pub fn par_sorted_unstable_by<F>(Self, F) -> IntoParIter<K, V> where\nF: Fn(&K, &V, &K, &V) -> Ordering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map in parallel and return a by-value parallel\n iterator of the key-value pairs with the result.\n","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map in parallel and return a by-value parallel","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169008,"byte_end":169090,"line_start":399,"line_end":399,"column_start":5,"column_end":87}},{"value":"/ iterator of the key-value pairs with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169095,"byte_end":169147,"line_start":400,"line_end":400,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169776,"byte_end":169788,"line_start":418,"line_end":418,"column_start":12,"column_end":24},"name":"ParValuesMut","qualname":"::rayon::map::ParValuesMut","value":"ParValuesMut {  }","parent":null,"children":[{"krate":0,"index":1577}],"decl_id":null,"docs":" A parallel mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A parallel mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169465,"byte_end":169529,"line_start":411,"line_end":411,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169530,"byte_end":169533,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169534,"byte_end":169620,"line_start":413,"line_end":413,"column_start":1,"column_end":87}},{"value":"/ documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169621,"byte_end":169648,"line_start":414,"line_end":414,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169649,"byte_end":169652,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ [`par_values_mut`]: ../struct.IndexMap.html#method.par_values_mut","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169653,"byte_end":169722,"line_start":416,"line_end":416,"column_start":1,"column_end":70}},{"value":"/ [`IndexMap`]: ../struct.IndexMap.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169723,"byte_end":169764,"line_start":417,"line_end":417,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::rayon::set","value":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1643},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1675},{"krate":0,"index":1679},{"krate":0,"index":1682},{"krate":0,"index":1685},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1699},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1734},{"krate":0,"index":1741},{"krate":0,"index":1746},{"krate":0,"index":1751},{"krate":0,"index":1760},{"krate":0,"index":1767},{"krate":0,"index":1772},{"krate":0,"index":1777},{"krate":0,"index":1786},{"krate":0,"index":1793},{"krate":0,"index":1798},{"krate":0,"index":1803},{"krate":0,"index":1811},{"krate":0,"index":1818},{"krate":0,"index":1823},{"krate":0,"index":1828},{"krate":0,"index":1836},{"krate":0,"index":1859},{"krate":0,"index":1864},{"krate":0,"index":1869}],"decl_id":null,"docs":" Parallel iterator types for `IndexSet` with [rayon](https://docs.rs/rayon/1.0/rayon).","sig":null,"attributes":[{"value":"/ Parallel iterator types for `IndexSet` with [rayon](https://docs.rs/rayon/1.0/rayon).","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174430,"byte_end":174519,"line_start":1,"line_end":1,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174520,"byte_end":174523,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ You will rarely need to interact with this module directly unless you need to name one of the","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174524,"byte_end":174621,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ iterator types.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174622,"byte_end":174641,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174642,"byte_end":174645,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Requires crate feature `\"rayon\"`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":174646,"byte_end":174683,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175659,"byte_end":175670,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"IntoParIter","qualname":"::rayon::set::IntoParIter","value":"IntoParIter {  }","parent":null,"children":[{"krate":0,"index":1659}],"decl_id":null,"docs":" A parallel owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A parallel owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175302,"byte_end":175364,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175365,"byte_end":175368,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_par_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175369,"byte_end":175445,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ (provided by rayon's `IntoParallelIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175446,"byte_end":175533,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175534,"byte_end":175537,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175538,"byte_end":175579,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ [`into_par_iter`]: ../struct.IndexSet.html#method.into_par_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175580,"byte_end":175647,"line_start":44,"line_end":44,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176806,"byte_end":176813,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"ParIter","qualname":"::rayon::set::ParIter","value":"ParIter {  }","parent":null,"children":[{"krate":0,"index":1678}],"decl_id":null,"docs":" A parallel iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A parallel iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176468,"byte_end":176523,"line_start":81,"line_end":81,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176524,"byte_end":176527,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176528,"byte_end":176599,"line_start":83,"line_end":83,"column_start":1,"column_end":72}},{"value":"/ (provided by rayon's `IntoParallelRefIterator` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176600,"byte_end":176690,"line_start":84,"line_end":84,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176691,"byte_end":176694,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176695,"byte_end":176736,"line_start":86,"line_end":86,"column_start":1,"column_end":42}},{"value":"/ [`par_iter`]: ../struct.IndexSet.html#method.par_iter","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176737,"byte_end":176794,"line_start":87,"line_end":87,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178128,"byte_end":178136,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"ParDrain","qualname":"::rayon::set::ParDrain","value":"ParDrain {  }","parent":null,"children":[{"krate":0,"index":1702}],"decl_id":null,"docs":" A parallel draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A parallel draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177783,"byte_end":177847,"line_start":130,"line_end":130,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177848,"byte_end":177851,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_drain`] method on [`IndexSet`]","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177852,"byte_end":177924,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ (provided by rayon's `ParallelDrainRange` trait). See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177925,"byte_end":178010,"line_start":133,"line_end":133,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178011,"byte_end":178014,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`par_drain`]: ../struct.IndexSet.html#method.par_drain","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178015,"byte_end":178074,"line_start":135,"line_end":135,"column_start":1,"column_end":60}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178075,"byte_end":178116,"line_start":136,"line_end":136,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178992,"byte_end":179006,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"par_difference","qualname":"<IndexSet<T, S>>::par_difference","value":"pub fn par_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> ParDifference\nwhere S2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178715,"byte_end":178797,"line_start":161,"line_end":161,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178802,"byte_end":178805,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178810,"byte_end":178891,"line_start":163,"line_end":163,"column_start":5,"column_end":86}},{"value":"/ in the `self` set is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178896,"byte_end":178980,"line_start":164,"line_end":164,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179670,"byte_end":179694,"line_start":185,"line_end":185,"column_start":12,"column_end":36},"name":"par_symmetric_difference","qualname":"<IndexSet<T, S>>::par_symmetric_difference","value":"pub fn par_symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> ParSymmetricDifference where S2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179249,"byte_end":179326,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/ but not in both.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179331,"byte_end":179351,"line_start":179,"line_end":179,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179356,"byte_end":179359,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179364,"byte_end":179445,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/ in the sets is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179450,"byte_end":179528,"line_start":182,"line_end":182,"column_start":5,"column_end":83}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179533,"byte_end":179605,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179610,"byte_end":179658,"line_start":184,"line_end":184,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180233,"byte_end":180249,"line_start":202,"line_end":202,"column_start":12,"column_end":28},"name":"par_intersection","qualname":"<IndexSet<T, S>>::par_intersection","value":"pub fn par_intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> ParIntersection where S2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":179955,"byte_end":180038,"line_start":198,"line_end":198,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180043,"byte_end":180046,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180051,"byte_end":180132,"line_start":200,"line_end":200,"column_start":5,"column_end":86}},{"value":"/ in the `self` set is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180137,"byte_end":180221,"line_start":201,"line_end":201,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180906,"byte_end":180915,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"par_union","qualname":"<IndexSet<T, S>>::par_union","value":"pub fn par_union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> ParUnion where\nS2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Return a parallel iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return a parallel iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180496,"byte_end":180573,"line_start":215,"line_end":215,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180578,"byte_end":180581,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ While parallel iterators can process items in any order, their relative order","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180586,"byte_end":180667,"line_start":217,"line_end":217,"column_start":5,"column_end":86}},{"value":"/ in the sets is still preserved for operations like `reduce` and `collect`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180672,"byte_end":180750,"line_start":218,"line_end":218,"column_start":5,"column_end":83}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180755,"byte_end":180827,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":180832,"byte_end":180894,"line_start":220,"line_end":220,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181281,"byte_end":181287,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"par_eq","qualname":"<IndexSet<T, S>>::par_eq","value":"pub fn par_eq<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher +\nSync","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains all of the same values as `other`,\n regardless of each set's indexed order, determined in parallel.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains all of the same values as `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181125,"byte_end":181197,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ regardless of each set's indexed order, determined in parallel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181202,"byte_end":181269,"line_start":232,"line_end":232,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181566,"byte_end":181581,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"par_is_disjoint","qualname":"<IndexSet<T, S>>::par_is_disjoint","value":"pub fn par_is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where\nS2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`,\n determined in parallel.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181454,"byte_end":181522,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"/ determined in parallel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181527,"byte_end":181554,"line_start":241,"line_end":241,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182003,"byte_end":182018,"line_start":255,"line_end":255,"column_start":12,"column_end":27},"name":"par_is_superset","qualname":"<IndexSet<T, S>>::par_is_superset","value":"pub fn par_is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where\nS2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`,\n determined in parallel.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181889,"byte_end":181959,"line_start":253,"line_end":253,"column_start":5,"column_end":75}},{"value":"/ determined in parallel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":181964,"byte_end":181991,"line_start":254,"line_end":254,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182270,"byte_end":182283,"line_start":264,"line_end":264,"column_start":12,"column_end":25},"name":"par_is_subset","qualname":"<IndexSet<T, S>>::par_is_subset","value":"pub fn par_is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where\nS2: BuildHasher + Sync","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`,\n determined in parallel.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`,","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182156,"byte_end":182226,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ determined in parallel.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182231,"byte_end":182258,"line_start":263,"line_end":263,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182801,"byte_end":182814,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"ParDifference","qualname":"::rayon::set::ParDifference","value":"ParDifference {  }","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740}],"decl_id":null,"docs":" A parallel iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A parallel iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182478,"byte_end":182554,"line_start":272,"line_end":272,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182555,"byte_end":182558,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_difference`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182559,"byte_end":182637,"line_start":274,"line_end":274,"column_start":1,"column_end":79}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182638,"byte_end":182673,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182674,"byte_end":182677,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182678,"byte_end":182719,"line_start":277,"line_end":277,"column_start":1,"column_end":42}},{"value":"/ [`par_difference`]: ../struct.IndexSet.html#method.par_difference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182720,"byte_end":182789,"line_start":278,"line_end":278,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184137,"byte_end":184152,"line_start":330,"line_end":330,"column_start":12,"column_end":27},"name":"ParIntersection","qualname":"::rayon::set::ParIntersection","value":"ParIntersection {  }","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766}],"decl_id":null,"docs":" A parallel iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A parallel iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183806,"byte_end":183884,"line_start":323,"line_end":323,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183885,"byte_end":183888,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183889,"byte_end":183969,"line_start":325,"line_end":325,"column_start":1,"column_end":81}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183970,"byte_end":184005,"line_start":326,"line_end":326,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184006,"byte_end":184009,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184010,"byte_end":184051,"line_start":328,"line_end":328,"column_start":1,"column_end":42}},{"value":"/ [`par_intersection`]: ../struct.IndexSet.html#method.par_intersection","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184052,"byte_end":184125,"line_start":329,"line_end":329,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185516,"byte_end":185538,"line_start":381,"line_end":381,"column_start":12,"column_end":34},"name":"ParSymmetricDifference","qualname":"::rayon::set::ParSymmetricDifference","value":"ParSymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792}],"decl_id":null,"docs":" A parallel iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A parallel iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185153,"byte_end":185239,"line_start":374,"line_end":374,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185240,"byte_end":185243,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_symmetric_difference`] method on","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185244,"byte_end":185318,"line_start":376,"line_end":376,"column_start":1,"column_end":75}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185319,"byte_end":185368,"line_start":377,"line_end":377,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185369,"byte_end":185372,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185373,"byte_end":185414,"line_start":379,"line_end":379,"column_start":1,"column_end":42}},{"value":"/ [`par_symmetric_difference`]: ../struct.IndexSet.html#method.par_symmetric_difference","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185415,"byte_end":185504,"line_start":380,"line_end":380,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186880,"byte_end":186888,"line_start":432,"line_end":432,"column_start":12,"column_end":20},"name":"ParUnion","qualname":"::rayon::set::ParUnion","value":"ParUnion {  }","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817}],"decl_id":null,"docs":" A parallel iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A parallel iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186577,"byte_end":186648,"line_start":425,"line_end":425,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186649,"byte_end":186652,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`par_union`] method on [`IndexSet`].","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186653,"byte_end":186726,"line_start":427,"line_end":427,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186727,"byte_end":186762,"line_start":428,"line_end":428,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186763,"byte_end":186766,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: ../struct.IndexSet.html","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186767,"byte_end":186808,"line_start":430,"line_end":430,"column_start":1,"column_end":42}},{"value":"/ [`par_union`]: ../struct.IndexSet.html#method.par_union","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186809,"byte_end":186868,"line_start":431,"line_end":431,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188085,"byte_end":188093,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"par_sort","qualname":"<IndexSet<T, S>>::par_sort","value":"pub fn par_sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in parallel by their default ordering.\n","sig":null,"attributes":[{"value":"/ Sort the set’s values in parallel by their default ordering.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188007,"byte_end":188073,"line_start":482,"line_end":482,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188364,"byte_end":188375,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"par_sort_by","qualname":"<IndexSet<T, S>>::par_sort_by","value":"pub fn par_sort_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place and in parallel, using the comparison function `cmp`.\n","sig":null,"attributes":[{"value":"/ Sort the set’s values in place and in parallel, using the comparison function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188262,"byte_end":188352,"line_start":492,"line_end":492,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188716,"byte_end":188729,"line_start":504,"line_end":504,"column_start":12,"column_end":25},"name":"par_sorted_by","qualname":"<IndexSet<T, S>>::par_sorted_by","value":"pub fn par_sorted_by<F>(Self, F) -> IntoParIter<T> where F: Fn(&T, &T) ->\nOrdering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set in parallel and return a by-value parallel iterator of\n the values with the result.\n","sig":null,"attributes":[{"value":"/ Sort the values of the set in parallel and return a by-value parallel iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188583,"byte_end":188668,"line_start":502,"line_end":502,"column_start":5,"column_end":90}},{"value":"/ the values with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188673,"byte_end":188704,"line_start":503,"line_end":503,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189051,"byte_end":189068,"line_start":514,"line_end":514,"column_start":12,"column_end":29},"name":"par_sort_unstable","qualname":"<IndexSet<T, S>>::par_sort_unstable","value":"pub fn par_sort_unstable(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values in parallel by their default ordering.\n","sig":null,"attributes":[{"value":"/ Sort the set's values in parallel by their default ordering.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":188975,"byte_end":189039,"line_start":513,"line_end":513,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189348,"byte_end":189368,"line_start":524,"line_end":524,"column_start":12,"column_end":32},"name":"par_sort_unstable_by","qualname":"<IndexSet<T, S>>::par_sort_unstable_by","value":"pub fn par_sort_unstable_by<F>(&mut Self, F) where F: Fn(&T, &T) -> Ordering +\nSync","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place and in parallel, using the comparison function `cmp`.\n","sig":null,"attributes":[{"value":"/ Sort the set’s values in place and in parallel, using the comparison function `cmp`.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189246,"byte_end":189336,"line_start":523,"line_end":523,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189718,"byte_end":189740,"line_start":535,"line_end":535,"column_start":12,"column_end":34},"name":"par_sorted_unstable_by","qualname":"<IndexSet<T, S>>::par_sorted_unstable_by","value":"pub fn par_sorted_unstable_by<F>(Self, F) -> IntoParIter<T> where\nF: Fn(&T, &T) -> Ordering + Sync","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set in parallel and return a by-value parallel iterator of\n the values with the result.\n","sig":null,"attributes":[{"value":"/ Sort the values of the set in parallel and return a by-value parallel iterator of","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189585,"byte_end":189670,"line_start":533,"line_end":533,"column_start":5,"column_end":90}},{"value":"/ the values with the result.","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":189675,"byte_end":189706,"line_start":534,"line_end":534,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":5217,"byte_end":5222,"line_start":186,"line_end":186,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1908},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":11210,"byte_end":11211,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":13041,"byte_end":13049,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":95726,"byte_end":95738,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":96038,"byte_end":96050,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99099,"byte_end":99112,"line_start":116,"line_end":116,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99227,"byte_end":99240,"line_start":119,"line_end":119,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":73075,"byte_end":73087,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":73773,"byte_end":73785,"line_start":82,"line_end":82,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":74104,"byte_end":74116,"line_start":95,"line_end":95,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":74619,"byte_end":74631,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88163,"byte_end":88168,"line_start":499,"line_end":499,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91225,"byte_end":91230,"line_start":589,"line_end":589,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91634,"byte_end":91647,"line_start":601,"line_end":601,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93208,"byte_end":93221,"line_start":644,"line_end":644,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93700,"byte_end":93711,"line_start":663,"line_end":663,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94414,"byte_end":94425,"line_start":687,"line_end":687,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16899,"byte_end":16907,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":17305,"byte_end":17313,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":17837,"byte_end":17845,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18307,"byte_end":18315,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18741,"byte_end":18749,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23432,"byte_end":23440,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38100,"byte_end":38108,"line_start":775,"line_end":775,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41616,"byte_end":41620,"line_start":880,"line_end":880,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41735,"byte_end":41739,"line_start":886,"line_end":886,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41841,"byte_end":41845,"line_start":890,"line_end":890,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41949,"byte_end":41953,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42044,"byte_end":42048,"line_start":899,"line_end":899,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42200,"byte_end":42204,"line_start":907,"line_end":907,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42705,"byte_end":42713,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42816,"byte_end":42824,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42918,"byte_end":42926,"line_start":934,"line_end":934,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43026,"byte_end":43034,"line_start":940,"line_end":940,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43083,"byte_end":43091,"line_start":942,"line_end":942,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43641,"byte_end":43647,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43764,"byte_end":43770,"line_start":966,"line_end":966,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43874,"byte_end":43880,"line_start":970,"line_end":970,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43984,"byte_end":43990,"line_start":976,"line_end":976,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44081,"byte_end":44087,"line_start":979,"line_end":979,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44241,"byte_end":44247,"line_start":987,"line_end":987,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44765,"byte_end":44774,"line_start":1004,"line_end":1004,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44895,"byte_end":44904,"line_start":1010,"line_end":1010,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45008,"byte_end":45017,"line_start":1014,"line_end":1014,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45121,"byte_end":45130,"line_start":1020,"line_end":1020,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45183,"byte_end":45192,"line_start":1022,"line_end":1022,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45766,"byte_end":45776,"line_start":1040,"line_end":1040,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45881,"byte_end":45891,"line_start":1046,"line_end":1046,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45987,"byte_end":45997,"line_start":1050,"line_end":1050,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46097,"byte_end":46107,"line_start":1056,"line_end":1056,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46156,"byte_end":46166,"line_start":1058,"line_end":1058,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46711,"byte_end":46715,"line_start":1076,"line_end":1076,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46836,"byte_end":46840,"line_start":1082,"line_end":1082,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46939,"byte_end":46943,"line_start":1086,"line_end":1086,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47047,"byte_end":47051,"line_start":1092,"line_end":1092,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47142,"byte_end":47146,"line_start":1095,"line_end":1095,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47310,"byte_end":47314,"line_start":1103,"line_end":1103,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47825,"byte_end":47832,"line_start":1120,"line_end":1120,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47960,"byte_end":47967,"line_start":1126,"line_end":1126,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1976},{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48069,"byte_end":48076,"line_start":1130,"line_end":1130,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48180,"byte_end":48187,"line_start":1136,"line_end":1136,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48252,"byte_end":48259,"line_start":1138,"line_end":1138,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48860,"byte_end":48868,"line_start":1156,"line_end":1156,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48982,"byte_end":48990,"line_start":1162,"line_end":1162,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49090,"byte_end":49098,"line_start":1166,"line_end":1166,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49198,"byte_end":49206,"line_start":1172,"line_end":1172,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49267,"byte_end":49275,"line_start":1174,"line_end":1174,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49835,"byte_end":49840,"line_start":1192,"line_end":1192,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49958,"byte_end":49963,"line_start":1198,"line_end":1198,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50067,"byte_end":50072,"line_start":1202,"line_end":1202,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50176,"byte_end":50181,"line_start":1208,"line_end":1208,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50246,"byte_end":50251,"line_start":1210,"line_end":1210,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50892,"byte_end":50900,"line_start":1233,"line_end":1233,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":51684,"byte_end":51692,"line_start":1265,"line_end":1265,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":52860,"byte_end":52868,"line_start":1310,"line_end":1310,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":53945,"byte_end":53953,"line_start":1352,"line_end":1352,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":55047,"byte_end":55055,"line_start":1394,"line_end":1394,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":55403,"byte_end":55411,"line_start":1405,"line_end":1405,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":56027,"byte_end":56035,"line_start":1425,"line_end":1425,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":56428,"byte_end":56436,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":57735,"byte_end":57743,"line_start":1476,"line_end":1476,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58139,"byte_end":58147,"line_start":1490,"line_end":1490,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58367,"byte_end":58375,"line_start":1500,"line_end":1500,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58740,"byte_end":58748,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104423,"byte_end":104431,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104693,"byte_end":104701,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105212,"byte_end":105220,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105617,"byte_end":105625,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106058,"byte_end":106066,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109209,"byte_end":109217,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":996},{"krate":0,"index":999},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121997,"byte_end":122005,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125037,"byte_end":125045,"line_start":752,"line_end":752,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125727,"byte_end":125735,"line_start":775,"line_end":775,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125832,"byte_end":125840,"line_start":781,"line_end":781,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125928,"byte_end":125936,"line_start":785,"line_end":785,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126030,"byte_end":126038,"line_start":791,"line_end":791,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126081,"byte_end":126089,"line_start":793,"line_end":793,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126620,"byte_end":126624,"line_start":811,"line_end":811,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126733,"byte_end":126737,"line_start":817,"line_end":817,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126833,"byte_end":126837,"line_start":821,"line_end":821,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126935,"byte_end":126939,"line_start":827,"line_end":827,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126969,"byte_end":126973,"line_start":829,"line_end":829,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127119,"byte_end":127123,"line_start":837,"line_end":837,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127604,"byte_end":127609,"line_start":854,"line_end":854,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127710,"byte_end":127715,"line_start":860,"line_end":860,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127807,"byte_end":127812,"line_start":864,"line_end":864,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127910,"byte_end":127915,"line_start":870,"line_end":870,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127962,"byte_end":127967,"line_start":872,"line_end":872,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128374,"byte_end":128382,"line_start":888,"line_end":888,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128607,"byte_end":128615,"line_start":899,"line_end":899,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128942,"byte_end":128950,"line_start":913,"line_end":913,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129316,"byte_end":129324,"line_start":931,"line_end":931,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129575,"byte_end":129583,"line_start":942,"line_end":942,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129828,"byte_end":129836,"line_start":953,"line_end":953,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130052,"byte_end":130060,"line_start":965,"line_end":965,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130274,"byte_end":130282,"line_start":976,"line_end":976,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130349,"byte_end":130357,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131702,"byte_end":131712,"line_start":1029,"line_end":1029,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132146,"byte_end":132156,"line_start":1050,"line_end":1050,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132474,"byte_end":132484,"line_start":1065,"line_end":1065,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132565,"byte_end":132575,"line_start":1072,"line_end":1072,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132741,"byte_end":132751,"line_start":1081,"line_end":1081,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133366,"byte_end":133378,"line_start":1103,"line_end":1103,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133811,"byte_end":133823,"line_start":1124,"line_end":1124,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134140,"byte_end":134152,"line_start":1139,"line_end":1139,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134233,"byte_end":134245,"line_start":1146,"line_end":1146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134413,"byte_end":134425,"line_start":1155,"line_end":1155,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135098,"byte_end":135117,"line_start":1176,"line_end":1176,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135572,"byte_end":135591,"line_start":1200,"line_end":1200,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135939,"byte_end":135958,"line_start":1218,"line_end":1218,"column_start":35,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136071,"byte_end":136090,"line_start":1226,"line_end":1226,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136255,"byte_end":136274,"line_start":1234,"line_end":1234,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136879,"byte_end":136884,"line_start":1256,"line_end":1256,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137307,"byte_end":137312,"line_start":1279,"line_end":1279,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137628,"byte_end":137633,"line_start":1296,"line_end":1296,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137714,"byte_end":137719,"line_start":1303,"line_end":1303,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137860,"byte_end":137865,"line_start":1311,"line_end":1311,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157847,"byte_end":157855,"line_start":23,"line_end":23,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158549,"byte_end":158560,"line_start":49,"line_end":49,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1404}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158789,"byte_end":158800,"line_start":56,"line_end":56,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":2023},{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158939,"byte_end":158950,"line_start":62,"line_end":62,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159763,"byte_end":159770,"line_start":93,"line_end":93,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159900,"byte_end":159907,"line_start":99,"line_end":99,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160144,"byte_end":160151,"line_start":106,"line_end":106,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":2031},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160297,"byte_end":160304,"line_start":112,"line_end":112,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161200,"byte_end":161210,"line_start":143,"line_end":143,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161454,"byte_end":161464,"line_start":150,"line_end":150,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":2039},{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161624,"byte_end":161634,"line_start":156,"line_end":156,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162550,"byte_end":162558,"line_start":187,"line_end":187,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":2047},{"krate":0,"index":2049}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162701,"byte_end":162709,"line_start":193,"line_end":193,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162984,"byte_end":162992,"line_start":202,"line_end":202,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163784,"byte_end":163792,"line_start":228,"line_end":228,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164728,"byte_end":164735,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164853,"byte_end":164860,"line_start":266,"line_end":266,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165100,"byte_end":165107,"line_start":273,"line_end":273,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":2055},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165247,"byte_end":165254,"line_start":279,"line_end":279,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2060},{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165697,"byte_end":165706,"line_start":294,"line_end":294,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165826,"byte_end":165835,"line_start":300,"line_end":300,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166077,"byte_end":166086,"line_start":307,"line_end":307,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":2063},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166228,"byte_end":166237,"line_start":313,"line_end":313,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166364,"byte_end":166372,"line_start":318,"line_end":318,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166841,"byte_end":166849,"line_start":334,"line_end":334,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169879,"byte_end":169891,"line_start":422,"line_end":422,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170133,"byte_end":170145,"line_start":429,"line_end":429,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":2071},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170291,"byte_end":170303,"line_start":435,"line_end":435,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170463,"byte_end":170471,"line_start":440,"line_end":440,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170992,"byte_end":171000,"line_start":461,"line_end":461,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":171371,"byte_end":171379,"line_start":478,"line_end":478,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175088,"byte_end":175096,"line_start":24,"line_end":24,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175743,"byte_end":175754,"line_start":49,"line_end":49,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175974,"byte_end":175985,"line_start":56,"line_end":56,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":2079},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176101,"byte_end":176112,"line_start":62,"line_end":62,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176874,"byte_end":176881,"line_start":92,"line_end":92,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176993,"byte_end":177000,"line_start":98,"line_end":98,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177228,"byte_end":177235,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1688},{"krate":0,"index":2087},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177363,"byte_end":177370,"line_start":111,"line_end":111,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178237,"byte_end":178245,"line_start":141,"line_end":141,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":2095},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178365,"byte_end":178373,"line_start":147,"line_end":147,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2098},{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178636,"byte_end":178644,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1720},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1729},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182923,"byte_end":182936,"line_start":284,"line_end":284,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183058,"byte_end":183071,"line_start":290,"line_end":290,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183380,"byte_end":183393,"line_start":303,"line_end":303,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184261,"byte_end":184276,"line_start":335,"line_end":335,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184400,"byte_end":184415,"line_start":341,"line_end":341,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184726,"byte_end":184741,"line_start":354,"line_end":354,"column_start":42,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185647,"byte_end":185669,"line_start":386,"line_end":386,"column_start":27,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185800,"byte_end":185822,"line_start":392,"line_end":392,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186141,"byte_end":186163,"line_start":405,"line_end":405,"column_start":42,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1808},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186997,"byte_end":187005,"line_start":437,"line_end":437,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187122,"byte_end":187130,"line_start":443,"line_end":443,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187408,"byte_end":187416,"line_start":454,"line_end":454,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187928,"byte_end":187936,"line_start":477,"line_end":477,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190070,"byte_end":190078,"line_start":546,"line_end":546,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190570,"byte_end":190578,"line_start":566,"line_end":566,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190912,"byte_end":190920,"line_start":582,"line_end":582,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3893,"byte_end":3902,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":4100,"byte_end":4106,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":4499,"byte_end":4505,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3366,"byte_end":3369,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":83}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3379,"byte_end":3382,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":872}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/mod.rs","byte_start":156611,"byte_end":156614,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1347}},{"kind":"Mod","span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/mod.rs","byte_start":156624,"byte_end":156627,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1609}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/equivalent.rs","byte_start":11210,"byte_end":11211,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":28},"to":{"krate":0,"index":24}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/mutable_keys.rs","byte_start":13041,"byte_end":13049,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":419},"to":{"krate":0,"index":47}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":95726,"byte_end":95738,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":96038,"byte_end":96050,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99099,"byte_end":99112,"line_start":116,"line_end":116,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":136},"to":{"krate":1,"index":3069}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core/raw.rs","byte_start":99227,"byte_end":99240,"line_start":119,"line_end":119,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":73075,"byte_end":73087,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":73773,"byte_end":73785,"line_start":82,"line_end":82,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":74104,"byte_end":74116,"line_start":95,"line_end":95,"column_start":24,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":196},"to":{"krate":0,"index":1908}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":74619,"byte_end":74631,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":88163,"byte_end":88168,"line_start":499,"line_end":499,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91225,"byte_end":91230,"line_start":589,"line_end":589,"column_start":51,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":276},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":91634,"byte_end":91647,"line_start":601,"line_end":601,"column_start":12,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93208,"byte_end":93221,"line_start":644,"line_end":644,"column_start":51,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":136},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":93700,"byte_end":93711,"line_start":663,"line_end":663,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map/core.rs","byte_start":94414,"byte_end":94425,"line_start":687,"line_end":687,"column_start":39,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":319},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":16899,"byte_end":16907,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":17305,"byte_end":17313,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":419},"to":{"krate":0,"index":1908}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":17837,"byte_end":17845,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18307,"byte_end":18315,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":18741,"byte_end":18749,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":23432,"byte_end":23440,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":38100,"byte_end":38108,"line_start":775,"line_end":775,"column_start":15,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41616,"byte_end":41620,"line_start":880,"line_end":880,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41735,"byte_end":41739,"line_start":886,"line_end":886,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41841,"byte_end":41845,"line_start":890,"line_end":890,"column_start":34,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":41949,"byte_end":41953,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42044,"byte_end":42048,"line_start":899,"line_end":899,"column_start":22,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42200,"byte_end":42204,"line_start":907,"line_end":907,"column_start":39,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":558},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42705,"byte_end":42713,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42816,"byte_end":42824,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":42918,"byte_end":42926,"line_start":934,"line_end":934,"column_start":34,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43026,"byte_end":43034,"line_start":940,"line_end":940,"column_start":30,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43083,"byte_end":43091,"line_start":942,"line_end":942,"column_start":39,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43641,"byte_end":43647,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43764,"byte_end":43770,"line_start":966,"line_end":966,"column_start":36,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43874,"byte_end":43880,"line_start":970,"line_end":970,"column_start":34,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":43984,"byte_end":43990,"line_start":976,"line_end":976,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44081,"byte_end":44087,"line_start":979,"line_end":979,"column_start":22,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44241,"byte_end":44247,"line_start":987,"line_end":987,"column_start":39,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":608},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44765,"byte_end":44774,"line_start":1004,"line_end":1004,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":44895,"byte_end":44904,"line_start":1010,"line_end":1010,"column_start":36,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45008,"byte_end":45017,"line_start":1014,"line_end":1014,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45121,"byte_end":45130,"line_start":1020,"line_end":1020,"column_start":30,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45183,"byte_end":45192,"line_start":1022,"line_end":1022,"column_start":39,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":636},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45766,"byte_end":45776,"line_start":1040,"line_end":1040,"column_start":25,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45881,"byte_end":45891,"line_start":1046,"line_end":1046,"column_start":36,"column_end":46},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":45987,"byte_end":45997,"line_start":1050,"line_end":1050,"column_start":34,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46097,"byte_end":46107,"line_start":1056,"line_end":1056,"column_start":30,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46156,"byte_end":46166,"line_start":1058,"line_end":1058,"column_start":39,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":660},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46711,"byte_end":46715,"line_start":1076,"line_end":1076,"column_start":29,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46836,"byte_end":46840,"line_start":1082,"line_end":1082,"column_start":36,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":46939,"byte_end":46943,"line_start":1086,"line_end":1086,"column_start":34,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47047,"byte_end":47051,"line_start":1092,"line_end":1092,"column_start":30,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47142,"byte_end":47146,"line_start":1095,"line_end":1095,"column_start":22,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47310,"byte_end":47314,"line_start":1103,"line_end":1103,"column_start":51,"column_end":55},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":682},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47825,"byte_end":47832,"line_start":1120,"line_end":1120,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":47960,"byte_end":47967,"line_start":1126,"line_end":1126,"column_start":36,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48069,"byte_end":48076,"line_start":1130,"line_end":1130,"column_start":34,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48180,"byte_end":48187,"line_start":1136,"line_end":1136,"column_start":30,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48252,"byte_end":48259,"line_start":1138,"line_end":1138,"column_start":51,"column_end":58},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":710},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48860,"byte_end":48868,"line_start":1156,"line_end":1156,"column_start":25,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":48982,"byte_end":48990,"line_start":1162,"line_end":1162,"column_start":36,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49090,"byte_end":49098,"line_start":1166,"line_end":1166,"column_start":34,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49198,"byte_end":49206,"line_start":1172,"line_end":1172,"column_start":30,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49267,"byte_end":49275,"line_start":1174,"line_end":1174,"column_start":51,"column_end":59},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49835,"byte_end":49840,"line_start":1192,"line_end":1192,"column_start":25,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":49958,"byte_end":49963,"line_start":1198,"line_end":1198,"column_start":36,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50067,"byte_end":50072,"line_start":1202,"line_end":1202,"column_start":34,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50176,"byte_end":50181,"line_start":1208,"line_end":1208,"column_start":30,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50246,"byte_end":50251,"line_start":1210,"line_end":1210,"column_start":51,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":50892,"byte_end":50900,"line_start":1233,"line_end":1233,"column_start":32,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":7790}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":51684,"byte_end":51692,"line_start":1265,"line_end":1265,"column_start":40,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":3361}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":52860,"byte_end":52868,"line_start":1310,"line_end":1310,"column_start":43,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":3365}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":53945,"byte_end":53953,"line_start":1352,"line_end":1352,"column_start":32,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":3361}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":55047,"byte_end":55055,"line_start":1394,"line_end":1394,"column_start":35,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":3365}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":55403,"byte_end":55411,"line_start":1405,"line_end":1405,"column_start":40,"column_end":48},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":7786}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":56027,"byte_end":56035,"line_start":1425,"line_end":1425,"column_start":50,"column_end":58},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":56428,"byte_end":56436,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":7799}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":57735,"byte_end":57743,"line_start":1476,"line_end":1476,"column_start":46,"column_end":54},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":7799}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58139,"byte_end":58147,"line_start":1490,"line_end":1490,"column_start":27,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58367,"byte_end":58375,"line_start":1500,"line_end":1500,"column_start":60,"column_end":68},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/map.rs","byte_start":58740,"byte_end":58748,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":419},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104423,"byte_end":104431,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":104693,"byte_end":104701,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":940},"to":{"krate":0,"index":1908}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105212,"byte_end":105220,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":105617,"byte_end":105625,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":106058,"byte_end":106066,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":109209,"byte_end":109217,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":121997,"byte_end":122005,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125037,"byte_end":125045,"line_start":752,"line_end":752,"column_start":29,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":3361}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125727,"byte_end":125735,"line_start":775,"line_end":775,"column_start":22,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125832,"byte_end":125840,"line_start":781,"line_end":781,"column_start":33,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":125928,"byte_end":125936,"line_start":785,"line_end":785,"column_start":31,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126030,"byte_end":126038,"line_start":791,"line_end":791,"column_start":27,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126081,"byte_end":126089,"line_start":793,"line_end":793,"column_start":36,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1072},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126620,"byte_end":126624,"line_start":811,"line_end":811,"column_start":26,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126733,"byte_end":126737,"line_start":817,"line_end":817,"column_start":33,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126833,"byte_end":126837,"line_start":821,"line_end":821,"column_start":31,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126935,"byte_end":126939,"line_start":827,"line_end":827,"column_start":27,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":126969,"byte_end":126973,"line_start":829,"line_end":829,"column_start":19,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127119,"byte_end":127123,"line_start":837,"line_end":837,"column_start":36,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1088},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127604,"byte_end":127609,"line_start":854,"line_end":854,"column_start":22,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1109},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127710,"byte_end":127715,"line_start":860,"line_end":860,"column_start":33,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1109},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127807,"byte_end":127812,"line_start":864,"line_end":864,"column_start":31,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1109},"to":{"krate":1,"index":7859}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127910,"byte_end":127915,"line_start":870,"line_end":870,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1109},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":127962,"byte_end":127967,"line_start":872,"line_end":872,"column_start":36,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1109},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128374,"byte_end":128382,"line_start":888,"line_end":888,"column_start":29,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":7790}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128607,"byte_end":128615,"line_start":899,"line_end":899,"column_start":32,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":7786}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":128942,"byte_end":128950,"line_start":913,"line_end":913,"column_start":42,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":2963}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129316,"byte_end":129324,"line_start":931,"line_end":931,"column_start":26,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":7799}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129575,"byte_end":129583,"line_start":942,"line_end":942,"column_start":34,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":7799}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":129828,"byte_end":129836,"line_start":953,"line_end":953,"column_start":24,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":3035}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130052,"byte_end":130060,"line_start":965,"line_end":965,"column_start":48,"column_end":56},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":2709}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130274,"byte_end":130282,"line_start":976,"line_end":976,"column_start":19,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":940},"to":{"krate":1,"index":2714}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":130349,"byte_end":130357,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":131702,"byte_end":131712,"line_start":1029,"line_end":1029,"column_start":29,"column_end":39},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1187},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132146,"byte_end":132156,"line_start":1050,"line_end":1050,"column_start":36,"column_end":46},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1187},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132474,"byte_end":132484,"line_start":1065,"line_end":1065,"column_start":30,"column_end":40},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1187},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132565,"byte_end":132575,"line_start":1072,"line_end":1072,"column_start":22,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1187},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":132741,"byte_end":132751,"line_start":1081,"line_end":1081,"column_start":27,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1187},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133366,"byte_end":133378,"line_start":1103,"line_end":1103,"column_start":29,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":133811,"byte_end":133823,"line_start":1124,"line_end":1124,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134140,"byte_end":134152,"line_start":1139,"line_end":1139,"column_start":30,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134233,"byte_end":134245,"line_start":1146,"line_end":1146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":134413,"byte_end":134425,"line_start":1155,"line_end":1155,"column_start":27,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1215},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135098,"byte_end":135117,"line_start":1176,"line_end":1176,"column_start":34,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135572,"byte_end":135591,"line_start":1200,"line_end":1200,"column_start":41,"column_end":60},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":135939,"byte_end":135958,"line_start":1218,"line_end":1218,"column_start":35,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136071,"byte_end":136090,"line_start":1226,"line_end":1226,"column_start":27,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136255,"byte_end":136274,"line_start":1234,"line_end":1234,"column_start":32,"column_end":51},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":136879,"byte_end":136884,"line_start":1256,"line_end":1256,"column_start":29,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":7985}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137307,"byte_end":137312,"line_start":1279,"line_end":1279,"column_start":36,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":7834}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137628,"byte_end":137633,"line_start":1296,"line_end":1296,"column_start":30,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":8260}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137714,"byte_end":137719,"line_start":1303,"line_end":1303,"column_start":22,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/set.rs","byte_start":137860,"byte_end":137865,"line_start":1311,"line_end":1311,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1282},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":157847,"byte_end":157855,"line_start":23,"line_end":23,"column_start":40,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":419},"to":{"krate":21,"index":4648}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158549,"byte_end":158560,"line_start":49,"line_end":49,"column_start":51,"column_end":62},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1397},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158789,"byte_end":158800,"line_start":56,"line_end":56,"column_start":45,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1397},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":158939,"byte_end":158950,"line_start":62,"line_end":62,"column_start":52,"column_end":63},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1397},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159763,"byte_end":159770,"line_start":93,"line_end":93,"column_start":22,"column_end":29},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1420},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":159900,"byte_end":159907,"line_start":99,"line_end":99,"column_start":51,"column_end":58},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1420},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160144,"byte_end":160151,"line_start":106,"line_end":106,"column_start":49,"column_end":56},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1420},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":160297,"byte_end":160304,"line_start":112,"line_end":112,"column_start":52,"column_end":59},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1420},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161200,"byte_end":161210,"line_start":143,"line_end":143,"column_start":51,"column_end":61},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1449},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161454,"byte_end":161464,"line_start":150,"line_end":150,"column_start":56,"column_end":66},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1449},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":161624,"byte_end":161634,"line_start":156,"line_end":156,"column_start":59,"column_end":69},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1449},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162550,"byte_end":162558,"line_start":187,"line_end":187,"column_start":45,"column_end":53},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162701,"byte_end":162709,"line_start":193,"line_end":193,"column_start":52,"column_end":60},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1475},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":162984,"byte_end":162992,"line_start":202,"line_end":202,"column_start":15,"column_end":23},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":163784,"byte_end":163792,"line_start":228,"line_end":228,"column_start":15,"column_end":23},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164728,"byte_end":164735,"line_start":260,"line_end":260,"column_start":22,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":164853,"byte_end":164860,"line_start":266,"line_end":266,"column_start":39,"column_end":46},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165100,"byte_end":165107,"line_start":273,"line_end":273,"column_start":49,"column_end":56},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1502},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165247,"byte_end":165254,"line_start":279,"line_end":279,"column_start":52,"column_end":59},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1502},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165697,"byte_end":165706,"line_start":294,"line_end":294,"column_start":22,"column_end":31},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1523},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":165826,"byte_end":165835,"line_start":300,"line_end":300,"column_start":39,"column_end":48},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1523},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166077,"byte_end":166086,"line_start":307,"line_end":307,"column_start":49,"column_end":58},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1523},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166228,"byte_end":166237,"line_start":313,"line_end":313,"column_start":52,"column_end":61},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1523},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166364,"byte_end":166372,"line_start":318,"line_end":318,"column_start":15,"column_end":23},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":166841,"byte_end":166849,"line_start":334,"line_end":334,"column_start":15,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":169879,"byte_end":169891,"line_start":422,"line_end":422,"column_start":39,"column_end":51},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1573},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170133,"byte_end":170145,"line_start":429,"line_end":429,"column_start":49,"column_end":61},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1573},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170291,"byte_end":170303,"line_start":435,"line_end":435,"column_start":52,"column_end":64},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1573},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170463,"byte_end":170471,"line_start":440,"line_end":440,"column_start":48,"column_end":56},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":419},"to":{"krate":21,"index":4947}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":170992,"byte_end":171000,"line_start":461,"line_end":461,"column_start":42,"column_end":50},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":419},"to":{"krate":21,"index":4951}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/map.rs","byte_start":171371,"byte_end":171379,"line_start":478,"line_end":478,"column_start":62,"column_end":70},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":419},"to":{"krate":21,"index":4951}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175088,"byte_end":175096,"line_start":24,"line_end":24,"column_start":37,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":940},"to":{"krate":21,"index":4648}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175743,"byte_end":175754,"line_start":49,"line_end":49,"column_start":36,"column_end":47},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1657},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":175974,"byte_end":175985,"line_start":56,"line_end":56,"column_start":36,"column_end":47},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1657},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176101,"byte_end":176112,"line_start":62,"line_end":62,"column_start":43,"column_end":54},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1657},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176874,"byte_end":176881,"line_start":92,"line_end":92,"column_start":19,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1675},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":176993,"byte_end":177000,"line_start":98,"line_end":98,"column_start":36,"column_end":43},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1675},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177228,"byte_end":177235,"line_start":105,"line_end":105,"column_start":40,"column_end":47},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1675},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":177363,"byte_end":177370,"line_start":111,"line_end":111,"column_start":43,"column_end":50},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1675},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178237,"byte_end":178245,"line_start":141,"line_end":141,"column_start":36,"column_end":44},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1699},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178365,"byte_end":178373,"line_start":147,"line_end":147,"column_start":43,"column_end":51},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1699},"to":{"krate":21,"index":4882}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":178636,"byte_end":178644,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":182923,"byte_end":182936,"line_start":284,"line_end":284,"column_start":27,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183058,"byte_end":183071,"line_start":290,"line_end":290,"column_start":32,"column_end":45},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1734},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":183380,"byte_end":183393,"line_start":303,"line_end":303,"column_start":42,"column_end":55},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1734},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184261,"byte_end":184276,"line_start":335,"line_end":335,"column_start":27,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1760},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184400,"byte_end":184415,"line_start":341,"line_end":341,"column_start":32,"column_end":47},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1760},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":184726,"byte_end":184741,"line_start":354,"line_end":354,"column_start":42,"column_end":57},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1760},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185647,"byte_end":185669,"line_start":386,"line_end":386,"column_start":27,"column_end":49},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1786},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":185800,"byte_end":185822,"line_start":392,"line_end":392,"column_start":32,"column_end":54},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1786},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186141,"byte_end":186163,"line_start":405,"line_end":405,"column_start":42,"column_end":64},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1786},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":186997,"byte_end":187005,"line_start":437,"line_end":437,"column_start":27,"column_end":35},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1811},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187122,"byte_end":187130,"line_start":443,"line_end":443,"column_start":32,"column_end":40},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1811},"to":{"krate":1,"index":9687}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187408,"byte_end":187416,"line_start":454,"line_end":454,"column_start":42,"column_end":50},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1811},"to":{"krate":21,"index":4674}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":187928,"byte_end":187936,"line_start":477,"line_end":477,"column_start":12,"column_end":20},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190070,"byte_end":190078,"line_start":546,"line_end":546,"column_start":40,"column_end":48},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":940},"to":{"krate":21,"index":4947}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190570,"byte_end":190578,"line_start":566,"line_end":566,"column_start":34,"column_end":42},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":940},"to":{"krate":21,"index":4951}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/rayon/set.rs","byte_start":190912,"byte_end":190920,"line_start":582,"line_end":582,"column_start":46,"column_end":54},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":940},"to":{"krate":21,"index":4951}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":3893,"byte_end":3902,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":4100,"byte_end":4106,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2115},"to":{"krate":1,"index":2679}},{"span":{"file_name":"/Users/mr.zhou/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.0/src/lib.rs","byte_start":4499,"byte_end":4505,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2115},"to":{"krate":4294967295,"index":4294967295}}]}